<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="hrm.contract">

	<!-- retrieve contract information -->
	<select id="retrieveContractInfo" parameterClass="string" resultClass="Contract">
		<![CDATA[
	    SELECT CONTRACT_NO          						contractNo,
		  	   A.EMPID                 						empID,
			   B.CHINESENAME								chineseName,
			   B.DEPTID										deptID,
			   HR_GET_FULL_DEPTNAME(B.DEPTID)				deptName,
		  	   SUM(FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365)) over (PARTITION BY A.EMPID ORDER BY START_CONTRACT_DATE ROWS UNBOUNDED PRECEDING) totalPeriod,
		  	   CONTRACT_TYPE_CODE    						contractTypeCode,
			   D.CODE_NAME									contractType,
		  	   CONTRACT_CONT_CODE   						contractContCode,
			   E.CODE_NAME									contractCont,
		  	   CONTRACT_KIND_CODE   						contractKindCode,
			   F.CODE_NAME									contractKind,
		  	   TO_CHAR(START_CONTRACT_DATE,'YYYY-MM-DD')  	contractStartDate,
		  	   TO_CHAR(END_CONTRACT_DATE,'YYYY-MM-DD')    	contractEndDate,
		  	   TO_CHAR(FIRST_CONTRACT_DATE,'YYYY-MM-DD')  	firstContractDate,
		  	   TO_CHAR(NEXT_CONTRACT_DATE,'YYYY-MM-DD')   	nextContractDate,
		 	   A.REMARK               						remark,
		  	   RENEWABLE            						renewable,
		  	   TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD')          createDate,
		  	   A.CREATED_BY           						createdBy,
		  	   TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD')          updateDate,
		 	   A.UPDATED_BY           						updatedBy,
		  	   A.ORDERNO              						orderNo,
		  	   A.ACTIVITY            	 					activity,
			   G.CODE_NAME									postGrade,
			   B.WORK_YEAR									workYear,
			   TO_CHAR(C.DOB,'YYYY-MM-DD')					birthday,
			   TO_CHAR(B.DATE_STARTED,'YYYY-MM-DD')			joinDate,
			   H.CODE_NAME									finalDegree, 
		  	   I.CODE_NAME									sex,
			   C.IDCARD_NO									idcardNo,
			   L.POST_NAME									post,
			   J.CODE_NAME									position,
			   FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365) contractPeriod
		 FROM HR_CONTRACT A,
		 	  HR_EMPLOYEE B,
			  HR_PERSONAL_INFO C,
			  SY_CODE D,
			  SY_CODE E,
			  SY_CODE F,
			  SY_CODE G,
			  SY_CODE H,
			  SY_CODE I,
			  SY_CODE J,
			  HR_EMP_POST K,
       		  HR_POST L
		WHERE A.EMPID = #EMPID:VARCHAR#
		  AND A.EMPID = B.EMPID(+)
		  AND A.EMPID = C.EMPID(+)
		  AND A.CONTRACT_TYPE_CODE = D.CODE_ID(+)
		  AND A.CONTRACT_CONT_CODE = E.CODE_ID(+)
		  AND A.CONTRACT_KIND_CODE = F.CODE_ID(+)
		  AND B.POST_GRADE_CODE = G.CODE_ID(+)
		  AND C.AFTER_DEGREE_CODE = H.CODE_ID(+)
		  AND C.SEXCODE = I.CODE_ID(+)	 
		  AND B.POSITION_CODE = J.CODE_ID(+)
		  AND A.EMPID = K.EMPID(+)
		  AND K.POSTID = L.POST_ID(+) 
	 ORDER BY START_CONTRACT_DATE DESC
   	   	]]>
	</select>
	
	
		<!--
		comment : check new contract is validity or not
		author : liumeng
	-->
	
	<select id="checkNewContractValidity" parameterClass="SimpleMap"
		resultClass="int">
	<![CDATA[	
		
	 select count(*) From HR_CONTRACT where empid=#empID# 
	 and 
		(
		 (start_contract_date is not null  and end_contract_date is null)
		 OR  (to_date(#beginDate#,'yyyy-mm-dd') between start_contract_date and end_contract_date)
	  ]]> 
		  <isNotEmpty prepend="OR" property="endDate">
		 <![CDATA[	 
		   (to_date(#beginDate#,'yyyy-mm-dd')<=start_contract_date 
		    and to_date(#endDate#,'yyyy-mm-dd')>=end_contract_date)
		   ]]> 
		   </isNotEmpty>
		<![CDATA[	                            
		  )               
		 and contract_type_code=#contractType#  
			  ]]> 
	</select>
	<!--
		comment : insert an item for a new contract
		author : aqing
	-->
	<insert id="addContract" parameterClass="Contract">
		<![CDATA[
			insert into HR_CONTRACT
   			(
	   			 CONTRACT_NO,
	   			 EMPID, 
	   			 CONTRACT_TYPE_CODE, 
	   			 CONTRACT_CONT_CODE, 
	   			 START_CONTRACT_DATE, 
	   			 END_CONTRACT_DATE,
	   			 REMARK
   			)
 			values
 			(
 				HR_CONTRACT_SEQ.NEXTVAL,
 				#empID#,
 				#contractTypeCode:VARCHAR#,
 				#contractContCode:VARCHAR#,
 				TO_DATE(#contractStartDate:DATE#,'YYYY-MM-DD'),
 				TO_DATE(#contractEndDate:DATE#,'YYYY-MM-DD'),
 				#remark:VARCHAR#
 			)
		]]>
	</insert>

	<!-- update contract status of HR_CONTRACT -->
	<update id="UpdateContractStatus" parameterClass="Contract">
		<![CDATA[
			   UPDATE HR_CONTRACT 
				  SET CONTRACT_CONT_CODE = 'ContractStatus01'
			   WHERE CONTRACT_NO = #contractNo#
			]]>
	</update>

	<!-- search some contracts according to some parameters,
		including EMPID,DEPTID,CHINESENAME and END_CONTRACT_DATE -->
	<select id="searchViewContract" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[
		SELECT CONTRACT_NO          					contractNo,
		  	   A.EMPID                 						empID,
			   B.CHINESENAME								as chineseName,
         B.CHINESE_PINYIN             pinyin,
         B.ENGLISHNAME                enName,
         B.KOREANNAME                 korName,
			   B.DEPTID										deptID,
			   HR_GET_FULL_DEPTNAME(B.DEPTID)				deptName,
         M.DEPTNAME                           DEPT,
         M.DEPT_EN_NAME                       ENDEPT,
         M.DEPT_KOR_NAME                      KORDEPT,
		  	   SUM(FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365)) over (PARTITION BY A.EMPID ORDER BY START_CONTRACT_DATE ROWS UNBOUNDED PRECEDING) totalPeriod,
		  	   CONTRACT_TYPE_CODE    						contractTypeCode,
			   D.CODE_NAME									contractType,
         D.CODE_EN_NAME               enContractType,
         D.CODE_KOR_NAME              korContractType,
		  	   CONTRACT_CONT_CODE   						contractContCode,
			   E.CODE_NAME									contractCont,
         E.CODE_EN_NAME               enContractCont,
         E.CODE_KOR_NAME              korContractCont,
		  	   CONTRACT_KIND_CODE   						contractKindCode,
			   F.CODE_NAME									contractKind,
         F.CODE_EN_NAME               enContractKind,
         D.CODE_KOR_NAME              korContractKind,
		  	   TO_CHAR(START_CONTRACT_DATE,'YYYY-MM-DD')  	contractStartDate,
		  	   TO_CHAR(END_CONTRACT_DATE,'YYYY-MM-DD')    	contractEndDate,
		  	   TO_CHAR(FIRST_CONTRACT_DATE,'YYYY-MM-DD')  	firstContractDate,
		  	   TO_CHAR(NEXT_CONTRACT_DATE,'YYYY-MM-DD')   	nextContractDate,
		 	   A.REMARK               						remark,
		  	   RENEWABLE            						renewable,
		  	   TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD')          createDate,
		  	   A.CREATED_BY           						createdBy,
		  	   TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD')          updateDate,
		 	   A.UPDATED_BY           						updatedBy,
		  	   A.ORDERNO              						orderNo,
		  	   A.ACTIVITY            	 					activity,
			   G.CODE_NAME									postGrade,
         G.CODE_EN_NAME               enPostGrade,
         G.CODE_KOR_NAME              korPostGrade,
			   B.WORK_YEAR									workYear,
			   TO_CHAR(C.DOB,'YYYY-MM-DD')					birthday,
			   TO_CHAR(B.DATE_STARTED,'YYYY-MM-DD')			joinDate,
			   H.CODE_NAME									finalDegree, 
         H.CODE_EN_NAME               enFinalDegree, 
         H.CODE_KOR_NAME              korFinalDegree, 
		  	   I.CODE_NAME									sex,
			   C.IDCARD_NO									idcardNo,
			   L.POST_NAME									post,
         L.POST_EN_NAME               enPost,
         L.POST_KOR_NAME              korPost,
			   J.CODE_NAME									position,
         J.CODE_EN_NAME               enPosition,
         J.CODE_KOR_NAME              korPosition,
			   FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365) contractPeriod
		 FROM HR_CONTRACT A,
		 	  HR_EMPLOYEE B,
			  HR_PERSONAL_INFO C,
			  SY_CODE D,
			  SY_CODE E,
			  SY_CODE F,
			  SY_CODE G,
			  SY_CODE H,
			  SY_CODE I,
			  SY_CODE J,
			  HR_EMP_POST K,
       		  HR_POST L,
            HR_DEPARTMENT M
		WHERE A.EMPID = B.EMPID(+)
          AND B.DEPTID = M.DEPTID 
		  	  AND A.EMPID = C.EMPID(+)
		      AND A.CONTRACT_TYPE_CODE = D.CODE_ID(+)
			  AND A.CONTRACT_CONT_CODE = E.CODE_ID(+)
			  AND A.CONTRACT_KIND_CODE = F.CODE_ID(+)
			  AND B.POST_GRADE_CODE = G.CODE_ID(+)
			  AND C.AFTER_DEGREE_CODE = H.CODE_ID(+)
			  AND C.SEXCODE = I.CODE_ID(+)	 
			  AND B.POSITION_CODE = J.CODE_ID(+)
			  AND A.EMPID = K.EMPID(+)
			  AND K.POSTID = L.POST_ID(+)
	 	]]>

		<isNotEmpty prepend="AND" property="POST">
			K.POSTID = #POST#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			EXISTS (SELECT * FROM HR_DEPARTMENT WHERE
			B.DEPTID=HR_DEPARTMENT.DEPTID START WITH
			HR_DEPARTMENT.DEPTID =#DEPTID# CONNECT BY PRIOR
			HR_DEPARTMENT.DEPTID = HR_DEPARTMENT.PARENT_DEPT_ID )
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="EMPIDORCHINESENAME">
			(A.EMPID LIKE '%'||#EMPIDORCHINESENAME#||'%' or
			B.CHINESENAME LIKE '%'||#EMPIDORCHINESENAME#||'%'
			or upper(B.CHINESE_PINYIN) LIKE '%'||upper(#EMPIDORCHINESENAME#)||'%' )
		</isNotEmpty>  
  
		<isNotEmpty prepend="AND" property="ENDp_CONTRACT_DATE">
			A.END_CONTRACT_DATE >=
			TO_DATE(#ENDp_CONTRACT_DATE#,'yyyy-mm-dd')
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ENDf_CONTRACT_DATE">
			<![CDATA[
				A.END_CONTRACT_DATE <=
				        TO_DATE(#ENDf_CONTRACT_DATE#,'yyyy-mm-dd') 
		]]>
		</isNotEmpty>
		<![CDATA[	
		ORDER BY B.EMPID,A.START_CONTRACT_DATE DESC
	]]>
	</select>  
	
	
	<select id="searchViewContractCnt" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		select count(*) from ( 
			SELECT CONTRACT_NO          					contractNo,
		  	   A.EMPID                 						empID,
			   B.CHINESENAME								as chineseName,
			   B.DEPTID										deptID,
			   HR_GET_FULL_DEPTNAME(B.DEPTID)				deptName,
		  	   SUM(FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365)) over (PARTITION BY A.EMPID ORDER BY START_CONTRACT_DATE ROWS UNBOUNDED PRECEDING) totalPeriod,
		  	   CONTRACT_TYPE_CODE    						contractTypeCode,
			   D.CODE_NAME									contractType,
		  	   CONTRACT_CONT_CODE   						contractContCode,
			   E.CODE_NAME									contractCont,
		  	   CONTRACT_KIND_CODE   						contractKindCode,
			   F.CODE_NAME									contractKind,
		  	   TO_CHAR(START_CONTRACT_DATE,'YYYY-MM-DD')  	contractStartDate,
		  	   TO_CHAR(END_CONTRACT_DATE,'YYYY-MM-DD')    	contractEndDate,
		  	   TO_CHAR(FIRST_CONTRACT_DATE,'YYYY-MM-DD')  	firstContractDate,
		  	   TO_CHAR(NEXT_CONTRACT_DATE,'YYYY-MM-DD')   	nextContractDate,
		 	   A.REMARK               						remark,
		  	   RENEWABLE            						renewable,
		  	   TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD')          createDate,
		  	   A.CREATED_BY           						createdBy,
		  	   TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD')          updateDate,
		 	   A.UPDATED_BY           						updatedBy,
		  	   A.ORDERNO              						orderNo,
		  	   A.ACTIVITY            	 					activity,
			   G.CODE_NAME									postGrade,
			   B.WORK_YEAR									workYear,
			   TO_CHAR(C.DOB,'YYYY-MM-DD')					birthday,
			   TO_CHAR(B.DATE_STARTED,'YYYY-MM-DD')			joinDate,
			   H.CODE_NAME									finalDegree, 
		  	   I.CODE_NAME									sex,
			   C.IDCARD_NO									idcardNo,
			   L.POST_NAME									post,
			   J.CODE_NAME									position,
			   FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365) contractPeriod
		 FROM HR_CONTRACT A,
		 	  HR_EMPLOYEE B,
			  HR_PERSONAL_INFO C,
			  SY_CODE D,
			  SY_CODE E,
			  SY_CODE F,
			  SY_CODE G,
			  SY_CODE H,
			  SY_CODE I,
			  SY_CODE J,
			  HR_EMP_POST K,
       		  HR_POST L
		WHERE A.EMPID = B.EMPID(+)
		  	  AND A.EMPID = C.EMPID(+)
		      AND A.CONTRACT_TYPE_CODE = D.CODE_ID(+)
			  AND A.CONTRACT_CONT_CODE = E.CODE_ID(+)
			  AND A.CONTRACT_KIND_CODE = F.CODE_ID(+)
			  AND B.POST_GRADE_CODE = G.CODE_ID(+)
			  AND C.AFTER_DEGREE_CODE = H.CODE_ID(+)
			  AND C.SEXCODE = I.CODE_ID(+)	 
			  AND B.POSITION_CODE = J.CODE_ID(+)
			  AND A.EMPID = K.EMPID(+)
			  AND K.POSTID = L.POST_ID(+)
	 	]]>

		<isNotEmpty prepend="AND" property="POST">
			K.POSTID = #POST#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			EXISTS (SELECT * FROM HR_DEPARTMENT WHERE
			B.DEPTID=HR_DEPARTMENT.DEPTID START WITH
			HR_DEPARTMENT.DEPTID =#DEPTID# CONNECT BY PRIOR
			HR_DEPARTMENT.DEPTID = HR_DEPARTMENT.PARENT_DEPT_ID )
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="EMPIDORCHINESENAME">
			(A.EMPID LIKE '%'||#EMPIDORCHINESENAME#||'%' or
			B.CHINESENAME LIKE '%'||#EMPIDORCHINESENAME#||'%'
		or upper(B.Chinese_Pinyin) LIKE '%'||upper(#EMPIDORCHINESENAME#)||'%')
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ENDp_CONTRACT_DATE">
			A.END_CONTRACT_DATE >=    
			TO_DATE(#ENDp_CONTRACT_DATE#,'yyyy-mm-dd')
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ENDf_CONTRACT_DATE">
			<![CDATA[
				A.END_CONTRACT_DATE <=
				        TO_DATE(#ENDf_CONTRACT_DATE#,'yyyy-mm-dd') 
		]]>
		</isNotEmpty>
		<![CDATA[	
		ORDER BY B.EMPID,A.START_CONTRACT_DATE DESC
		)  
	]]>
	</select>

	<!-- search Expired Contracts according to some parameters,
		including DEPTID,CONTRACT_TYPE_CODE,EMPID,CHINESENAME,END_CONTRACT_DATE -->
	<select id="searchExpiredContract" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[
		SELECT CONTRACT_NO          					contractNo,
		  	   A.EMPID                 						empID,
			   B.CHINESENAME								AS chineseName,
         B.CHINESE_PINYIN             pinyin,
         B.ENGLISHNAME                enName,
         B.KOREANNAME                 korName,
			   B.DEPTID										deptID,
			   HR_GET_FULL_DEPTNAME(B.DEPTID)				deptName,
         O.DEPTNAME                           DEPT,    
         O.DEPT_EN_NAME                       enDept,
         o.dept_kor_name                      korDept,
		  	   A.ROW_NUMBER									totalPeriod,
			   CONTRACT_TYPE_CODE    						contractTypeCode,
			   D.CODE_NAME									contractType,
         D.CODE_EN_NAME               enContractType,
         D.CODE_KOR_NAME              korContractType,
		  	   CONTRACT_CONT_CODE   						contractContCode,
			   E.CODE_NAME									contractCont,
         E.CODE_EN_NAME               enContractCont,
         E.CODE_KOR_NAME              korContractCont,
		  	   CONTRACT_KIND_CODE   						contractKindCode,
			   F.CODE_NAME									contractKind,
         F.CODE_EN_NAME               enContractKind,
         F.CODE_KOR_NAME              korContractKind,
		  	   TO_CHAR(START_CONTRACT_DATE,'YYYY-MM-DD')  	contractStartDate,
		  	   TO_CHAR(END_CONTRACT_DATE,'YYYY-MM-DD')    	contractEndDate,
		  	   TO_CHAR(END_CONTRACT_DATE+1,'YYYY-MM-DD')    contractNewBeginDate,
		  	   TO_CHAR(FIRST_CONTRACT_DATE,'YYYY-MM-DD')  	firstContractDate,
		  	   TO_CHAR(NEXT_CONTRACT_DATE,'YYYY-MM-DD')   	nextContractDate,
		 	   A.REMARK               						remark,
		  	   RENEWABLE            						renewable,
		  	   TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD')          createDate,
		  	   A.CREATED_BY           						createdBy,
		  	   TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD')          updateDate,
		 	   A.UPDATED_BY           						updatedBy,
		  	   A.ORDERNO              						orderNo,
		  	   A.ACTIVITY            	 					activity,
			   G.CODE_NAME									postGrade,
         G.CODE_EN_NAME               enPostGrade,
         G.CODE_KOR_NAME              korPostGrade,
			   B.WORK_YEAR									workYear,
			   TO_CHAR(C.DOB,'YYYY-MM-DD')					birthday,
			   TO_CHAR(B.DATE_STARTED,'YYYY-MM-DD')			joinDate,
			   H.CODE_NAME									finalDegree, 
         H.CODE_EN_NAME               enFinalDegree,
         H.CODE_KOR_NAME              korFinalDegree,
		  	   I.CODE_NAME									sex,
           I.CODE_EN_NAME               enSex,
           I.CODE_KOR_NAME              korSex,
			   C.IDCARD_NO									idcardNo,
			   L.POST_NAME									post,
         L.POST_EN_NAME               enPost,
         L.POST_KOR_NAME              korPost,
			   J.CODE_NAME									position,
         J.CODE_EN_NAME               enPosition,
         J.CODE_KOR_NAME              korPosition,
			   C.BEFORE_DEGREE_CODE  						beforeDegreeCode, 
			   M.CODE_NAME	   								beforeDegree,
         M.CODE_EN_NAME                 enBeforeDegree,
         M.CODE_KOR_NAME                korBeforeDegree,
			   C.AFTER_DEGREE_CODE   						afterDegreeCode,
			   N.CODE_NAME		   							afterDegree,
         N.CODE_EN_NAME                 enAfterDegree,
         N.CODE_KOR_NAME                korAfterDegree,
			   FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365) contractPeriod,
			   FLOOR (MONTHS_BETWEEN (SYSDATE, C.DOB) / 12)			age,
			   A.ROW_NUMBER
		 FROM (SELECT O.*,ROW_NUMBER() OVER(PARTITION BY O.EMPID ORDER BY O.END_CONTRACT_DATE) ROW_NUMBER FROM HR_CONTRACT O) A,
		 	 (select empid ,max(end_contract_date) as max_end_contract_date from HR_CONTRACT group by empid) S,
		 	  HR_EMPLOYEE B,
			  HR_PERSONAL_INFO C,
			  SY_CODE D,
			  SY_CODE E,
			  SY_CODE F,
			  SY_CODE G,
			  SY_CODE H,
			  SY_CODE I,
			  SY_CODE J,
			  HR_EMP_POST K,
       		  HR_POST L,
       		  SY_CODE M,  
       		  SY_CODE N,
            HR_DEPARTMENT O
		WHERE A.EMPID = B.EMPID(+)
          AND O.DEPTID = B.DEPTID
		  	  AND A.EMPID = C.EMPID(+)
		      AND A.CONTRACT_TYPE_CODE = D.CODE_ID(+)
			  AND A.CONTRACT_CONT_CODE = E.CODE_ID(+)
			  AND A.CONTRACT_KIND_CODE = F.CODE_ID(+)
			  AND B.POST_GRADE_CODE = G.CODE_ID(+)
			  AND C.AFTER_DEGREE_CODE = H.CODE_ID(+)
			  AND C.SEXCODE = I.CODE_ID(+)	 
			  AND B.POSITION_CODE = J.CODE_ID(+)
			  AND A.EMPID = K.EMPID(+)       
			  AND K.POSTID = L.POST_ID(+)
			  AND C.BEFORE_DEGREE_CODE = M.CODE_ID(+)
			  AND C.AFTER_DEGREE_CODE = N.CODE_ID(+)
			  AND (B.DATE_LEFT IS NULL OR B.DATE_LEFT>SYSDATE)
			  AND S.max_end_contract_date=A.END_CONTRACT_DATE
			  AND S.EMPID=A.EMPID
			 AND CONTRACT_CONT_CODE='ContractStatus01'
		]]>

		<isNotEmpty prepend="AND" property="POST">
			K.POSTID = #POST#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			EXISTS (SELECT DEPTID FROM HR_DEPARTMENT WHERE
			HR_DEPARTMENT.DEPTID=B.DEPTID START WITH DEPTID =#DEPTID#
			CONNECT BY PRIOR DEPTID = PARENT_DEPT_ID)
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ContractTypeCode">
			A.CONTRACT_TYPE_CODE = #ContractTypeCode#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="EMPIDORCHINESENAME">
			(B.EMPID LIKE '%'|| #EMPIDORCHINESENAME# ||'%' OR
			B.CHINESENAME LIKE '%'||#EMPIDORCHINESENAME#||'%'
		or upper(B.CHINESE_PINYIN) LIKE '%'||upper(#EMPIDORCHINESENAME#)||'%')  
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ENDp_CONTRACT_DATE">
			A.END_CONTRACT_DATE >=
			TO_DATE(#ENDp_CONTRACT_DATE#,'yyyy-mm-dd')
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ENDf_CONTRACT_DATE">
			<![CDATA[
			 A.END_CONTRACT_DATE <=
			        TO_DATE(#ENDf_CONTRACT_DATE#,'yyyy-mm-dd') 
			]]>
		</isNotEmpty>

		<isEmpty property="ENDp_CONTRACT_DATE">
			<isEmpty prepend="AND" property="ENDf_CONTRACT_DATE">
				<![CDATA[
					A.END_CONTRACT_DATE  >= LAST_DAY(ADD_MONTHS(SYSDATE, -3))
					AND A.END_CONTRACT_DATE  <= LAST_DAY(SYSDATE)  
				]]>
			</isEmpty>
		</isEmpty>

		<![CDATA[		                          
	    START WITH ROW_NUMBER = 1
        CONNECT BY PRIOR ROW_NUMBER = ROW_NUMBER - 1
        AND PRIOR A.EMPID = A.EMPID
		ORDER BY A.END_CONTRACT_DATE, A.EMPID
	]]>
	</select>
	 
	<select id="searchExpiredContractCnt" parameterClass="SimpleMap" resultClass="int">   
		<![CDATA[
		SELECT COUNT(*) FROM(
		SELECT CONTRACT_NO          					contractNo,
		  	   A.EMPID                 						empID,
			   B.CHINESENAME								AS chineseName,
			   B.DEPTID										deptID,
			   HR_GET_FULL_DEPTNAME(B.DEPTID)				deptName,
		  	   A.ROW_NUMBER									totalPeriod,
			   CONTRACT_TYPE_CODE    						contractTypeCode,
			   D.CODE_NAME									contractType,
		  	   CONTRACT_CONT_CODE   						contractContCode,
			   E.CODE_NAME									contractCont,
		  	   CONTRACT_KIND_CODE   						contractKindCode,
			   F.CODE_NAME									contractKind,
		  	   TO_CHAR(START_CONTRACT_DATE,'YYYY-MM-DD')  	contractStartDate,
		  	   TO_CHAR(END_CONTRACT_DATE,'YYYY-MM-DD')    	contractEndDate,
		  	   TO_CHAR(END_CONTRACT_DATE+1,'YYYY-MM-DD')    contractNewBeginDate,
		  	   TO_CHAR(FIRST_CONTRACT_DATE,'YYYY-MM-DD')  	firstContractDate,
		  	   TO_CHAR(NEXT_CONTRACT_DATE,'YYYY-MM-DD')   	nextContractDate,
		 	   A.REMARK               						remark,
		  	   RENEWABLE            						renewable,
		  	   TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD')          createDate,
		  	   A.CREATED_BY           						createdBy,
		  	   TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD')          updateDate,
		 	   A.UPDATED_BY           						updatedBy,
		  	   A.ORDERNO              						orderNo,
		  	   A.ACTIVITY            	 					activity,
			   G.CODE_NAME									postGrade,
			   B.WORK_YEAR									workYear,
			   TO_CHAR(C.DOB,'YYYY-MM-DD')					birthday,
			   TO_CHAR(B.DATE_STARTED,'YYYY-MM-DD')			joinDate,
			   H.CODE_NAME									finalDegree, 
		  	   I.CODE_NAME									sex,
			   C.IDCARD_NO									idcardNo,
			   L.POST_NAME									post,
			   J.CODE_NAME									position,
			   C.BEFORE_DEGREE_CODE  						beforeDegreeCode, 
			   M.CODE_NAME	   								beforeDegree,
			   C.AFTER_DEGREE_CODE   						afterDegreeCode,
			   N.CODE_NAME		   							afterDegree,
			   FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365) contractPeriod,
			   FLOOR (MONTHS_BETWEEN (SYSDATE, C.DOB) / 12)			age,
			   A.ROW_NUMBER
		 FROM (SELECT O.*,ROW_NUMBER() OVER(PARTITION BY O.EMPID ORDER BY O.END_CONTRACT_DATE) ROW_NUMBER FROM HR_CONTRACT O) A,
		 	  HR_EMPLOYEE B,
			  HR_PERSONAL_INFO C,
			  SY_CODE D,
			  SY_CODE E,
			  SY_CODE F,
			  SY_CODE G,
			  SY_CODE H,
			  SY_CODE I,
			  SY_CODE J,
			  HR_EMP_POST K,
       		  HR_POST L,
       		  SY_CODE M,
       		  SY_CODE N
		WHERE A.EMPID = B.EMPID(+)
		  	  AND A.EMPID = C.EMPID(+)
		      AND A.CONTRACT_TYPE_CODE = D.CODE_ID(+)
			  AND A.CONTRACT_CONT_CODE = E.CODE_ID(+)
			  AND A.CONTRACT_KIND_CODE = F.CODE_ID(+)
			  AND B.POST_GRADE_CODE = G.CODE_ID(+)
			  AND C.AFTER_DEGREE_CODE = H.CODE_ID(+)
			  AND C.SEXCODE = I.CODE_ID(+)	 
			  AND B.POSITION_CODE = J.CODE_ID(+)
			  AND A.EMPID = K.EMPID(+)
			  AND K.POSTID = L.POST_ID(+)
			  AND C.BEFORE_DEGREE_CODE = M.CODE_ID(+)
			  AND C.AFTER_DEGREE_CODE = N.CODE_ID(+)
			  AND (B.DATE_LEFT IS NULL OR B.DATE_LEFT>SYSDATE)
			 AND CONTRACT_CONT_CODE='ContractStatus01'
		]]>             

		<isNotEmpty prepend="AND" property="POST">
			K.POSTID = #POST#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			EXISTS (SELECT DEPTID FROM HR_DEPARTMENT WHERE
			HR_DEPARTMENT.DEPTID=B.DEPTID START WITH DEPTID =#DEPTID#
			CONNECT BY PRIOR DEPTID = PARENT_DEPT_ID)
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ContractTypeCode">
			A.CONTRACT_TYPE_CODE = #ContractTypeCode#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="EMPIDORCHINESENAME">
			(B.EMPID LIKE '%'|| #EMPIDORCHINESENAME# ||'%' OR
			B.CHINESENAME LIKE '%'||#EMPIDORCHINESENAME#||'%'
		   or upper(B.CHINESE_PINYIN) LIKE '%'||upper(#EMPIDORCHINESENAME#)||'%')
		</isNotEmpty>    

		<isNotEmpty prepend="AND" property="ENDp_CONTRACT_DATE">
			A.END_CONTRACT_DATE >=
			TO_DATE(#ENDp_CONTRACT_DATE#,'yyyy-mm-dd')
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ENDf_CONTRACT_DATE">
			<![CDATA[
			 A.END_CONTRACT_DATE <=
			        TO_DATE(#ENDf_CONTRACT_DATE#,'yyyy-mm-dd') 
			]]>
		</isNotEmpty>

		<isEmpty property="ENDp_CONTRACT_DATE">
			<isEmpty prepend="AND" property="ENDf_CONTRACT_DATE">
				<![CDATA[
					A.END_CONTRACT_DATE  <= LAST_DAY(ADD_MONTHS(SYSDATE, 3))
				]]>
			</isEmpty>
		</isEmpty>

		<![CDATA[		
	    START WITH ROW_NUMBER = 1
        CONNECT BY PRIOR ROW_NUMBER = ROW_NUMBER - 1
        AND PRIOR A.EMPID = A.EMPID
		ORDER BY A.END_CONTRACT_DATE, A.EMPID
		)  
	]]>
	</select>
	

	<!-- search Contracts according to some parameters,then create a excel file.
		including DEPTID,CONTRACT_TYPE_CODE,EMPID,CHINESENAME,START_CONTRACT_DATE,END_CONTRACT_DATE -->
	<select id="searchContractForOutExcel" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[
			SELECT CONTRACT_NO          					contractNo,
		  	   A.EMPID                 						empID,
			   B.CHINESENAME								as chineseName,
         B.Chinese_Pinyin             pinyin,
         B.ENGLISHNAME                enName,
         B.KOREANNAME                 korName,
			   B.DEPTID										deptID,
			   HR_GET_FULL_DEPTNAME(B.DEPTID)				deptName,
         O.DEPTNAME                           dept,
         O.DEPT_EN_NAME                       enDept,
         O.DEPT_KOR_NAME                      korDept,
		  	   SUM(FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365)) over (PARTITION BY A.EMPID ORDER BY START_CONTRACT_DATE ROWS UNBOUNDED PRECEDING) totalPeriod,
		  	   CONTRACT_TYPE_CODE    						contractTypeCode,
			   D.CODE_NAME									contractType,
         D.CODE_EN_NAME               enContractType,
         D.CODE_KOR_NAME              korContractType,
		  	   CONTRACT_CONT_CODE   						contractContCode,
			   E.CODE_NAME									contractCont,
         E.CODE_EN_NAME               enContractCont,
         E.CODE_KOR_NAME              korContractCont,
		  	   CONTRACT_KIND_CODE   						contractKindCode,
			   F.CODE_NAME									contractKind,
         F.CODE_EN_NAME               enContractKind,
         F.CODE_KOR_NAME              korContractKind,
		  	   TO_CHAR(START_CONTRACT_DATE,'YYYY-MM-DD')  	contractStartDate,
		  	   TO_CHAR(END_CONTRACT_DATE,'YYYY-MM-DD')    	contractEndDate,
		  	  floor((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/30)  contractyears,     
		  	   TO_CHAR(FIRST_CONTRACT_DATE,'YYYY-MM-DD')  	firstContractDate,
		  	   TO_CHAR(NEXT_CONTRACT_DATE,'YYYY-MM-DD')   	nextContractDate,
		 	   A.REMARK               						remark,
		  	   RENEWABLE            						renewable,
		  	   TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD')          createDate,
		  	   A.CREATED_BY           						createdBy,
		  	   TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD')          updateDate,
		 	   A.UPDATED_BY           						updatedBy,
		  	   A.ORDERNO              						orderNo,
		  	   A.ACTIVITY            	 					activity,
			   G.CODE_NAME									postGrade,
         G.CODE_EN_NAME               enPostGrade,
         G.CODE_KOR_NAME              korPostGrade,
			   B.WORK_YEAR									workYear,
			   TO_CHAR(C.DOB,'YYYY-MM-DD')					birthday,
			   TO_CHAR(B.DATE_STARTED,'YYYY-MM-DD')			joinDate,
			   H.CODE_NAME									finalDegree, 
         H.CODE_EN_NAME               enFinalDegree, 
         H.CODE_KOR_NAME              korFinalDegree, 
		  	   I.CODE_NAME									sex,
           I.CODE_EN_NAME               enSex,
           I.CODE_KOR_NAME              korSex,
			   C.IDCARD_NO									idcardNo,
			   L.POST_NAME									post,
         L.POST_EN_NAME               enPost,
         L.POST_KOR_NAME              korPost,
			   J.CODE_NAME									position,
         J.CODE_EN_NAME               enPosition,
         J.CODE_KOR_NAME              korPosition,
			   C.BEFORE_DEGREE_CODE  						beforeDegreeCode, 
			   M.CODE_NAME	   								beforeDegree,
         M.CODE_EN_NAME                 enBeforeDegree,     
         M.CODE_KOR_NAME                korBeforeDegree,
			   C.AFTER_DEGREE_CODE   						afterDegreeCode,
			   N.CODE_NAME		   							afterDegree,
         N.CODE_EN_NAME                 enAfterDegree,
         N.CODE_KOR_NAME                korAfterDegree,
			   FLOOR((END_CONTRACT_DATE-START_CONTRACT_DATE+1)/365) contractPeriod,
			   FLOOR (MONTHS_BETWEEN (SYSDATE, C.DOB) / 12)			age
		 FROM HR_CONTRACT A,
		 	  HR_EMPLOYEE B,
			  HR_PERSONAL_INFO C,
			  SY_CODE D,
			  SY_CODE E,
			  SY_CODE F,
			  SY_CODE G,
			  SY_CODE H,
			  SY_CODE I,
			  SY_CODE J,
			  HR_EMP_POST K,
        HR_DEPARTMENT O,
       		  HR_POST L,
       		  SY_CODE M,
       		  SY_CODE N
		WHERE A.EMPID = B.EMPID(+)
          AND O.DEPTID = B.DEPTID
		  	  AND A.EMPID = C.EMPID(+)
		      AND A.CONTRACT_TYPE_CODE = D.CODE_ID(+)
			  AND A.CONTRACT_CONT_CODE = E.CODE_ID(+)
			  AND A.CONTRACT_KIND_CODE = F.CODE_ID(+)
			  AND B.POST_GRADE_CODE = G.CODE_ID(+)
			  AND C.AFTER_DEGREE_CODE = H.CODE_ID(+)
			  AND C.SEXCODE = I.CODE_ID(+)	 
			  AND B.POSITION_CODE = J.CODE_ID(+)
			  AND A.EMPID = K.EMPID(+)
			  AND K.POSTID = L.POST_ID(+)
			  AND C.BEFORE_DEGREE_CODE = M.CODE_ID(+)
			  AND C.AFTER_DEGREE_CODE = N.CODE_ID(+)
			  AND (B.DATE_LEFT IS NULL OR B.DATE_LEFT > SYSDATE) 
		]]>

		<isNotEmpty prepend="AND" property="POST">
			K.POSTID = #POST#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			EXISTS (SELECT DEPTID FROM HR_DEPARTMENT WHERE
			HR_DEPARTMENT.DEPTID=B.DEPTID START WITH DEPTID =#DEPTID#
			CONNECT BY PRIOR DEPTID = PARENT_DEPT_ID)
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ContractTypeCode">
			A.CONTRACT_TYPE_CODE = #ContractTypeCode#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="EMPIDORCHINESENAME">
			(B.EMPID LIKE '%'|| #EMPIDORCHINESENAME# ||'%' OR
			B.CHINESENAME LIKE '%'||#EMPIDORCHINESENAME#||'%'
			OR UPPER(B.Chinese_Pinyin) LIKE '%'||UPPER(#EMPIDORCHINESENAME#)||'%')
		</isNotEmpty>  
  
		<isNotEmpty prepend="AND" property="contractStartDate">
			A.END_CONTRACT_DATE >=
			TO_DATE(#contractStartDate#,'yyyy-mm-dd')
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="contractEndDate">
			<![CDATA[
			 A.END_CONTRACT_DATE <=
			        TO_DATE(#contractEndDate#,'yyyy-mm-dd') 
			]]>
		</isNotEmpty>

		<![CDATA[
		ORDER BY A.EMPID,A.END_CONTRACT_DATE
	]]>
	</select>

	<!-- Search some employees who have no contracts without any parameters-->
	<select id="searchEmpWithoutContract" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[
			
        SELECT * FROM HR_EMPLOYEE  A ,HR_EMPLOYEE_V HEV  
        WHERE  A.EMPID=HEV.EMPID
        AND (A.DATE_LEFT IS NULL OR A.DATE_LEFT>SYSDATE)               	  		  			        
		]]>  

		<isNotEmpty prepend="AND" property="POST">    
			HR_EMP_POST.POSTID = #POST#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">    
			EXISTS (SELECT DEPTID FROM HR_DEPARTMENT WHERE
			HR_DEPARTMENT.DEPTID=A.DEPTID START WITH DEPTID
			=#DEPTID# CONNECT BY PRIOR DEPTID = PARENT_DEPT_ID)     
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="EMPIDORCHINESENAME">
			(A.EMPID LIKE '%'|| #EMPIDORCHINESENAME# ||'%' OR
			A.CHINESENAME LIKE '%'||#EMPIDORCHINESENAME#||'%'
			OR UPPER(A.CHINESE_PINYIN) LIKE '%'||UPPER(#EMPIDORCHINESENAME#)||'%'
			)
		</isNotEmpty>
		<![CDATA[	
		ORDER BY  A.EMPID 
	]]>
	</select>



	<select id="searchEmpWithoutContactCNT" parameterClass="SimpleMap"
		resultClass="int">
		<![CDATA[
		select count(*) from (	
        SELECT * FROM HR_EMPLOYEE  A ,HR_EMPLOYEE_V HEV  
        WHERE  A.EMPID=HEV.EMPID
        AND (A.DATE_LEFT IS NULL OR A.DATE_LEFT>SYSDATE)               	  		  			        
		]]>  

		<isNotEmpty prepend="AND" property="POST">    
			HR_EMP_POST.POSTID = #POST#
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">    
			EXISTS (SELECT DEPTID FROM HR_DEPARTMENT WHERE
			HR_DEPARTMENT.DEPTID=A.DEPTID START WITH DEPTID
			=#DEPTID# CONNECT BY PRIOR DEPTID = PARENT_DEPT_ID)     
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="EMPIDORCHINESENAME">
			(A.EMPID LIKE '%'|| #EMPIDORCHINESENAME# ||'%' OR
			A.CHINESENAME LIKE '%'||#EMPIDORCHINESENAME#||'%'
			OR UPPER(A.CHINESE_PINYIN) LIKE '%'||UPPER(#EMPIDORCHINESENAME#)||'%'
			)
		</isNotEmpty>
		<![CDATA[	
		 )
	]]>
	</select>
</sqlMap>