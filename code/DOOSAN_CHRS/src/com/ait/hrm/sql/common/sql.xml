<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="hrm.common">

	<!-- retrieve basic info by view-->
	<select id="retrieveBasicInfoByView" parameterClass="string"
		resultClass="BasicInfo">  
		<![CDATA[	  
		SELECT EMPID 			   empID,    
			   CHINESENAME 		   chineseName, 
			   NVL(PINYINNAME,' ')  pinyinName, 
			   PHOTOPATH 		   photoPath, 
		       DEPARTMENT 		   department,
		       DEPTID 			   deptID,
			   POSITION 		   position, 
			   POSITION_CODE 	   positionCode, 
			   DUTY 			   duty, 
			   DUTY_CODE 		   dutyCode,
		       POST 			   post, 
			   POST_CODE	 	   postCode, 
			   POST_COEF		   postCoef,
			   POST_GRADE_CODE 	   postGradeCode, 
			   POST_GRADE 		   postGrade,
			   POST_GROUP_NAME 	   postGroup,
		       STATUS_CODE 		   statusCode,
		       STATUS			   status, 
			   JOIN_TYPE 		   joinType, 
			   JOIN_TYPE_CODE 	   joinTypeCode, 
			   CREATE_DATE 		   createDate,
		       CREATED_BY 		   createdBy, 
			   UPDATED_BY 		   updateBy, 
			   UPDATE_DATE 		   updateDate, 
			   ORDERNO 			   orderNo, 
		       BEFORE_DEGREE_CODE  beforeDegreeCode, 
			   BEFORE_DEGREE	   beforeDegree,
			   AFTER_DEGREE_CODE   afterDegreeCode,
			   AFTER_DEGREE		   afterDegree,
			   WORK_YEAR 	   	   work_year,
			   WORK_AREA 	   	   work_area,
			   TO_CHAR(JOINDATE,'YYYY-MM-DD') 	joinDate,
			   RESIGN_TYPE_CODE	   resignTypeCode,
			   RESIGN_TYPE		   resignType,
			   TO_CHAR(DATE_LEFT,'YYYY-MM-DD')		   dateLeft,
			   TO_CHAR(DOB,'YYYY-MM-DD')		dob,
			   AGE				   age,
			   WORKAGE_MONTHS	   workMonth,
			   WORKAGE			   workAge,
			   AGE_MONTHS		   ageMonth,
			   DEPTFULLNAME		   deptFullName
		  FROM HR_EMP_BASICINFO_V A
		 WHERE A.EMPID = #EMPID#
		]]>
	</select>

	<!-- retrieve basic info -->
	<select id="retrieveBasicInfo" parameterClass="string"
		resultClass="BasicInfo">
		<![CDATA[	
			SELECT A.PERSON_ID                                                  personId,
			       A.EMPID 			   			   			 					empID, 
                   AC.CARD_NO                                                   cardNO,
				   A.CHINESENAME 	   											chineseName, 
				   NVL(A.CHINESE_PINYIN,' ')  	   								pinyinName, 
           		   A.Englishname                            					englishName,
           		   A.Koreanname                             					koreanName,
				   F.PHOTOPATH 		   											photoPath, 
			       G.DEPTNAME 		   											department,
             	   G.DEPT_EN_NAME                         						englishDept,
             	   G.DEPT_KOR_NAME                        						korDept,
				   hr_get_full_deptname (A.deptid)		   						deptFullName,
			       A.DEPTID 			   										deptID,
				   I.CODE_NAME		   											position, 
           		   I.CODE_EN_NAME                         						englishPosition,
           		   I.CODE_KOR_NAME                        						korPosition,
				   A.POSITION_CODE 	   											positionCode, 
				   J.CODE_NAME 			   										duty, 
				   A.DUTY_CODE 		   											dutyCode,
			       C.POST_NAME 			   										post,
           		   C.POST_EN_NAME                         						englishPost,
           		   C.POST_KOR_NAME                        						korPost, 
				   B.POSTID	 	   												postCode, 
				   A.POST_COEF		   											postCoef,
                   PGL.POST_GRADE_LEVEL_NAME                                    postLevelName,
				   A.POST_GRADE_CODE 	   										postGradeCode,
                   PG.CODE_NAME                                                 postGrade,
                   PG.CODE_EN_NAME                                              enPostGrade,
                   PG.CODE_KOR_NAME                                             korPostGrade,
                   C.POST_GROUP_ID 	   										    postGroupId,
				   L.CODE_NAME 		  											postGrade,
				   E.POST_GROUP_ID 	   											postGroupCode, 
				   E.POST_GROUP_NAME 	   										postGroup,
           		   E.POST_GROUP_EN_NAME                     					enPostGroup,
           		   E.POST_GROUP_KOR_NAME                    					korPostGroup,
			       A.STATUS_CODE 		   										statusCode,
			       M.CODE_NAME			   										status, 
             	   M.CODE_EN_NAME                         						englishStatus,
             	   M.CODE_KOR_NAME                        						korStatus,
				   N.CODE_NAME 		   											joinType, 
           		   N.CODE_EN_NAME                         						enJoinType,
           		   N.CODE_KOR_NAME                        						korJoinType,
				   A.JOIN_TYPE_CODE 	   										joinTypeCode, 
				   A.CREATE_DATE 		   										createDate,
			       A.CREATED_BY 		   										createdBy, 
				   A.UPDATED_BY 		   										updateBy, 
				   A.UPDATE_DATE 		   										updateDate, 
				   A.ORDERNO 			   										orderNo, 
			       F.BEFORE_DEGREE_CODE  										beforeDegreeCode, 
				   O.CODE_NAME	   												beforeDegree,
				   F.AFTER_DEGREE_CODE   										afterDegreeCode,
				   P.CODE_NAME		   											afterDegree,
				   A.WORK_YEAR 	   	   											work_year,
				   R.CODE_NAME 	   	   											work_area,
				   TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD') 						joinDate,
				   RESIGN_TYPE_CODE	   											resignTypeCode,
				   Q.CODE_NAME	   												resignType,
				   TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')		   					dateLeft,
				   TO_CHAR(F.DOB,'YYYY-MM-DD')									dob,
				   FLOOR (MONTHS_BETWEEN (SYSDATE, F.DOB) / 12)					age,
				   ROUND (MOD (MONTHS_BETWEEN (SYSDATE, A.DATE_STARTED), 12))	workMonth,
				   FLOOR (MONTHS_BETWEEN (SYSDATE, A.DATE_STARTED) / 12)		workAge,
				   ROUND (MOD (MONTHS_BETWEEN (SYSDATE, F.DOB), 12))		   	ageMonth,
				   A.COSTCENTER													costcenter,
				   S.CODE_NAME													constcenterName,
				   A.EMP_DIFF_CODE												empDiffCode
			  FROM HR_EMPLOYEE A,
	       	  	   HR_EMP_POST B,
	       		   HR_POST C,
	       		   HR_POST_GROUP E,
               	   HR_POST_GRADE_LEVEL PGL,
               	   SY_CODE PG,
	       		   HR_PERSONAL_INFO F,
	       		   HR_DEPARTMENT G,
	       		   HR_RESIGNATION H,
               (select card_no,empid from ar_emp_card where  FROM_DATE<=SYSDATE AND (TO_DATE>=SYSDATE OR TO_DATE IS NULL))AC,
	       		   SY_CODE I,
	       		   SY_CODE J,
	       		   SY_CODE L,
	       		   SY_CODE M,
	       		   SY_CODE N,
	       		   SY_CODE O,
	       		   SY_CODE P,
	       		   SY_CODE Q,
	       		   SY_CODE R,
	       		   SY_CODE S
			 WHERE A.person_id = #empid#
			   AND A.person_id = B.EMPID(+)
			   AND B.POSTID = C.POST_ID(+)
         	   AND C.POST_GROUP_ID = E.POST_GROUP_ID(+)  
			   AND A.person_id = F.EMPID(+)
			   AND A.DEPTID = G.DEPTID(+)
			   AND A.person_id = H.EMPID(+)
			   AND A.POSITION_CODE = I.CODE_ID(+)
			   AND A.DUTY_CODE = J.CODE_ID(+)
			   AND A.POST_GRADE_CODE = L.CODE_ID(+)
			   AND A.STATUS_CODE = M.CODE_ID(+)
			   AND A.JOIN_TYPE_CODE = N.CODE_ID(+)
			   AND F.BEFORE_DEGREE_CODE = O.CODE_ID(+)
			   AND F.AFTER_DEGREE_CODE = P.CODE_ID(+)
			   AND H.RESIGN_TYPE_CODE = Q.CODE_ID(+)
			   AND A.WORK_AREA = R.CODE_ID(+) 
			   AND A.COSTCENTER = S.CODE_ID(+)
         　　　　 AND A.POST_GRADE_CODE=PG.CODE_ID(+)
		   　   AND A.POST_COEF=PGL.POST_GRADE_LEVEL_ID(+) 
               AND A.person_id=AC.EMPID(+)
              -- AND A.ACTIVITY = 1
		]]>
	</select>

	<!-- retrieve department tree -->
	<select id="retrieveDeptTree" parameterClass="SimpleMap"
		resultClass="Department">
		<![CDATA[	
  
		   	SELECT A.DEPTID 	deptID, 
				   A.DEPTNAME 	deptName, 
				   A.DEPT_EN_NAME deptEnName,
               	   A.DEPT_KOR_NAME korDept,
				   A.DEPT_LEVEL deptLevel,
				   A.PARENT_DEPT_ID
		  	  FROM HR_DEPT_TREE_V A
		  	  WHERE 1 = 1  
		  	  AND A.CPNY_ID=#cpnyId:VARCHAR#
		  ]]>

		<isNotEmpty prepend="AND" property="ADMIN_ID">
			EXISTS ( SELECT
			SAD.ADMIN_DEPTID
			FROM SY_ADMIN_DEPTID SAD, SY_ADMIN SA
			WHERE SAD.ADMIN_NO = SA.ADMINNO
			AND SA.ADMINID = #ADMIN_ID:VARCHAR2#
			AND SAD.ADMIN_DEPTID = A.DEPTID
			) 
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">

			EXISTS ( SELECT *
			FROM AR_SUPERVISOR_INFO J
			WHERE J.AR_SUPERVISOR_ID = #SUPERVISOR_ID:VARCHAR2#
			AND J.SUPERVISED_DEPTID = A.DEPTID
			) 
		</isNotEmpty>

		<isEmpty property="EV_ADMIN_ID">
			<isNotEmpty prepend="AND" property="EV_ALL"> 
				<![CDATA[
				 EXISTS
				 (SELECT *
				          FROM EV_AFFIRM_RELATION EV
				         WHERE EV.AFFIRM_DEPTID = A.DEPTID )
				
				]]>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend="AND" property="EV_ADMIN_ID">
			EXISTS
			(SELECT *
			FROM EV_AFFIRM_RELATION EV
			WHERE EV.AFFIRMOR_ID = #EV_ADMIN_ID:VARCHAR2#
			AND EV.AFFIRM_DEPTID = A.DEPTID )	   
		</isNotEmpty>

		<isEmpty prepend="AND" property="END_DATE">

			(A.DATE_ENDED IS NULL OR A.DATE_ENDED > SYSDATE) AND A.Activity=1
		</isEmpty>

		<isNotEmpty prepend="AND" property="deptLevel">
			A.DEPT_LEVEL = #deptLevel:VARCHAR#
		</isNotEmpty>

	</select>


	<!-- retrieve departmentNo tree -->
	<select id="retrieveDeptTreeNo" parameterClass="SimpleMap"
		resultClass="Department">
		<![CDATA[	
  
		   	SELECT A.DEPTID 	deptID, 
				   A.DEPTNAME 	deptName, 
				   A.DEPT_EN_NAME deptEnName,
               	   A.DEPT_KOR_NAME korDept,
				   A.DEPT_LEVEL deptLevel,
				   A.PARENT_DEPT_ID parentDeptID,
				   A.CPNY_ID,
				   A.DEPTORDER
		  	  FROM HR_DEPT_TREE_V1_demoTest A
		  	  WHERE 1 = 1  
		  	  AND A.CPNY_ID=#cpnyId:VARCHAR#
		  	 AND A.ACTIVITY='1'
		  	  ORDER BY A.DEPTORDER DESC
		  ]]>


	</select>


	<!-- retrieve department tree -->
	<select id="retrieveDeptTree2" parameterClass="SimpleMap"
		resultClass="Department">
		<![CDATA[	
  
		   	SELECT A.DEPTID 	deptID, 
				   A.DEPTNAME 	deptName, 
				   A.DEPT_EN_NAME deptEnName,
               	   A.DEPT_KOR_NAME korDept,
				   A.DEPT_LEVEL deptLevel
		  	  FROM HR_DEPT_TREE_V1 A
		  	  WHERE 1 = 1  
		  	  AND A.CPNY_ID=#cpnyId:VARCHAR#
		  	  AND A.Activity=1
		  ]]>

		<isNotEmpty prepend="AND" property="ADMIN_ID">
			EXISTS ( SELECT
			SAD.ADMIN_DEPTID
			FROM SY_ADMIN_DEPTID SAD, SY_ADMIN SA
			WHERE SAD.ADMIN_NO = SA.ADMINNO
			AND SA.ADMINID = #ADMIN_ID:VARCHAR2#
			AND SAD.ADMIN_DEPTID = A.DEPTID
			) 
		</isNotEmpty>

		<!--
			<isNotEmpty prepend="AND" property="SUPERVISOR_ID"> EXISTS ( SELECT *
			FROM AR_SUPERVISOR_INFO J WHERE J.AR_SUPERVISOR_ID =
			#SUPERVISOR_ID:VARCHAR2# AND J.SUPERVISED_DEPTID = A.DEPTID )
			</isNotEmpty>
		-->
		<isEmpty property="EV_ADMIN_ID">
			<isNotEmpty prepend="AND" property="EV_ALL"> 
				<![CDATA[
				 EXISTS
				 (SELECT *
				          FROM EV_AFFIRM_RELATION EV
				         WHERE EV.AFFIRM_DEPTID = A.DEPTID )
				
				]]>
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty prepend="AND" property="EV_ADMIN_ID">
			EXISTS
			(SELECT *
			FROM EV_AFFIRM_RELATION EV
			WHERE EV.AFFIRMOR_ID = #EV_ADMIN_ID:VARCHAR2#
			AND EV.AFFIRM_DEPTID = A.DEPTID )	   
		</isNotEmpty>

		<isEmpty prepend="AND" property="END_DATE">

			(A.DATE_ENDED IS NULL OR A.DATE_ENDED > SYSDATE)  
		</isEmpty>

		<isNotEmpty prepend="AND" property="deptLevel">
			A.DEPT_LEVEL = #deptLevel:VARCHAR#
		</isNotEmpty>

	</select>




	<select id="retrieveDeptTreeNew" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		   	SELECT A.DEPTID 	ID, 
				   A.DEPTNAME 	Name, 
				   A.DEPT_EN_NAME EN_NAME
		  	  FROM HR_DEPT_TREE_V A,HR_DEPARTMENT B        
		  	  WHERE A.deptid = B.DEPTID 
		  ]]>

		<isNotEmpty prepend="AND" property="EMPID">
			A.deptID in (SELECT
			B.deptID FROM SY_ADMIN_DEPTID B, SY_ADMIN C WHERE
			B.ADMIN_NO =
			C.ADMINNO AND B.ADMIN_DEPTID = A.DEPTID AND
			C.ADMINID = #EMPID#)
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">

			EXISTS ( SELECT 'EXIST'
			FROM AR_SUPERVISOR_INFO J
			WHERE J.AR_SUPERVISOR_ID = #SUPERVISOR_ID#
			AND J.SUPERVISED_DEPTID = A.DEPTID
			) 
		</isNotEmpty>

		<isEmpty prepend="AND" property="END_DATE">

			A.DATE_ENDED IS NULL 
		</isEmpty>

	</select>

	<!-- retrieve employee list -->
	<select id="retrieveEmpListIncumbency" parameterClass="SimpleMap"
		resultClass="BasicInfo">
		<![CDATA[   
 		  		 SELECT A.EMPID								                       empID,
	    			    A.CHINESENAME        						               chineseName,
	                    NVL(A.CHINESE_PINYIN,' ')    						       pinyinName,
	                    A.ENGLISHNAME                                  			   englishName,
	    			    TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')                          dateLeft,
	    			    TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD')                       joinDate,
	    			    HPI.IDCARD_NO           					               idCard,
	    				HPI.PASSPORT_NO         					               passPort,
	                    B.DEPTNAME            					        	       department,
	                    B.DEPT_EN_NAME                                             englishDept,
	                    hr_get_full_deptname (A.deptid)		   	    	           deptFullName,
	                    A.DEPTID            						               deptID,
	                    A.POSITION_CODE        					                   positionCode,
	                    E.CODE_NAME            						               position,
	                    E.CODE_EN_NAME                                             englishPosition,
	                    A.POST_COEF            						               postCoef,
					    J.CODE_NAME									               status,
	                    J.CODE_EN_NAME                                             englishStatus,
					    A.STATUS_CODE								               statusCode
	               FROM HR_EMPLOYEE A,
	                    HR_DEPARTMENT B,
	                    SY_CODE HG,
	                    SY_CODE E,
			            HR_PERSONAL_INFO HPI,
			            SY_CODE J
	              WHERE A.DEPTID = B.DEPTID(+)
				    AND A.EMPID = HPI.EMPID(+)    
			        AND A.POSITION_CODE = E.CODE_ID(+)
			        AND A.POST_GRADE_CODE = HG.CODE_ID(+)   
				    AND A.STATUS_CODE=J.CODE_ID(+)
				    AND (A.STATUS_CODE<>'EmpStatus3' AND(A.DATE_LEFT IS NULL OR  A.DATE_LEFT > SYSDATE))
				    AND A.ACTIVITY = 1
		]]>

		<isNotEmpty prepend="AND" property="suspend">  
		<![CDATA[
			(A.EMPID NOT IN (SELECT EMPID FROM HR_SUSPENSION) 
			OR A.EMPID IN (SELECT EMPID FROM HR_SUSPENSION WHERE ACTIVITY='1' )
			)  
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="resign">
			A.EMPID NOT IN (SELECT EMPID FROM hr_resignation)         
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="CONDITION">   
			<![CDATA[
				(								
					A.CHINESENAME 		LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR  UPPER(A.CHINESE_PINYIN) LIKE '%'|| UPPER(#CONDITION:VARCHAR#)||'%'
				)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			<![CDATA[
				EXISTS (
					SELECT     *
	                     	FROM HR_DEPARTMENT B1
	                     	WHERE B1.DEPTID=A.DEPTID
	                 	START WITH B1.DEPTID = #DEPTID:VARCHAR#
	                 	CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID
	                )
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
					 (EXISTS ( SELECT *
                                FROM AR_SUPERVISOR_INFO J
                               WHERE AR_SUPERVISOR_ID = #ADMINID:VARCHAR#
                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
                              )
					        OR A.EMPID = #ADMINID:VARCHAR#
					  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">
			<![CDATA[
					 (EXISTS (SELECT *
                                FROM AR_SUPERVISOR_INFO J
                               WHERE AR_SUPERVISOR_ID = #SUPERVISOR_ID:VARCHAR#
                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
                              )
					        OR A.EMPID = #SUPERVISOR_ID:VARCHAR#
					  )
			]]>
		</isNotEmpty>

		<![CDATA[
	 	ORDER BY  A.EMPID 
		 ]]>
	</select>


	<!-- retrieve employee list -->
	<select id="retrieveArEmpList" parameterClass="SimpleMap"
		resultClass="BasicInfo">
		<![CDATA[   
 				 
        

	     SELECT A.EMPID								                       empID,
    			    A.CHINESENAME        						           chineseName,
                    NVL(A.CHINESE_PINYIN,' ')    						   pinyinName,
                    A.ENGLISHNAME                                  englishName,
                    A.KOREANNAME                                   koreanName,
    			    TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')                          dateLeft,
    			    TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD')                       joinDate,
    			    HPI.IDCARD_NO           					               idCard,
    				HPI.PASSPORT_NO         					               passPort,
                    B.DEPTNAME            					        	       department,
                    B.DEPT_EN_NAME                                   englishDept,
                    B.DEPT_KOR_NAME                                  korDept,
                    hr_get_full_deptname (A.deptid)		   	    	           deptFullName,
                    A.DEPTID            						               deptID,
                    C.POSTID            						               postCode,
                    D.POST_NAME            						               post,
                    D.POST_EN_NAME                                   englishPost,
                    D.POST_KOR_NAME                                  korPost,
                    A.POSITION_CODE        					                   positionCode,
                    E.CODE_NAME            						               position,
                    E.CODE_EN_NAME                                   englishPosition,
                    E.CODE_KOR_NAME                                  korPosition,
                    A.POST_COEF            						               postCoef,
                    HGL.POST_GRADE_LEVEL_NAME                                  postgradelevel,
                    HG.CODE_ID      						               postGradeCode,
                    HG.CODE_NAME                                         postgrade,
                    HG.CODE_EN_NAME                                      enPostGrade,
                    HG.CODE_KOR_NAME                                     korPostGrade,
				    H.POST_GROUP_NAME 	   						               postGroup,
                   H.POST_GROUP_EN_NAME                             enPostGroup,
                   H.POST_GROUP_KOR_NAME                            korPostGroup,
                    H.POST_GROUP_ID                                            postgroupid,
				    J.CODE_NAME									               status,
                    J.CODE_EN_NAME                             englishStatus,
                   J.CODE_KOR_NAME                            korStatus,
				    A.STATUS_CODE								               statusCode
               FROM HR_EMPLOYEE A,
                    HR_DEPARTMENT B,
                    HR_EMP_POST C,
                    SY_CODE HG,
                    HR_POST_GRADE_LEVEL HGL,
                    HR_POST D,
                    SY_CODE E,
                    HR_POST_GROUP H,
				    HR_PERSONAL_INFO HPI,
					SY_CODE J
               WHERE  A.DEPTID = B.DEPTID(+)
                      AND A.EMPID = C.EMPID(+)
			          AND A.EMPID = HPI.EMPID(+)    
		              AND C.POSTID = D.POST_ID(+)
		              AND A.POSITION_CODE = E.CODE_ID(+)
		              AND A.POST_COEF = HGL.POST_GRADE_LEVEL_ID(+)
		              AND A.POST_GRADE_CODE = HG.CODE_ID(+)
			          AND D.POST_GROUP_ID = H.POST_GROUP_ID(+)
                      AND A.POST_CODE=C.POSTID(+)
			          AND A.STATUS_CODE=J.CODE_ID(+)
			          AND A.ACTIVITY = 1
		              AND (A.DATE_LEFT IS NULL OR (A.DATE_LEFT > SYSDATE
		              OR TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')  BETWEEN  
		              TO_CHAR(ADD_MONTHS(to_date(TO_CHAR(SYSDATE,'YYYY-MM'),'YYYY-MM'),-1),'YYYY-MM-DD')
                      AND TO_CHAR(SYSDATE,'YYYY-MM-DD')     
		             ))
			           
		]]>
		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
				(								
					A.CHINESENAME 		LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR  UPPER(A.CHINESE_PINYIN) LIKE '%'|| UPPER(#CONDITION:VARCHAR#)||'%'
				)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			<![CDATA[
				EXISTS (
					SELECT     *
	                     	FROM HR_DEPARTMENT B1
	                     	WHERE B1.DEPTID=A.DEPTID
	                 	START WITH B1.DEPTID = #DEPTID:VARCHAR#
	                 	CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID
	                )
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
					  (EXISTS (SELECT *
                                FROM AR_SUPERVISOR_INFO J
                               WHERE AR_SUPERVISOR_ID = #ADMINID:VARCHAR#
                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
                               )
					        OR A.EMPID = #ADMINID:VARCHAR#
					  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="POSTCODE">
			<![CDATA[
    		  C.POSTID=#POSTCODE:VARCHAR#
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">
			<![CDATA[
					 (EXISTS (SELECT *
                                FROM AR_SUPERVISOR_INFO J
                               WHERE AR_SUPERVISOR_ID = #SUPERVISOR_ID:VARCHAR#
                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
                              )
					        OR A.EMPID = #SUPERVISOR_ID:VARCHAR#
					  )
			]]>
		</isNotEmpty>

		<![CDATA[
	 	ORDER BY  A.EMPID 
		 ]]>
	</select>

	<select id="getLastTransNO" parameterClass="SimpleMap"
		resultClass="string">

		select NVL(MAX(TRANS_NO),'200701-01') TRANS_NO from $tablename$ HRE,
		(SELECT MAX(TO_CHAR(CREATE_DATE,'YYYY-MM-DD HH24:MI:SS'))MAXDATE
		FROM $tablename$ )A
		WHERE TO_CHAR( HRE.CREATE_DATE,'YYYY-MM-DD HH24:MI:SS')=A.MAXDATE
		                                         
   </select>

	<select id="retrieveEmpListIncumbencyCNT" parameterClass="SimpleMap"
		resultClass="int">             
		<![CDATA[   
 				 
             SELECT COUNT(A.EMPID)  cnt
               FROM HR_EMPLOYEE A,
                    HR_DEPARTMENT B,
                    HR_EMP_POST C,
                    HR_POST_GRADE HG,            
                    HR_POST_GRADE_LEVEL HGL,
                    HR_POST D,
                    SY_CODE E,
                    HR_POST_GROUP H,
				    HR_PERSONAL_INFO HPI,
					SY_CODE J
               WHERE  A.DEPTID = B.DEPTID(+)
                      AND A.EMPID = C.EMPID(+)
			          AND A.EMPID = HPI.EMPID(+)    
		              AND C.POSTID = D.POST_ID(+)
		              AND A.POSITION_CODE = E.CODE_ID(+)
		              AND A.POST_COEF = HGL.POST_GRADE_LEVEL_ID(+)
		              AND HG.POST_GRADE_ID(+)=A.POST_GRADE_CODE   
			          AND D.POST_GROUP_ID = H.POST_GROUP_ID(+)
                      AND A.POST_CODE=C.POSTID(+)  
			          AND A.STATUS_CODE=J.CODE_ID(+)
			          AND (A.STATUS_CODE<>'EmpStatus3' AND(A.DATE_LEFT IS NULL OR  A.DATE_LEFT > SYSDATE))
			          AND A.ACTIVITY = 1
			           
		]]>

		<isNotEmpty prepend="AND" property="suspend">  
		<![CDATA[
			(A.EMPID NOT IN (SELECT EMPID FROM HR_SUSPENSION) 
			OR A.EMPID IN (SELECT EMPID FROM HR_SUSPENSION WHERE ACTIVITY='1' )
			)  
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="resign">
			A.EMPID NOT IN (SELECT EMPID FROM hr_resignation)         
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
				(	
					A.CHINESENAME 		LIKE '%'||#CONDITION#||'%'
					OR A.EMPID 			LIKE '%'||#CONDITION#||'%'
					OR upper(A.CHINESE_PINYIN) LIKE '%'||upper(#CONDITION#)||'%'
				)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			<![CDATA[
				EXISTS (
					SELECT     *
	                     	FROM HR_DEPARTMENT B1
	                     	WHERE B1.DEPTID=A.DEPTID
	                 	START WITH B1.DEPTID = #DEPTID:VARCHAR#
	                 	CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID
	                )
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
    		         (EXISTS (SELECT *
                                FROM AR_SUPERVISOR_INFO J
                               WHERE AR_SUPERVISOR_ID = #ADMINID:VARCHAR#
                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
                               )
					        OR A.EMPID = #ADMINID:VARCHAR#
					  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="POSTCODE">
			<![CDATA[
    		  C.POSTID=#POSTCODE:VARCHAR#
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">
			<![CDATA[
					 (EXISTS (SELECT *
                                FROM AR_SUPERVISOR_INFO J
                               WHERE AR_SUPERVISOR_ID = #SUPERVISOR_ID:VARCHAR#
                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
                              )
					        OR A.EMPID = #SUPERVISOR_ID:VARCHAR#
					  )
			]]>
		</isNotEmpty>

		<![CDATA[
	 	ORDER BY  A.EMPID 
		 ]]>
	</select>

	<!-- Retrieve post list -->
	<select id="retrievePostList" resultClass="SimpleMap">
		<![CDATA[
				SELECT POST_ID ID,
					   POST_NAME NAME,
					   POST_EN_NAME EN_NAME
				  FROM HR_POST
				ORDER BY POST_ID
			]]>
	</select>


	<!-- Retrieve postgrade list -->
	<select id="retrievePostGradeList" resultClass="SimpleMap">
		<![CDATA[
	 select 
     POST_GRADE_ID ID,
     POST_GRADE_NAME NAME,
     POST_GRADE_EN_NAME EN_NAME
     from hr_post_grade
     ORDER BY POST_GRADE_ID
			]]>
	</select>


	<!-- Retrieve postgrade list -->
	<select id="retrieveGradeLevelList" resultClass="SimpleMap">
		<![CDATA[
	 select 
     POST_GRADE_LEVEL_ID ID,
     POST_GRADE_LEVEL_NAME NAME,
     POST_GRADE_LEVEL_EN_NAME EN_NAME
     from hr_post_grade_level
     ORDER BY POST_GRADE_LEVEL_ID
     
			]]>
	</select>

	<!-- Retrieve Employee ChinseName -->
	<select id="getChineseNameByEmpId" resultClass="string"
		parameterClass="string">
		<![CDATA[
				SELECT CHINESENAME FROM HR_EMPLOYEE WHERE EMPID=#EMPID:VARCHAR#
			]]>
	</select>

	<!-- Retrieve Employee simple -->
	<select id="getSimpleEmpByEmpId" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[
				SELECT HR.CHINESENAME,NVL(HR.CHINESE_PINYIN,' ') AS CHINESE_PINYIN,HR.ENGLISHNAME,HR.KOREANNAME,HR.EMPID 
					FROM HR_EMPLOYEE HR 
				   WHERE person_id=#EMPID:VARCHAR#
			]]>
	</select>


	<!-- Retrieve Employee ChinsePinyinName -->
	<select id="getChinesePinYinNameByEmpId" resultClass="string"
		parameterClass="string">
		<![CDATA[
				SELECT NVL(CHINESE_PINYIN,' ') AS CHINESE_PINYIN FROM HR_EMPLOYEE WHERE EMPID=#EMPID:VARCHAR#
			]]>
	</select>

	<!-- retrieveUpgradeList -->
	<select id="retrieveUpgradeList" resultClass="Order">
		<![CDATA[
		            
		            
		SELECT distinct
		      '任'||HE.DEPTNAME||'部门'||hei.POST||'职务,'||hei.POSITION||'职位,'||TO_CHAR(hei.START_DATE,'YY')||'年'||TO_CHAR(hei.START_DATE,'MM')||'月'||TO_CHAR(hei.START_DATE,'DD')||'日'||'生效'  content,
		      he.CHINESENAME name,he.chinese_pinyin pinyin, he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      HE.DEPTNAME dept,HE.dept_en_name englishdept,HE.korDept kordept,
		      hei.POST post,he.englishpost,he.korpost,
		      hei.POSITION position,he.englishposition,he.korposition,
		      hei.TRANS_NO  transNo,
          TO_CHAR(HEI.START_DATE,'YYYY-MM-DD') AS START_DATE  
		      FROM HR_EXPERIENCE_INSIDE hei ,HR_EMPLOYEE_V  he
		      WHERE TO_CHAR(START_DATE,'YYYY-MM-DD')   
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD')  
		      AND he.empid=hei.empid
		      AND HEI.TRANS_CODE <> 'TransCode1_100' 
		      and he.join_type_code='EmpDivision1'   
		      Union All
		      
           SELECT distinct
		      '职员录用'  content,
		      he.CHINESENAME name, he.chinese_pinyin pinyin,he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      HE.DEPTNAME dept,HE.dept_en_name englishdept,HE.korDept kordept,
		      hei.POST post,he.englishpost,he.korpost,
		      hei.POSITION position   ,he.englishposition,he.korposition,
		      hei.TRANS_NO  transNo,
          TO_CHAR(HEI.START_DATE,'YYYY-MM-DD') AS START_DATE
		     FROM HR_EXPERIENCE_INSIDE hei ,HR_EMPLOYEE_V  he 
		      WHERE TO_CHAR(START_DATE,'YYYY-MM-DD')   
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD')  
		      AND he.empid=hei.empid
		      AND HEI.TRANS_CODE = 'TransCode1_100' 
		      and he.join_type_code='EmpDivision1'  
		      Union All
		      
             SELECT distinct
		     TO_CHAR(TO_DATE(hei.START_DATE,'YYYY-MM-DD'),'YY')||'年'|| 
            TO_CHAR(TO_DATE(hei.START_DATE,'YYYY-MM-DD'),'MM')||'月'||
            TO_CHAR(TO_DATE(hei.START_DATE,'YYYY-MM-DD'),'DD')||'日'||'至'||
            TO_CHAR(TO_DATE(hei.end_date,'YYYY-MM-DD'),'YY')||'年'
           ||TO_CHAR(TO_DATE(hei.end_date,'YYYY-MM-DD'),'MM')||'月'
           ||TO_CHAR(TO_DATE(hei.end_date,'YYYY-MM-DD'),'DD')||'日,'||'因'||hei.suspend_reason||'休职'  content,
		      he.CHINESENAME name,he.chinese_pinyin pinyin, he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      HE.DEPARTMENT dept,HE.dept_en_name englishdept,HE.korDept kordept,
		      he.POST post,he.englishpost,he.korpost,
		      he.POSITION position    ,he.englishposition,he.korposition,
		      hei.TRANS_NO   transNo,
          HEI.START_DATE 
		     FROM HR_SUSPENSION_v hei ,HR_EMPLOYEE_V  he 
		      WHERE hei.start_date 
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD')  
		      AND he.empid=hei.empid 
		      and he.join_type_code='EmpDivision1'  
		      Union All
          
           SELECT distinct
		      TO_CHAR(hei.start_date,'YY')||'年'||TO_CHAR(hei.start_date,'MM')||'月'||TO_CHAR(hei.start_date,'DD')||'日'||'至'||TO_CHAR(hei.end_date,'YY')||'年'||TO_CHAR(hei.end_date,'MM')||'月'||TO_CHAR(hei.end_date,'DD')||'日'||',兼任'||hei.plu_contents content,
		      he.CHINESENAME name,he.chinese_pinyin pinyin,he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      HE.DEPARTMENT dept,HE.dept_en_name englishdept,HE.korDept kordept,
		      he.POST post,he.englishpost,he.korpost,
		      he.POSITION position    ,he.englishposition,he.korposition,
		      hei.TRANS_NO    transNo ,
          TO_CHAR(HEI.START_DATE,'YYYY-MM-DD') 
		     FROM hr_plurality hei ,HR_EMPLOYEE_V  he
		      WHERE to_char(hei.start_date,'YYYY-MM-DD')  
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD')  
		      AND he.empid=hei.empid 
		      and he.join_type_code='EmpDivision1'  
		       Union All
          
           SELECT distinct
		      TO_CHAR(hei.start_date,'YY')||'年'||TO_CHAR(hei.start_date,'MM')||'月'||TO_CHAR(hei.start_date,'DD')||'日'||'至'||TO_CHAR(hei.end_date,'YY')||'年'||TO_CHAR(hei.end_date,'MM')||'月'||TO_CHAR(hei.end_date,'DD')||'日'|| hei.Contents content,
		      he.CHINESENAME name,he.chinese_pinyin pinyin,he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      HE.DEPARTMENT dept,HE.dept_en_name englishdept,HE.korDept kordept,
		      he.POST post,he.englishpost,he.korpost,
		      he.POSITION position     ,he.englishposition,he.korposition,
		      hei.TRANS_NO  transNo ,
          TO_CHAR(HEI.START_DATE,'YYYY-MM-DD') 
		     FROM hr_dispatch hei ,HR_EMPLOYEE_V  he
		      WHERE to_char(hei.start_date,'YYYY-MM-DD')   
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,11),'YYYY-MM-DD')  
		      AND he.empid=hei.empid 
		      and he.join_type_code='EmpDivision1'  
		      
		         Union All
          
           SELECT distinct
		      TO_CHAR(hei.resign_date,'YY')||'年'||TO_CHAR(hei.resign_date,'MM')||'月'||TO_CHAR(hei.resign_date,'DD')||'日'|| ',因'||hei.resign_desc||'原因离职' content,
		      he.CHINESENAME name,he.chinese_pinyin pinyin,he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      he.DEPARTMENT dept,HE.dept_en_name englishdept,HE.korDept kordept,
		      he.POST post,he.englishpost,he.korpost,
		      he.POSITION position     ,he.englishposition,he.korposition,
		      hei.TRANS_NO    transNo  ,
          TO_CHAR(HEI.resign_date,'YYYY-MM-DD') AS START_DATE
		     FROM hr_resignation hei ,HR_EMPLOYEE_V  he
		      WHERE to_char(hei.resign_date,'YYYY-MM-DD')
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD')  
		      AND he.empid=hei.empid 
		      and he.join_type_code='EmpDivision1'  
		      
		     Union All
          
           SELECT distinct
		      TO_CHAR(hei.startdate,'YY')||'年'||TO_CHAR(hei.startdate,'MM')||'月'||TO_CHAR(hei.startdate,'DD')||'日'|| '至'||TO_CHAR(hei.enddate,'YY')||'年'||TO_CHAR(hei.enddate,'MM')||'月'||TO_CHAR(hei.enddate,'DD')||'日'||'期间，进行'||hei.studyname content,
		      he.CHINESENAME name,he.chinese_pinyin pinyin,he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      he.DEPARTMENT dept,HE.dept_en_name englishdept,HE.korDept kordept,
		      he.POST post,he.englishpost,he.korpost,
		      he.POSITION position      ,he.englishposition,he.korposition,
		      hei.TRANS_ID    transNo ,
          TO_CHAR(HEI.startdate,'YYYY-MM-DD') AS START_DATE 
		     FROM hr_studying_v hei ,HR_EMPLOYEE_V  hE
		      WHERE TO_CHAR(hei.startdate,'YYYY-MM-DD')   
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD')  
		      AND he.empid=hei.empid 
		      and he.join_type_code='EmpDivision1'  
		      
		      
		       Union All
          
              SELECT distinct
		      TO_CHAR(hei.punishmentdate,'YY')||'年'||TO_CHAR(hei.punishmentdate,'MM')||'月'||TO_CHAR(hei.punishmentdate,'DD')||'日'||','||'因'||hei.punishmentcontents||','||'受到'||hei.punishmenttypename||'惩戒'  content,
		      he.CHINESENAME name,he.chinese_pinyin pinyin,he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      he.DEPARTMENT dept,hE.dept_en_name englishdept,HE.korDept kordept,
		      he.POST post,he.englishpost,he.korpost,
		      he.POSITION position   ,he.englishposition,he.korposition,
		      hei.TRANS_ID    transNo ,
          TO_CHAR(hei.punishmentdate,'YYYY-MM-DD') AS START_DATE
		      FROM HR_PUNISHMENT_v hei ,HR_EMPLOYEE_V  he
		      WHERE TO_CHAR(punishmentdate,'YYYY-MM-DD')   
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD')  
		      AND he.empid=hei.empid 
		      and he.join_type_code='EmpDivision1'  
		      UNION ALL
		      
		      SELECT distinct
		      TO_CHAR(TO_DATE(hei.reward_date,'YYYY-MM-DD'),'YY')||'年'||
              TO_CHAR(TO_DATE(hei.reward_date,'YYYY-MM-DD'),'MM')||'月'||
              TO_CHAR(TO_DATE(hei.reward_date,'YYYY-MM-DD'),'DD')||'日'|| ',因'||
              hei.reward_contents||',被授予'||hei.reward_type content,
		      he.CHINESENAME name,he.chinese_pinyin pinyin,he.ENGLISHNAME englishname,he.KOREANNAME korname,
		      he.DEPARTMENT dept,HE.dept_en_name englishdept,HE.korDept kordept,
		      he.POST post,he.englishpost,he.korpost,                            
		      he.POSITION position      ,he.englishposition,he.korposition,
		      hei.TRANS_NO    transNo ,
          HEI.reward_date 
		     FROM hr_reward_v hei ,HR_EMPLOYEE_V  he
		      WHERE hei.reward_date
		      BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD')  
		      AND he.empid=hei.empid
		      and he.join_type_code='EmpDivision1' 

			ORDER BY START_DATE DESC
			]]>
	</select>

	<!-- get deptid -->
	<select id="getDeptid" parameterClass="string" resultClass="string">
		<![CDATA[
				SELECT DEPTID FROM HR_EMPLOYEE T WHERE T.EMPID=#adminid#
			]]>
	</select>

	<!-- get OtConfirmCnt -->
	<select id="getOtConfirmCnt" parameterClass="SimpleMap"
		resultClass="int">
		<![CDATA[				
  		   SELECT COUNT(distinct o.APPLY_OT_NO)
				  FROM 
				       ESS_APPLY_OT O,
				       HR_EMPLOYEE C,
				       (SELECT APPLY_NO,MAX(AFFIRM_FLAG) MAXFLAG,min(AFFIRM_FLAG) MINFLAG
				          FROM ESS_AFFIRM
				         WHERE APPLY_TYPE = 'OtApply'
				           AND apply_no in (select apply_ot_no from ESS_APPLY_OT where activity=0)
				         GROUP BY APPLY_NO
				         ORDER BY APPLY_NO) B
				 WHERE B.APPLY_NO = O.APPLY_OT_NO
				   AND O.EMPID = C.PERSON_ID
				   AND O.ACTIVITY = 0
				   and b.MINFLAG=1
				   and b.MAXFLAG=1
				   
				   AND C.CPNY_ID = #cpnyId:varchar#
		      
		]]>
	</select>

	<!-- get Leave\evection\training\ConfirmCnt -->
	<select id="getConfirmCnt" resultClass="int" parameterClass="SimpleMap">
		<![CDATA[				
				SELECT count(distinct o.LEAVE_NO)
				  FROM 
				       ESS_LEAVE_APPLY_TB O,
				       HR_EMPLOYEE C,
				       (SELECT APPLY_NO,MAX(AFFIRM_FLAG) MAXFLAG,min(AFFIRM_FLAG) MINFLAG
				          FROM ESS_AFFIRM
				         WHERE APPLY_TYPE = #Type# 				         
				         GROUP BY APPLY_NO
				         ORDER BY APPLY_NO) B
				 WHERE B.APPLY_NO = O.LEAVE_NO
				   AND O.LEAVE_EMPID = C.PERSON_ID
				   AND O.ACTIVITY = 0
				   and b.MINFLAG=1
				   AND B.MAXFLAG=1
			
				   AND C.CPNY_ID = #cpnyId:varchar#
		]]>
	</select>


	<select id="getResignInfo" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[				
		  SELECT HEI.TRANS_NO, TO_CHAR(hei.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
          get_parent_dept_name(he.deptid)deptname, HE.CHINESENAME,hei.resign_date,
          he.POST,he.POSITION, HEI.resign_desc,SY.CODE_NAME regintypename,
          HEE.chinesename 
          FROM hr_resignation HEI,HR_EMPLOYEE_V HE,HR_EMPLOYEE_V HEE,sy_code sy
          WHERE HE.empid(+)=HEI.EMPID  
          AND HEE.empid(+)=HEI.CREATED_BY
          AND HEI.RESIGN_TYPE_CODE=sy.code_id(+)
          AND HEI.TRANS_NO =(SELECT TRANS_NO FROM hr_resignation WHERE EMPID=#empid#
          AND RESIGN_NO=(SELECT MAX(RESIGN_NO) FROM hr_resignation WHERE EMPID=#empid#))
		]]>
	</select>

	<select id="getRewardInfo" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[				
		     SELECT 
		      get_parent_dept_name(he.deptid)deptname, he.CHINESENAME ,he.POSITION,he.POST,
		      reward_contents ,hei.reward_type rewardtype,hei.reward_bonus,
		      hei.TRANS_NO   TRANS_NO, hei.reward_date, hei.create_date CREATE_DATE
		      FROM hr_reward_v hei ,HR_EMPLOYEE_V  he
		      WHERE  HE.empid(+)=HEI.EMPID  
		      AND HEI.TRANS_NO =(SELECT TRANS_NO FROM hr_reward_v WHERE EMPID=#empid#
             AND reward_no=(select max(reward_no) from hr_reward_v where empid=#empid#))
          
		]]>
	</select>


	<select id="getPulishInfo" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[				
		               
      SELECT 
		  get_parent_dept_name(he.deptid)deptname,he.CHINESENAME ,he.POST,he.POSITION,punishmentdate
              ,hei.punishmentcontents,hei.punishmenttypename ,hei.violationtypename,
		      hei.TRANS_ID    TRANSNO , hei.createdate CREATE_DATE,
          hee.chinesename CHINESENAME
		      FROM HR_PUNISHMENT_v hei ,HR_EMPLOYEE_V  he,HR_EMPLOYEE_V hee  
		      WHERE  HE.empid(+)=hei.empid
		      AND hee.empid(+)= hei.creatorid
		      AND hei.TRANS_ID =(SELECT TRANS_ID FROM HR_PUNISHMENT_v WHERE EMPID=#empid#
              AND SEQ_PUN_NO=(SELECT MAX(SEQ_PUN_NO) FROM HR_PUNISHMENT_v WHERE EMPID=#empid#))
		]]>
	</select>


	<select id="getSdutyingInfo" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[				
		               
    SELECT 
		 get_parent_dept_name(he.deptid)deptname, he.CHINESENAME ,he.POST,he.POSITION,
        hei.startdate,hei.enddate ,hei.studyname,hei.studycontents,
		   hei.TRANS_ID    TRANSNO ,
        hee.chinesename CHINESENAME,
         TO_CHAR(hei.createdate,'YYYY-MM-DD') CREATE_DATE
		     FROM hr_studying_v hei  ,HR_EMPLOYEE_V  he ,HR_EMPLOYEE_V hee
		      WHERE   HE.empid(+)=hei.empid
		      AND hee.empid(+)= hei.creatorid
		     AND hei.TRANS_ID =(SELECT TRANS_ID FROM hr_studying_v WHERE EMPID=#empid#
        AND SEQ_STUDY_NO=(SELECT MAX(SEQ_STUDY_NO) FROM hr_studying_v WHERE EMPID=#empid#))
		]]>
	</select>



	<select id="getDispatchInfo" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[				
		               
     SELECT
		  get_parent_dept_name(he.deptid)deptname,he.CHINESENAME,he.POST,he.POSITION,
       hei.start_date,hei.end_date, hei.Contents CONTENT,
		     hei.TRANS_NO  TRANSENO ,
         to_char(hei.create_date,'YYYY-MM-DD') CREATE_DATE,
         hee.chinesename CHINESENAME
		     FROM hr_dispatch hei ,HR_EMPLOYEE_V  he,HR_EMPLOYEE_V hee
		      WHERE   he.empid(+)=hei.empid
		      AND hee.empid(+)= hei.created_by
		     AND hei.TRANS_NO =(SELECT TRANS_NO FROM hr_dispatch WHERE EMPID=#empid#
		       AND DISP_NO=(SELECT MAX(DISP_NO) FROM hr_dispatch WHERE EMPID=#empid#))
         
		]]>
	</select>


	<select id="getPluralityInfo" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[				
		               
       SELECT
		   get_parent_dept_name(he.deptid)deptname, he.CHINESENAME ,he.POST,he.POSITION,
            hei.start_date,hei.end_date,
            hei.plu_contents CONTENT,
		        hei.TRANS_NO    TRANSNO ,
             TO_CHAR(hei.create_date,'YYYY-MM-DD')CREATE_DATE,
             hee.chinesename CHINESENAME
		     FROM hr_plurality hei ,HR_EMPLOYEE_V  he,HR_EMPLOYEE_V hee
		      WHERE he.empid(+)=hei.empid
		      AND hee.empid(+)= hei.created_by
		     AND hei.TRANS_NO =(SELECT TRANS_NO FROM hr_plurality WHERE EMPID=#empid#
		      AND PLU_NO=(SELECT MAX(PLU_NO) FROM hr_plurality WHERE EMPID=#empid#))
		]]>
	</select>


	<select id="getSuspensionInfo" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[				
		               
       SELECT
		      get_parent_dept_name(he.deptid) deptname,he.POST,he.POSITION,
          he.CHINESENAME,hei.START_DATE,hei.end_date,hei.suspend_reason,
		      hei.TRANS_NO   TRANSNO,
          hee.chinesename CHINESENAME,
          hei.create_date  CREATE_DATE
		     FROM HR_SUSPENSION_v hei ,HR_EMPLOYEE_V  he ,HR_EMPLOYEE_V hee
		      WHERE he.empid(+)=hei.empid
		      AND hee.empid(+)= hei.created_by
		     AND hei.TRANS_NO =(SELECT TRANS_NO FROM HR_SUSPENSION_v WHERE EMPID=#empid#
            AND SUSPEND_NO=(SELECT MAX(SUSPEND_NO) FROM HR_SUSPENSION_v WHERE EMPID=#empid#))
              
		]]>
	</select>


	<select id="getExperienceInsideInfo" resultClass="SimpleMap"
		parameterClass="SimpleMap">
		<![CDATA[					               
	    select trans_no,olddept,oldname,oldpost,oldposition,start_date,newdept,newname,newpost,newposition FROM (
	    select hri.empid,hd.deptname newdept,hre.chinesename newname,hp.post_name newpost,
	    sy.code_name newposition,hri.start_date,hri.trans_no  
	    from HR_EXPERIENCE_INSIDE hri,hr_employee  hre,hr_department hd,
	    hr_post hp,sy_code sy
	    where hri.empid=hre.empid(+)
	    and hri.post_code=hp.post_id(+)
	    and hri.position_code=sy.code_id(+)
	    and hri.deptid=hd.deptid(+)
	    and exists(select empid from HR_EXPERIENCE_INSIDE where exp_inside_no in (
	    select max(exp_inside_no)no from HR_EXPERIENCE_INSIDE group by empid)))A,
	    (
	    select hri.empid,hd.deptname olddept,hre.chinesename oldname,hp.post_name oldpost,
	    sy.code_name oldposition 
	    from hr_experience_inside_history hri,hr_employee  hre,hr_department hd,
	    hr_post hp,sy_code sy
	    where hri.empid=hre.empid(+)
	    and hri.post_code=hp.post_id(+)
	    and hri.position_code=sy.code_id(+)       
	    and hri.deptid=hd.deptid(+)
	    and exists(select empid from hr_experience_inside_history where exp_inside_history_no in (
	    select max(exp_inside_history_no)no from hr_experience_inside_history group by empid)))B
	    where A.EMPID=B.EMPID  
	    AND A.TRANS_NO =(SELECT TRANS_NO FROM HR_EXPERIENCE_INSIDE WHERE EMPID=#empid#
	    AND EXP_INSIDE_NO =(SELECT MAX(EXP_INSIDE_NO) FROM HR_EXPERIENCE_INSIDE WHERE EMPID=#empid#))
		]]>
	</select>

	<!-- NEW retrieve employee list -->
	<select id="retrieveEmpList" parameterClass="SimpleMap"
		resultClass="BasicInfo">
		<![CDATA[
		        SELECT * 
		          FROM 
		 			(SELECT  A.PERSON_ID personId,
		 			        A.EMPID								    empID,
					 		A.CHINESENAME        						chineseName,
		                    NVL(A.CHINESE_PINYIN,' ')    				pinyinName,
							TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')           dateLeft,
							TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD')        joinDate,
		                    replace(B.DEPTNAME,'&','*')					department,
		                    A.DEPTID            						deptID,
		                    A.Post_Code        						    positionCode,
		                    E.CODE_NAME            						position,
		                    A.POST_COEF            						postCoef,
		                    A.POST_GRADE_CODE      						postGradeCode,
		                    F.CODE_NAME                  				postGrade,
						    J.CODE_NAME									status,
						    A.STATUS_CODE								statusCode,
						    A.EMP_DIFF_CODE								empDiffCode,
						    CPNY.CODE_NAME cpnyName,
                            A.CPNY_ID  cpnyId,
						    ROWNUM 									 AS COLUMN_NUM
		               FROM HR_EMPLOYEE A,
		                    HR_DEPARTMENT B,
		                    SY_CODE E,
		                    SY_CODE F,
							SY_CODE J,
							SY_CODE CPNY
		               WHERE A.DEPTID = B.DEPTID(+)             
		                 AND A.Post_Code = E.CODE_ID(+)
		                 AND A.POST_GRADE_CODE = F.CODE_ID(+)
					     AND A.STATUS_CODE=J.CODE_ID(+)
					     AND A.CPNY_ID=CPNY.CODE_ID(+)
					     AND A.CPNY_ID=F.CPNY_ID(+)
					     AND NVL(A.DATE_LEFT,TO_DATE('2999-12-31','YYYY-MM-DD')) > SYSDATE-30
					     AND A.CPNY_ID=#cpnyId:VARCHAR#
					     AND A.ACTIVITY = 1
		]]>

		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
					(	
						A.CHINESENAME 		LIKE  '%'||#CONDITION:VARCHAR#||'%'
						OR A.person_id 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR  LOWER(A.CHINESE_PINYIN) LIKE '%'|| LOWER(#CONDITION:VARCHAR#)||'%'
						OR b.deptname 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR b.deptid 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			<![CDATA[
					EXISTS (
						SELECT     *
		                     	FROM HR_DEPARTMENT B1
		                     	WHERE B1.DEPTID=A.DEPTID
		                 	START WITH B1.DEPTID = #DEPTID:VARCHAR#
		                 	CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID 
		                )
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">
			<![CDATA[
						 (EXISTS ( SELECT *
	                                FROM AR_SUPERVISOR_INFO J
	                               WHERE AR_SUPERVISOR_ID = #SUPERVISOR_ID:VARCHAR#
	                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
	                              )
						        OR A.person_id = #SUPERVISOR_ID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
	    		          (EXISTS ( SELECT *
	                                FROM AR_SUPERVISOR_INFO J
	                               WHERE AR_SUPERVISOR_ID = #ADMINID:VARCHAR#
	                                 AND A.DEPTID = J.SUPERVISED_DEPTID
	                               )
						          OR A.person_id = #ADMINID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SYS_ADMINID">
			<![CDATA[
	    		   EXISTS ( SELECT SD.ADMIN_DEPTID
							  FROM SY_ADMIN_DEPTID SD, SY_ADMIN SA
							 WHERE SD.ADMIN_NO = SA.ADMINNO
							   AND SA.ADMINID = #SYS_ADMINID:VARCHAR#
							   AND A.DEPTID = SD.ADMIN_DEPTID
						        OR SA.ADMINID = #SYS_ADMINID:VARCHAR#
						  )
			]]>
		</isNotEmpty>
     
		<![CDATA[
			)
		WHERE COLUMN_NUM <= 100	
	     ORDER BY  CHINESENAME
		 ]]>
	</select>

	<!-- ORDER BY  CHINESENAME 前面有“WHERE COLUMN_NUM <= 100” 暂时去掉 -->

<!-- 查询人员数据   去掉法人判断 -->

<!-- NEW retrieve employee list -->
	<select id="retrieveEmpNotCpnyIdList" parameterClass="SimpleMap"
		resultClass="BasicInfo">
		<![CDATA[
		        SELECT * 
		          FROM 
		 			(SELECT  A.PERSON_ID personId,
		 			        A.EMPID								    empID,
					 		A.CHINESENAME        						chineseName,
		                    NVL(A.CHINESE_PINYIN,' ')    				pinyinName,
							TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')           dateLeft,
							TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD')        joinDate,
		                    replace(B.DEPTNAME,'&','*')					department,
		                    A.DEPTID            						deptID,
		                    A.Post_Code        						    positionCode,
		                    E.CODE_NAME            						position,
		                    A.POST_COEF            						postCoef,
		                    A.POST_GRADE_CODE      						postGradeCode,
		                    F.CODE_NAME                  				postGrade,
						    J.CODE_NAME									status,
						    A.STATUS_CODE								statusCode,
						    A.EMP_DIFF_CODE								empDiffCode,
						    CPNY.CODE_NAME cpnyName,
                            A.CPNY_ID  cpnyId,
						    ROWNUM 									 AS COLUMN_NUM
		               FROM HR_EMPLOYEE A,
		                    HR_DEPARTMENT B,
		                    SY_CODE E,
		                    SY_CODE F,
							SY_CODE J,
							SY_CODE CPNY
		               WHERE A.DEPTID = B.DEPTID(+)             
		                 AND A.Post_Code = E.CODE_ID(+)
		                 AND A.POST_GRADE_CODE = F.CODE_ID(+)
					     AND A.STATUS_CODE=J.CODE_ID(+)
					     AND A.CPNY_ID=CPNY.CODE_ID(+)
					     AND A.CPNY_ID=F.CPNY_ID(+)
					     AND NVL(A.DATE_LEFT,TO_DATE('2999-12-31','YYYY-MM-DD')) > SYSDATE-30
					     AND A.AD_USER_ID is not null
           			     AND A.STATUS_CODE NOT IN 'EmpStatus3'
					     AND A.ACTIVITY = 1
		]]>

		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
					(	
						A.CHINESENAME 		LIKE  '%'||#CONDITION:VARCHAR#||'%'
						OR A.person_id 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR  LOWER(A.CHINESE_PINYIN) LIKE '%'|| LOWER(#CONDITION:VARCHAR#)||'%'
						OR b.deptname 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR b.deptid 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					)
			]]>
		</isNotEmpty>

		<![CDATA[
			)
		WHERE COLUMN_NUM <= 100	
	     ORDER BY  CHINESENAME
		 ]]>
	</select>


	<!-- 获取公章list -->

	<select id="retrieveGzList" resultClass="Gzinfo"
		parameterClass="SimpleMap">
		<![CDATA[				
		               
       select t.code_no       code_no,
       t.code_id       code_id,
       t.code_name     code_name,
       t.description,
       t.parent_code   parent_code,
       t.depth,
       t.create_date   create_date,
       t.created_by,
       t.update_date,
       t.updated_by,
       t.orderno,
       t.activity,
       t.code_en_name,
       t.code_kor_name,
       t.cpny_id,
       t.r_cpny_id
  					from sy_code t
 					where t.parent_code = 'SealType' and t.activity=1
 		order by t.code_id
		]]>
	</select>


	<!-- retrieveSupervisorEmpList list  这个不用加对管理员的限制-->
	<select id="retrieveSupervisorEmpList" parameterClass="SimpleMap"
		resultClass="BasicInfo">
		<![CDATA[
		        SELECT * 
		          FROM 
		 			(SELECT  A.PERSON_ID personId,
		 			        A.EMPID								    empID,
					 		A.CHINESENAME        						chineseName,
		                    NVL(A.CHINESE_PINYIN,' ')    				pinyinName,
							TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')           dateLeft,
							TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD')        joinDate,
		                    replace(B.DEPTNAME,'&','*')					department,
		                    A.DEPTID            						deptID,
		                    A.Post_Code        						    positionCode,
		                    E.CODE_NAME            						position,
		                    A.POST_COEF            						postCoef,
		                    A.POST_GRADE_CODE      						postGradeCode,
		                    F.CODE_Name            						postGrade,
						    J.CODE_NAME									status,
						    A.STATUS_CODE								statusCode,
						    A.EMP_DIFF_CODE								empDiffCode,
						    CPNY.CODE_NAME cpnyName,
                            A.CPNY_ID  cpnyId,
						    ROWNUM 									 AS COLUMN_NUM
		               FROM HR_EMPLOYEE A,
		                    HR_DEPARTMENT B,
		                    SY_CODE E,
		                    SY_CODE F,
							SY_CODE J,
							SY_CODE CPNY
		               WHERE A.DEPTID = B.DEPTID(+)             
		                 AND A.Post_Code = E.CODE_ID(+)
		                 AND A.POST_GRADE_CODE = F.CODE_ID(+)
					     AND A.STATUS_CODE=J.CODE_ID(+)
					     AND A.CPNY_ID=CPNY.CODE_ID(+)
					     AND NVL(A.DATE_LEFT,TO_DATE('2999-12-31','YYYY-MM-DD')) > SYSDATE 
					     AND A.CPNY_ID=#cpnyId:VARCHAR#
		]]>

		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
					(	
						A.CHINESENAME 		LIKE  '%'||#CONDITION:VARCHAR#||'%'
						OR A.person_id 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR  LOWER(A.CHINESE_PINYIN) LIKE '%'|| LOWER(#CONDITION:VARCHAR#)||'%'
						OR b.deptname 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR b.deptid 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			<![CDATA[
					EXISTS (
						SELECT     *
		                     	FROM HR_DEPARTMENT B1
		                     	WHERE B1.DEPTID=A.DEPTID
		                 	START WITH B1.DEPTID = #DEPTID:VARCHAR#
		                 	CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID 
		                )
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">
			<![CDATA[
						  (EXISTS ( SELECT *
	                                FROM AR_SUPERVISOR_INFO J
	                               WHERE AR_SUPERVISOR_ID = #SUPERVISOR_ID:VARCHAR#
	                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
	                               )
						           OR A.person_id = #SUPERVISOR_ID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
	    		          (EXISTS (SELECT *
	                                FROM AR_SUPERVISOR_INFO J
	                               WHERE AR_SUPERVISOR_ID = #ADMINID:VARCHAR#
	                                 AND A.DEPTID = J.SUPERVISED_DEPTID
	                               )
						           OR A.person_id = #ADMINID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SYS_ADMINID">
			<![CDATA[
	    		   EXISTS ( SELECT SD.ADMIN_DEPTID
							  FROM SY_ADMIN_DEPTID SD, SY_ADMIN SA
							 WHERE SD.ADMIN_NO = SA.ADMINNO
							   AND SA.ADMINID = #SYS_ADMINID:VARCHAR#
							   AND A.DEPTID = SD.ADMIN_DEPTID
						        OR SA.ADMINID = #SYS_ADMINID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<![CDATA[
			)
			WHERE COLUMN_NUM <= 100
	     ORDER BY  CHINESENAME
		 ]]>
	</select>

	<!-- NEW retrieve pa employee list -->
	<select id="retrievePaEmpList" parameterClass="SimpleMap"
		resultClass="BasicInfo">
		<![CDATA[
		        SELECT * 
		          FROM 
		 			(SELECT A.EMPID								    empID,
		 					A.Person_Id								personId,
					 		A.CHINESENAME        						chineseName,
		                    NVL(A.CHINESE_PINYIN,' ')    				pinyinName,
							TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')           dateLeft,
							TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD')        joinDate,
		                    NVL(REPLACE(B.DEPTNAME,'&','*'),' ')            						department,
		                    A.DEPTID            						deptID,
		                    A.POSITION_CODE        						positionCode,
		                    E.CODE_NAME            						position,
		                    A.POST_COEF            						postCoef,
		                    A.POST_GRADE_CODE      						postGradeCode,
		                    F.CODE_NAME            						postGrade,
						    J.CODE_NAME									status,
						    A.STATUS_CODE								statusCode,
						    ROWNUM 									 AS COLUMN_NUM
		               FROM HR_EMPLOYEE A,
		                    HR_DEPARTMENT B,
		                    SY_CODE E,
		                    SY_CODE F,
							SY_CODE J
		               WHERE A.DEPTID = B.DEPTID(+)             
		                 AND A.POSITION_CODE = E.CODE_ID(+)
		                 AND A.POST_GRADE_CODE = F.CODE_ID(+)
					     AND A.STATUS_CODE=J.CODE_ID(+)
					     AND a.cpny_id = #cpnyId:varchar#
					     AND A.ACTIVITY = 1
		]]>

		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
					(	
						A.CHINESENAME 		LIKE  '%'||#CONDITION:VARCHAR#||'%'
						OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			<![CDATA[
					EXISTS (
						SELECT     *
		                     	FROM HR_DEPARTMENT B1
		                     	WHERE B1.DEPTID=A.DEPTID
		                 	START WITH B1.DEPTID = #DEPTID:VARCHAR#
		                 	CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID 
		                )
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
				     (EXISTS ( SELECT SD.ADMIN_DEPTID
							  FROM SY_ADMIN_DEPTID SD, SY_ADMIN SA
							 WHERE SD.ADMIN_NO = SA.ADMINNO
							   AND SA.ADMINID = #ADMINID:VARCHAR#
							   AND A.DEPTID = SD.ADMIN_DEPTID) OR A.EMPID = #ADMINID:VARCHAR#)
			]]>
		</isNotEmpty>

		<![CDATA[
			)
			WHERE COLUMN_NUM <= 100
	     ORDER BY  EMPID 
		 ]]>
	</select>

	<!-- NEW retrieve SyAffirm employee list -->
	<select id="retrieveSyAffirmList" parameterClass="SimpleMap"
		resultClass="BasicInfo">
		<![CDATA[
				SELECT HR.PERSON_ID                     AS personId,
				       HR.EMPID							AS empID,
				       HR.CHINESENAME					AS chineseName,
				       NVL(HR.CHINESE_PINYIN,' ')	 	AS pinyinName,
					   NVL(REPLACE(DEPT.DEPTNAME,'&','*'),' ')	 AS department,
				       HR.DEPTID						AS deptID
				  FROM (SELECT DISTINCT AFFIRMOR_ID FROM SY_AFFIRM_RELATION_TB ) AFFIRM, 
				       HR_EMPLOYEE HR, 
				       HR_DEPARTMENT DEPT
				 WHERE AFFIRM.AFFIRMOR_ID = HR.PERSON_ID
				   AND HR.DEPTID = DEPT.DEPTID
				   AND HR.CPNY_ID=#cpnyId:VARCHAR#
				   AND NVL(HR.DATE_LEFT,TO_DATE('2999-12-31','YYYY-MM-DD')) > SYSDATE 
		]]>
		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
				(	
					    HR.CHINESENAME 		LIKE  '%'||#CONDITION:VARCHAR#||'%'
					OR  HR.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR  LOWER(HR.CHINESE_PINYIN) LIKE '%'|| LOWER(#CONDITION:VARCHAR#)||'%'
				)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
    		   EXISTS (
    		   		SELECT PERSON_ID FROM  
    		   			(
    		   			SELECT PERSON_ID FROM HR_EMPLOYEE H2 
    		   				WHERE EXISTS
    		   				(
	    		   			SELECT S2.ADMINID AS EMPID
			              		FROM SY_ADMIN_DEPTID S1, SY_ADMIN S2
			             		WHERE S2.ADMINNO = S1.ADMIN_NO
			               		AND S2.ADMINID = #ADMINID:VARCHAR#
			               		AND H2.DEPTID=S1.ADMIN_DEPTID
		               		)
					 	UNION
					 	SELECT #ADMINID:VARCHAR# AS PERSON_ID FROM DUAL  
					 ) S3
					 WHERE S3.PERSON_ID = HR.PERSON_ID
		       )
			]]>
		</isNotEmpty>

		<![CDATA[
	 			ORDER BY  HR.EMPID 
		 ]]>
	</select>

	<!-- NEW retrieve Instead Affirm list -->
	<select id="retrieveInsteadAffirmList" parameterClass="SimpleMap"
		resultClass="BasicInfo">
		<![CDATA[
			SELECT * 
		      FROM(
				SELECT HR.EMPID							AS empID,
				       HR.CHINESENAME					AS chineseName,
				       NVL(HR.CHINESE_PINYIN,' ')		AS pinyinName,
				       DEPT.DEPTNAME					AS department,
				       HR.DEPTID						AS deptID,
				       ROWNUM 							AS COLUMN_NUM,
				       hr.person_id 					AS personId
				  FROM HR_EMPLOYEE HR, 
				       HR_DEPARTMENT DEPT
				 WHERE HR.DEPTID = DEPT.DEPTID
				   AND NVL(HR.DATE_LEFT,TO_DATE('2999-12-31','YYYY-MM-DD')) > SYSDATE
				   AND (HR.person_id > #ADMINID:VARCHAR# OR  HR.person_id < #ADMINID:VARCHAR#) 
				   AND EXISTS ( SELECT SA.AFFIRMOR_ID
		                          FROM SY_AFFIRM_RELATION_TB_AUTO SA
		                         WHERE SA.AFFIRMOR_ID_BACK = #ADMINID:VARCHAR# 
                       )
                  AND HR.ACTIVITY = 1
		]]>
		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
				(	
					    HR.CHINESENAME 		LIKE  '%'||#CONDITION:VARCHAR#||'%'
					OR  HR.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR  LOWER(HR.CHINESE_PINYIN) LIKE '%'|| LOWER(#CONDITION:VARCHAR#)||'%'
				)
			]]>
		</isNotEmpty>       

		<![CDATA[
				)
			WHERE COLUMN_NUM <= 100
	     ORDER BY CHINESENAME 
		 ]]>
	</select>

	<!-- NEW retrieveHrPersonId -->
	<select id="retrieveHrPersonId" parameterClass="SimpleMap"
		resultClass="string">
		<![CDATA[
				SELECT HR.PERSON_ID
				  FROM HR_EMPLOYEE HR
				 WHERE HR.EMPID = #empId:VARCHAR#
				   AND HR.CPNY_ID = #cnpyId:VARCHAR#
				   
				 
		]]>

		<isNotEmpty prepend="AND" property="supervisorId">
			<![CDATA[
					EXISTS (SELECT AR_SUPERVISOR_ID
				          FROM AR_SUPERVISOR_INFO AR
				         WHERE AR.SUPERVISED_DEPTID = HR.DEPTID
				           AND (AR.AR_SUPERVISOR_ID = #supervisorId:VARCHAR# OR HR.PERSON_ID = #supervisorId:VARCHAR#))
			]]>
		</isNotEmpty>    
		
		<![CDATA[
		      AND ROWNUM = 1
			ORDER BY HR.CALC_FLAG DESC
		]]>
	</select>

	<select id="retrieveItemGroup" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[
			SELECT A.CODE_ID CODE_ID,
			       A.CODE_NAME CODE_NAME
			FROM SY_CODE A
			WHERE A.PARENT_CODE = 'ArItemGroup'
			AND (A.CPNY_ID = #cpnyId:VARCHAR# OR A.CPNY_ID IS NULL)
		]]>
	</select>

	<select id="retrieveItemGroupCut" parameterClass="SimpleMap"
		resultClass="int">
		<![CDATA[
			SELECT COUNT(*) CUT
			FROM SY_CODE A
			WHERE A.PARENT_CODE = 'ArItemGroup'
			AND (A.CPNY_ID = #cpnyId:VARCHAR# OR A.CPNY_ID IS NULL)
		]]>
	</select>

	<!-- NEW retrieve employee list -->
	<select id="retrieveEmpMapList" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[
		        SELECT * 
		          FROM 
		 			(SELECT  A.PERSON_ID 								personId,
		 			        A.EMPID									    empID,
					 		A.CHINESENAME        						chineseName,
		                    NVL(A.CHINESE_PINYIN,' ')    				pinyinName,
							TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')           dateLeft,
							TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD')        joinDate,
		                    replace(B.DEPTNAME,'&','*')					department,
		                    A.DEPTID            						deptID,
		                    A.Post_Code        						    positionCode,
		                    E.CODE_NAME            						position,
		                    A.POST_COEF            						postCoef,
		                    A.POST_GRADE_CODE      						postGradeCode,
		                    F.CODE_NAME                  				postGrade,
						    J.CODE_NAME									status,
						    A.STATUS_CODE								statusCode,
						    A.EMP_DIFF_CODE								empDiffCode,
						    CPNY.CODE_NAME cpnyName,
                            A.CPNY_ID  cpnyId,
						    ROWNUM 									 AS COLUMN_NUM
		               FROM HR_EMPLOYEE A,
		                    HR_DEPARTMENT B,
		                    SY_CODE E,
		                    SY_CODE F,
							SY_CODE J,
							SY_CODE CPNY
		               WHERE A.DEPTID = B.DEPTID(+)             
		                 AND A.Post_Code = E.CODE_ID(+)
		                 AND A.POST_GRADE_CODE = F.CODE_ID(+)
					     AND A.STATUS_CODE=J.CODE_ID(+)
					     AND A.CPNY_ID=CPNY.CODE_ID(+)
					     AND A.CPNY_ID=F.CPNY_ID(+)
					     AND NVL(A.DATE_LEFT,TO_DATE('2999-12-31','YYYY-MM-DD')) > SYSDATE 
					     AND A.CPNY_ID=#cpnyId:VARCHAR#
					     AND A.ACTIVITY = 1
		]]>

		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
					(	
						A.CHINESENAME 		LIKE  '%'||#CONDITION:VARCHAR#||'%'
						OR A.person_id 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR  LOWER(A.CHINESE_PINYIN) LIKE '%'|| LOWER(#CONDITION:VARCHAR#)||'%'
						OR b.deptname 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR b.deptid 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			<![CDATA[
					EXISTS (
						SELECT     *
		                     	FROM HR_DEPARTMENT B1
		                     	WHERE B1.DEPTID=A.DEPTID
		                 	START WITH B1.DEPTID = #DEPTID:VARCHAR#
		                 	CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID 
		                )
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">
			<![CDATA[
						 (EXISTS ( SELECT *
	                                FROM AR_SUPERVISOR_INFO J
	                               WHERE AR_SUPERVISOR_ID = #SUPERVISOR_ID:VARCHAR#
	                                 AND A.DEPTID = J.SUPERVISED_DEPTID 
	                              )
						        OR A.person_id = #SUPERVISOR_ID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
	    		          (EXISTS ( SELECT *
	                                FROM AR_SUPERVISOR_INFO J
	                               WHERE AR_SUPERVISOR_ID = #ADMINID:VARCHAR#
	                                 AND A.DEPTID = J.SUPERVISED_DEPTID
	                               )
						          OR A.person_id = #ADMINID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SYS_ADMINID">
			<![CDATA[
	    		   EXISTS ( SELECT SD.ADMIN_DEPTID
							  FROM SY_ADMIN_DEPTID SD, SY_ADMIN SA
							 WHERE SD.ADMIN_NO = SA.ADMINNO
							   AND SA.ADMINID = #SYS_ADMINID:VARCHAR#
							   AND A.DEPTID = SD.ADMIN_DEPTID
						        OR SA.ADMINID = #SYS_ADMINID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<![CDATA[
			)
			WHERE COLUMN_NUM <= 100
	     ORDER BY  CHINESENAME
		 ]]>
	</select>

	<!-- retrieve basic info -->
	<select id="retrieveBasicInfoMap" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
			SELECT A.PERSON_ID                                                  personId,
			       A.EMPID 			   			   			 					empID, 
                   AC.CARD_NO                                                   cardNO,
				   A.CHINESENAME 	   											chineseName, 
				   NVL(A.CHINESE_PINYIN,' ')  	   								pinyinName, 
           		   A.Englishname                            					englishName,
           		   A.Koreanname                             					koreanName,
				   F.PHOTOPATH 		   											photoPath, 
			       G.DEPTNAME 		   											department,
             	   G.DEPT_EN_NAME                         						englishDept,
             	   G.DEPT_KOR_NAME                        						korDept,
				   hr_get_full_deptname (A.deptid)		   						deptFullName,
			       A.DEPTID 			   										deptID,
				   I.CODE_NAME		   											position, 
           		   I.CODE_EN_NAME                         						englishPosition,
           		   I.CODE_KOR_NAME                        						korPosition,
				   A.POSITION_CODE 	   											positionCode, 
				   J.CODE_NAME 			   										duty, 
				   A.DUTY_CODE 		   											dutyCode,
			       C.POST_NAME 			   										post,
           		   C.POST_EN_NAME                         						englishPost,
           		   C.POST_KOR_NAME                        						korPost, 
				   B.POSTID	 	   												postCode, 
				   A.POST_COEF		   											postCoef,
                   PGL.POST_GRADE_LEVEL_NAME                                    postLevelName,
				   A.POST_GRADE_CODE 	   										postGradeCode,
                   PG.CODE_NAME                                                 postGrade,
                   PG.CODE_EN_NAME                                              enPostGrade,
                   PG.CODE_KOR_NAME                                             korPostGrade,
                   C.POST_GROUP_ID 	   										    postGroupId,
				   L.CODE_NAME 		  											postGrade,
				   E.POST_GROUP_ID 	   											postGroupCode, 
				   E.POST_GROUP_NAME 	   										postGroup,
           		   E.POST_GROUP_EN_NAME                     					enPostGroup,
           		   E.POST_GROUP_KOR_NAME                    					korPostGroup,
			       A.STATUS_CODE 		   										statusCode,
			       M.CODE_NAME			   										status, 
             	   M.CODE_EN_NAME                         						englishStatus,
             	   M.CODE_KOR_NAME                        						korStatus,
				   N.CODE_NAME 		   											joinType, 
           		   N.CODE_EN_NAME                         						enJoinType,
           		   N.CODE_KOR_NAME                        						korJoinType,
				   A.JOIN_TYPE_CODE 	   										joinTypeCode, 
				   A.CREATE_DATE 		   										createDate,
			       A.CREATED_BY 		   										createdBy, 
				   A.UPDATED_BY 		   										updateBy, 
				   A.UPDATE_DATE 		   										updateDate, 
				   A.ORDERNO 			   										orderNo, 
			       F.BEFORE_DEGREE_CODE  										beforeDegreeCode, 
				   O.CODE_NAME	   												beforeDegree,
				   F.AFTER_DEGREE_CODE   										afterDegreeCode,
				   P.CODE_NAME		   											afterDegree,
				   A.WORK_YEAR 	   	   											work_year,
				   R.CODE_NAME 	   	   											work_area,
				   TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD') 						joinDate,
				   RESIGN_TYPE_CODE	   											resignTypeCode,
				   Q.CODE_NAME	   												resignType,
				   TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')		   					dateLeft,
				   TO_CHAR(F.DOB,'YYYY-MM-DD')									dob,
				   FLOOR (MONTHS_BETWEEN (SYSDATE, F.DOB) / 12)					age,
				   ROUND (MOD (MONTHS_BETWEEN (SYSDATE, A.DATE_STARTED), 12))	workMonth,
				   FLOOR (MONTHS_BETWEEN (SYSDATE, A.DATE_STARTED) / 12)		workAge,
				   ROUND (MOD (MONTHS_BETWEEN (SYSDATE, F.DOB), 12))		   	ageMonth,
				   A.COSTCENTER													costcenter,
				   S.CODE_NAME													constcenterName,
				   A.EMP_DIFF_CODE												empDiffCode
			  FROM HR_EMPLOYEE A,
	       	  	   HR_EMP_POST B,
	       		   HR_POST C,
	       		   HR_POST_GROUP E,
               	   HR_POST_GRADE_LEVEL PGL,
               	   SY_CODE PG,
	       		   HR_PERSONAL_INFO F,
	       		   HR_DEPARTMENT G,
	       		   HR_RESIGNATION H,
               (select card_no,empid from ar_emp_card where  FROM_DATE<=SYSDATE AND (TO_DATE>=SYSDATE OR TO_DATE IS NULL))AC,
	       		   SY_CODE I,
	       		   SY_CODE J,
	       		   SY_CODE L,
	       		   SY_CODE M,
	       		   SY_CODE N,
	       		   SY_CODE O,
	       		   SY_CODE P,
	       		   SY_CODE Q,
	       		   SY_CODE R,
	       		   SY_CODE S
			 WHERE A.person_id = #empId#
			   AND A.person_id = B.EMPID(+)
			   AND B.POSTID = C.POST_ID(+)
         	   AND C.POST_GROUP_ID = E.POST_GROUP_ID(+)  
			   AND A.person_id = F.EMPID(+)
			   AND A.DEPTID = G.DEPTID(+)
			   AND A.person_id = H.EMPID(+)
			   AND A.POSITION_CODE = I.CODE_ID(+)
			   AND A.DUTY_CODE = J.CODE_ID(+)
			   AND A.POST_GRADE_CODE = L.CODE_ID(+)
			   AND A.STATUS_CODE = M.CODE_ID(+)
			   AND A.JOIN_TYPE_CODE = N.CODE_ID(+)
			   AND F.BEFORE_DEGREE_CODE = O.CODE_ID(+)
			   AND F.AFTER_DEGREE_CODE = P.CODE_ID(+)
			   AND H.RESIGN_TYPE_CODE = Q.CODE_ID(+)
			   AND A.WORK_AREA = R.CODE_ID(+) 
			   AND A.COSTCENTER = S.CODE_ID(+)
         　　　　 AND A.POST_GRADE_CODE=PG.CODE_ID(+)
		   　   AND A.POST_COEF=PGL.POST_GRADE_LEVEL_ID(+) 
               AND A.person_id=AC.EMPID(+)
              -- AND A.ACTIVITY = 1
		]]>
	</select>


</sqlMap>