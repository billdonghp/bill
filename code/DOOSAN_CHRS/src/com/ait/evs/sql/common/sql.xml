<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="evs.common">

<!-- evaluate result report -->
	  
	  <!-- 添加Line页面中的工序显示 -->
	<select id="getEvscodeList3"  resultClass="SimpleMap">
		<![CDATA[	
		  SELECT  t.code_id,
		          t.code_name
		  FROM EVS_CODE T 
		  WHERE t.status!='0' and 		  
		  T.CODE_FLAG = #codeflag#
		
		]]>
		 <![CDATA[
		 	ORDER BY code_id, code_name
		 ]]>
		    
	</select>
	
	  <!-- 添加Line页面中的工序显示 -->
	<select id="getEvscodeList5"  resultClass="SimpleMap">
		<![CDATA[	
		  SELECT  t.code_id,
		          t.code_name
		  FROM EVS_CODE T 
		   WHERE t.status!='0' and  T.CODE_FLAG = 'CT'
		]]>
		 <![CDATA[
		 	ORDER BY t.code_id, t.code_name
		 ]]>
		    
	</select>
	
	
	 <!-- 添加Line页面中的工序显示 根据CODEID来获得哪个parentcodeid -->
	<select id="getEvscodeList6"  resultClass="SimpleMap">
		<![CDATA[	
		 SELECT R.CODE_ID as parentid, 
		        R.code_name as parentname
		  FROM EVS_CODE T, EVS_CODE R
		 WHERE t.status!='0' and T.code_id = #evscodeid:VARCHAR#
		   AND T.PARENT_CODE = R.CODE_ID
		   AND T.CODE_FLAG = 'LE'

		]]>
		 <![CDATA[
		 	ORDER BY parentid, parentname
		 ]]>
		    
	</select>
	
	<!-- 更新Line页面中的工序显示 -->
	<select id="getEvscodeList4"  parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[	
		 SELECT distinct t.code_id    code_id ,
		        t.code_name           code_name,   
		        t.code_en_name        code_en_name,   
		        t.create_date         create_date,
		        t.created_by          created_by,
		        t.cpny_id             cpny_id,
		        CPNY.CODE_NAME        cpnyname
		 FROM evs_code t,   SY_CODE CPNY
		 WHERE t.status!='0' and  T.code_id = #evscodeid:VARCHAR#
		   AND CPNY.CODE_ID(+) = T.CPNY_ID
  
		]]>
		 <![CDATA[
		 	ORDER BY T.code_id, T.code_name
		 ]]>
		    
	</select>
	<!-- 更新职业资格等级显示 -->
	<select id="getEvsgxjndjList"  parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[	
		 SELECT t.code_no    code_no ,
		         t.code_id    code_id ,
		        t.DJJFFROM           djjffrom,   
		        t.DJJFTO        djjfto,  
		        t.DENGJI       dengji,
		        t.create_date         create_date,
		        t.created_by          created_by,
		        t.cpny_id             cpny_id,
		        CPNY.CODE_NAME        cpnyname
		 FROM EVS_GXJNDJ t,   SY_CODE CPNY
		 WHERE t.status!='0' 
		    and  T.code_no = #evscodeid:VARCHAR#
		   AND CPNY.CODE_ID(+) = T.CPNY_ID
  
		]]>
		 <![CDATA[
		 	ORDER BY T.code_id
		 ]]>
		    
	</select>
	
	<!-- 工匠技师资格等级显示 -->
	<select id="getEvsgxjsdjList"  parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[	
		 SELECT t.code_no     ,
		         t.code_id     ,
		        t.CHINESENAME       ,   
		        t.EV_PERIOD_ID        ,  
		        t.PJWD1       ,
		         t.PJWD2       ,
		          t.PJWD3       ,
		           t.PJWD4       ,
		        t.SUMSTORE       ,
		        t.create_date    ,
		        t.created_by          
		 FROM EVS_GXJSDJ t
		 WHERE t.status!='0' 
		    and  T.code_no = #evscodeid:VARCHAR#
  
		]]>
		 <![CDATA[
		 	ORDER BY T.code_id
		 ]]>
		    
	</select>
	
	<!-- 删除Line -->
	<delete id="deleteLine">
		<![CDATA[
			DELETE EVS_CODE  T WHERE  T.CODE_ID = #evscodeid:VARCHAR#
			]]>
	</delete>
	<!-- 删除Line -->
	<delete id="deleteZyzgdj">
		<![CDATA[
		    update EVS_GXJNDJ set status ='0' where CODE_NO = #evscodeid:VARCHAR#
			]]>
	</delete>
	<!-- 删除工匠技师 -->
	<delete id="deleteGjjsdj">
		<![CDATA[
		    update EVS_GXJSDJ set status ='0' where CODE_NO = #evscodeid:VARCHAR#
			]]>
	</delete>
	<insert id="insertLine"  parameterClass="EvsCraft">
		<![CDATA[	
		  insert into EVS_CODE
   			(
	   			 CODE_NO,
	   			 code_id, 
	   			 code_name, 
	   			 parent_code, 
	   			 descriptio,
	   			 depth,
	   			 create_date,
	   			 created_by,
	   			 code_en_name,
	   			 cpny_id,
	   			 ACTIVITY,
	   			 code_flag
   			)
 			values
 			(
 				EVS_CODE_SEQ.NEXTVAL,
 				#evscodeid:VARCHAR#,
 				#evscodename:VARCHAR#,
 				#evsparentcode:VARCHAR#,
 				#descriptio:VARCHAR#,
 				#depth:VARCHAR#,
 				sysdate,
 				#empid:VARCHAR#,
 				#evsencodename:VARCHAR#,
 				#cpnyid:VARCHAR#,
 				1,
 				#flag:VARCHAR#
 			)
		]]>
	</insert>
	<insert id="insertLiner"  parameterClass="EvsCraft">
		<![CDATA[	
		  insert into EVS_CODE
   			(
	   			 CODE_NO,
	   			 code_id, 
	   			 code_name, 
	   			 parent_code, 
	   			 descriptio,
	   			 depth,
	   			 create_date,
	   			 created_by,
	   			 code_en_name,
	   			 cpny_id,
	   			 ACTIVITY,
	   			 code_flag
   			)
 			values
 			(
 				EVS_CODE_SEQ.NEXTVAL,
 				EVS_CODE_SEQ.NEXTVAL,
 				#evscodename:VARCHAR#,
 				#evsparentcode:VARCHAR#,
 				#descriptio:VARCHAR#,
 				#depth:VARCHAR#,
 				sysdate,
 				#empid:VARCHAR#,
 				#evsencodename:VARCHAR#,
 				#cpnyid:VARCHAR#,
 				1,
 				#flag:VARCHAR#
 			)
		]]>
	</insert>
	 <!-- 添加机咱页面中的LIne，工序显示 -->
	<select id="getEvsIrcraftcodeList"  resultClass="SimpleMap">
		<![CDATA[	
		 SELECT (SELECT CODE_NAME FROM EVS_CODE WHERE CODE_ID = T2.PARENT_CODE) || '-' ||
      			T2.CODE_NAME AS code_name,
      			 T2.CODE_ID
  			FROM EVS_CODE T2
		 WHERE T2.CODE_FLAG = #codeflag#
		 

		 
		
		]]>
		 <![CDATA[
		 	ORDER BY T2.PARENT_CODE
		 ]]>
		    
	</select>
	
	<insert id="insertIrcraft"  parameterClass="EvsCraft">
		<![CDATA[	
		  insert into EVS_CODE
   			(
	   			 CODE_NO,
	   			 code_id, 
	   			 code_name, 
	   			 parent_code, 
	   			 depth,
	   			 create_date,
	   			 created_by,
	   			 code_en_name,
	   			 cpny_id,
	   			 ACTIVITY,
	   			 code_flag
   			)
 			values
 			(
 				EVS_CODE_SEQ.NEXTVAL,
 				#evscodeid:VARCHAR#,
 				#evscodename:VARCHAR#,
 				#evsparentcode:VARCHAR#,
 				'3',
 				sysdate,
 				#empid:VARCHAR#,
 				#evsencodename:VARCHAR#,
 				#cpnyid:VARCHAR#,
 				2,
 				'AF'
 			)
		]]>
	</insert>
	<!-- 更新工种面中的工序显示 -->
	<select id="getEvscodeIrcraftList0"  parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[	
		  SELECT distinct   t.code_id    code_id ,
		                    t.code_name           code_name,   
					        t.code_en_name        code_en_name,   
					        t.create_date         create_date,
					        t.created_by          created_by,
			                t.cpny_id             cpny_id,
			                t.activity        activity,
			                t.UPDATE_DATE        update_date,
			                t.updated_by      update_by
    	 FROM evs_code t
     	WHERE t.status!='0' and T.code_id = #evscodeid:VARCHAR#
		 
  
		]]>
		 <![CDATA[
		 	ORDER BY T.code_id, T.code_name
		 ]]>
		    
	</select>
	
	<!-- 更新机种面中的工序显示 -->
	<select id="getEvscodeIrcraftList"  parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[	
		  SELECT distinct   t.code_id    code_id ,
		                    t.code_name           code_name,   
					        t.code_en_name        code_en_name,   
					        t.create_date         create_date,
					        t.created_by          created_by,
			                t.cpny_id             cpny_id,
			                CPNY.CODE_NAME        cpnyname
    	 FROM evs_code t,   SY_CODE CPNY
     	WHERE t.status!='0' and T.code_id = #evscodeid:VARCHAR#
		   AND CPNY.CODE_ID(+) = T.CPNY_ID
		 
  
		]]>
		 <![CDATA[
		 	ORDER BY T.code_id, T.code_name
		 ]]>
		    
	</select>
	
	  <!-- 添加机种页面中的LINE显示 -->
	<select id="getEvscodeIrcraftList2"  resultClass="SimpleMap">
		<![CDATA[	
		 SELECT          (SELECT CODE_NAME FROM EVS_CODE WHERE CODE_ID = T2.PARENT_CODE) || '-' ||
       				      T2.CODE_NAME AS CODE_NAME,
      				      T2.CODE_ID
  		FROM EVS_CODE T2 
 			WHERE t2.status!='0' and T2.CODE_FLAG = 'LE'
		]]>
		 <![CDATA[
		 	ORDER BY T2.PARENT_CODE
		 ]]>
		    
	</select>
	
	 <!--  添加机种页面中的LINE显示  根据CODEID来获得哪个parentcodeid -->
	<select id="getEvscodeIrcraftList3"  resultClass="SimpleMap">
		<![CDATA[	
		 SELECT 	 (SELECT CODE_NAME FROM EVS_CODE WHERE CODE_ID = T2.PARENT_CODE) || '-' ||
					 T2.CODE_NAME AS  parentname,
					 T2.CODE_ID AS PARENTID
		 FROM EVS_CODE T2,evs_code R1
		 WHERE t2.status!='0' and T2.CODE_FLAG = 'LE'
		 AND R1.code_id = #evscodeid:VARCHAR#
		 AND R1.PARENT_CODE = T2.CODE_ID
 
 

		]]>
		 <![CDATA[
		 	ORDER BY T2.PARENT_CODE
		 ]]>
		    
	</select>
	
	  <!-- 添加技能类型 页面中的工序显示 -->
	<select id="getEvscodeStypeList"  resultClass="SimpleMap">
		<![CDATA[	
		  SELECT  t.code_id,
		          t.code_name
		  FROM EVS_CODE T 
		  WHERE t.status!='0' and T.CODE_FLAG = #codeflag#
		
		]]>
		 <![CDATA[
		 	ORDER BY code_id, code_name
		 ]]>
		    
	</select>
	
	<!-- 技能类型 保存 -->
	<insert id="insertStype"  parameterClass="EvsCraft">
		<![CDATA[	
		  insert into EVS_CODE
   			(
	   			 CODE_NO,
	   			 code_id, 
	   			 code_name, 
	   			 parent_code, 
	   			 depth,
	   			 create_date,
	   			 created_by,
	   			 code_en_name,
	   			 cpny_id,
	   			 ACTIVITY,
	   			 code_flag
   			)
 			values
 			(
 				EVS_CODE_SEQ.NEXTVAL,
 				#evscodeid:VARCHAR#,
 				#evscodename:VARCHAR#,
 				#evsparentcode:VARCHAR#,
 				'2',
 				sysdate,
 				#empid:VARCHAR#,
 				#evsencodename:VARCHAR#,
 				#cpnyid:VARCHAR#,
 				1,
 				'ST'
 			)
		]]>
	</insert>
	<!-- 职业资格等级 保存 -->
	<insert id="insertZyzgd"  parameterClass="EvsGxjndj">
		<![CDATA[	
		  insert into EVS_GXJNDJ
   			(
	   			 CODE_NO,
	   			 code_id, 
	   			 DJJFFROM, 
	   			 DJJFTO, 
	   			 DENGJI,
	   			 create_date,
	   			 created_by,
	   			 CODE_FLAG,
	   			 cpny_id,
	   			 ACTIVITY
   			)
 			values
 			(
 				EVS_CODE_SEQ.NEXTVAL,
 				#evscodeid:VARCHAR#,
 				#djjffrom:VARCHAR#,
 				#djjfto:VARCHAR#,
 				#dengji:VARCHAR#,
 				sysdate,
 				#empid:VARCHAR#,
 				#flag:VARCHAR#,
 				#cpnyid:VARCHAR#,
 				1
 			)
		]]>
	</insert>
	<!-- 工匠技师等级 保存 -->
	<insert id="insertGjjsdj"  parameterClass="Gxjsdj">
		<![CDATA[	
		  insert into EVS_GXJSDJ
   			(
	   			 CODE_NO,
	   			 code_id, 
	   			 CHINESENAME, 
	   			 EV_PERIOD_ID, 
	   			 PJWD1,
	   			 PJWD2,
	   			 PJWD3,
	   			 PJWD4,
	   			 SUMSTORE,
	   			 create_date,
	   			 created_by,
	   			 ACTIVITY
   			)
 			values
 			(
 				EVS_CODE_SEQ.NEXTVAL,
 				#codeid:VARCHAR#,
 				#empName:VARCHAR#,
 				#evperiodid:VARCHAR#,
 				#PJWD1:VARCHAR#,
 				#PJWD2:VARCHAR#,
 				#PJWD3:VARCHAR#,
 				#PJWD4:VARCHAR#,
 				#SUMSTORE:VARCHAR#,
 				sysdate,
 				#createBy:VARCHAR#,
 				1
 			)
		]]>
	</insert>
	 <!-- 添加技能类型页面中的工序显示 根据CODEID来获得哪个parentcodeid -->
	<select id="getStypeEvscodeList"  resultClass="SimpleMap">
		<![CDATA[	
		 SELECT R.CODE_ID as parentid, 
		        R.code_name as parentname
		  FROM EVS_CODE T, EVS_CODE R
		 WHERE t.status!='0' and T.code_id = #evscodeid:VARCHAR#
		   AND T.PARENT_CODE = R.CODE_ID
		   AND T.CODE_FLAG = 'ST'

		]]>
		 <![CDATA[
		 	ORDER BY parentid, parentname
		 ]]>
		    
	</select>
	
	<!-- 作业类型 保存 -->
	<insert id="insertTypeopa"  parameterClass="EvsCraft">
		<![CDATA[	
		  insert into EVS_CODE
   			(
	   			 CODE_NO,
	   			 code_id, 
	   			 code_name, 
	   			 parent_code, 
	   			 depth,
	   			 create_date,
	   			 created_by,
	   			 code_en_name,
	   			 cpny_id,
	   			 ACTIVITY,
	   			 code_flag
   			)
 			values
 			(
 				EVS_CODE_SEQ.NEXTVAL,
 				#evscodeid:VARCHAR#,
 				#evscodename:VARCHAR#,
 				'1',
 				'2',
 				sysdate,
 				#empid:VARCHAR#,
 				#evsencodename:VARCHAR#,
 				#cpnyid:VARCHAR#,
 				1,
 				'TO'
 			)
		]]>
	</insert>	    
	 
	 <!-- 更新作业类型页面中的 -->
	<select id="getEvsopacodeList"  parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[	
		 SELECT distinct t.code_id    code_id ,
		        t.code_name           code_name,   
		        t.code_en_name        code_en_name,   
		        t.create_date         create_date,
		        t.created_by          created_by,
		        t.cpny_id             cpny_id,
		        CPNY.CODE_NAME        cpnyname
		 FROM evs_code t,   SY_CODE CPNY
		 WHERE t.status!='0' and T.code_id = #evscodeid:VARCHAR#
		   AND CPNY.CODE_ID(+) = T.CPNY_ID
  
		]]>
		 <![CDATA[
		 	ORDER BY T.code_id, T.code_name
		 ]]>
		    
	</select>
	
	
	<!-- 作业类型 保存 -->
	<insert id="updateTypeopa"  parameterClass="EvsCraft">
		<![CDATA[	
		  insert into EVS_CODE
   			(
	   			 CODE_NO,
	   			 code_id, 
	   			 code_name, 
	   			 parent_code, 
	   			 depth,
	   			 create_date,
	   			 created_by,
	   			 code_en_name,
	   			 cpny_id,
	   			 ACTIVITY,
	   			 code_flag
   			)
 			values
 			(
 				EVS_CODE_SEQ.NEXTVAL,
 				#evscodeid:VARCHAR#,
 				#evscodename:VARCHAR#,
 				'1',
 				'2',
 				sysdate,
 				#empid:VARCHAR#,
 				#evsencodename:VARCHAR#,
 				#cpnyid:VARCHAR#,
 				1,
 				'TO'
 			)
		]]>
	</insert> 
	
	 <!-- 在评价进行时查询评价人员数据 -->
	<select id="getEvsempcodeList"  parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[	
		 select    t.person_id,
			       t.empid,
			       t.chinesename,
			       t.deptid,
			       h.deptname,
			       h.deptfullname,
			       e.deptke,
			       e.deptzhi,
			       e.deptzu
		  from hr_employee t,hr_department h ,
		    (select evs_empid,min(deptke) deptke,min(deptzhi) deptzhi,min(deptzu) deptzu from evs_setupcode
		    group by evs_empid) e
		  where t.deptid = h.deptid
		  and t.person_id = e.evs_empid(+)
		  and t.person_id = #empID:VARCHAR#
  
		]]>
		    
	</select>
	
	<!-- 在评价进行时查询工种查询 -->
	<select id="getEvsCraftList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from evs_code t
			 where t.activity='1' and t.code_flag = 'CT'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<select id="getEvsYearIDList" resultClass="SimpleMap">
		<![CDATA[
	 		SELECT ev_year as id, ev_year as name 
	 		FROM evs_period 
	 		order by ev_year desc

		]]>   
	</select>
	<!-- 在评价进行时查询Line查询 -->
	<select id="getEvsLineList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from evs_code t
			 where t.activity='1' and t.code_flag = 'LE'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 在评价进行时查询技能类型查询 -->
	<select id="getEvsSkitypeList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from evs_code t
			 where t.activity='1' and t.code_flag = 'ST'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 在评价进行时查询机种查询 -->
	<select id="getEvsAircraftList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from evs_code t
			 where t.status!='0' and t.code_flag = 'AF'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	
	<!-- 在评价进行时查询岗位查询 -->
	<select id="getEvsProcesstList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from evs_code t
			 where t.activity='1' and t.code_flag = 'PE'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 在评价进行时查询工序查询 -->
	<select id="getEvsJobcontentList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from evs_code t
			 where t.activity='1' and t.code_flag = 'JC'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 在评价进行时查询作业类型查询 -->
	<select id="getEvsTypetionList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from evs_code t
			 where t.status!='0' and t.code_flag = 'TO'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 在评价进行时查询技能等级的查询 -->
	<select id="getEvsSkilelist" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from sy_code t
			 where t.parent_code = 'EvsSkilllevelCode'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 在评价进行时查询职业资格的查询 -->
	<select id="getEvsQualificationList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from sy_code t
			 where t.parent_code = 'EvsQualificationCode'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 在评价进行时查询培训目标的查询EvsPurposeCode -->
	<select id="getEvsPurposeList" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
			  from sy_code t
			 where t.parent_code = 'yesOrno'
			 ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 在评价进行时查询技能类型的查询 -->
	<select id="getEvsSkiltypelist" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
		        from evs_code t
		       where t.status!='0' and t.code_flag  = 'ST'
		       ORDER BY T.CODE_ID

		]]>   
	</select>
	
	
	<!-- 在导出报表时查询作业类型的查询 -->
	<select id="getEvsTypeoationlist" resultClass="SimpleMap">
		<![CDATA[
	 		select T.CODE_ID AS ID, T.CODE_NAME AS NAME
		        from evs_code t
		       where t.status!='0' and t.code_flag  = 'TO'
		       ORDER BY T.CODE_ID

		]]>   
	</select>
	
	<!-- 评价进行时保存 -->
	<insert id="insertJinxing"  parameterClass="Evsupcode">
		<![CDATA[	
		 INSERT INTO evs_setupcode(
		 SETUPCODENO,
		 CRAFT,
		 LINE,
		 AIRCRAFT,
		 PROCESS,
		 JOBCONTENT,
		 SKILLTYPE,
		 TYPEOPERATION,  
		 EVS_EMPID,
		 EV_PERIOD_ID,
		 EV_TYPE_ID,
		 PROFICIENCY,
		 SHEOPERCYQ,
		 OPERATIONCOM,
		 QUALITYOFWORK,
		 STANDARDACTION,
         COMPOSITE,
         SKILLLEVEL,
         REMARK,
         QUALIFICATION,
         SKILLSCORE,
         PURPOSE,
         SUMSCORE,
         CREATED_BY,
         CREATE_DATE,
         CONFIRMDATE,
         PROVEBY,
         PROVEDATE,
         STATUS,
         DEPTKE,
         DEPTZHI,
         DEPTZU
         ) 
         VALUES
         (
         EVS_CODE_SEQ.NEXTVAL,
         #CRAFT:VARCHAR#,
         #LINE:VARCHAR#,
         #AIRCRAFT:VARCHAR#,
         #PROCESS:VARCHAR#,
         #JOBCONTENT:VARCHAR#,
         #SKILLTYPE:VARCHAR#,
         #TYPEOPERATION:VARCHAR#,
         #EVS_EMPID:VARCHAR#,
         #EV_PERIOD_ID:VARCHAR#,
         #EV_TYPE_ID:VARCHAR#,
         #PROFICIENCY:VARCHAR#,
         #SHEOPERCYQ:VARCHAR#, 
         #OPERATIONCOM:VARCHAR#,
         #QUALITYOFWORK:VARCHAR#,
         #STANDARDACTION:VARCHAR#,
         #COMPOSITE:VARCHAR#,
         #SKILLLEVEL:VARCHAR#,
         #REMARK:VARCHAR#,
         #QUALIFICATION:VARCHAR#,
         #SKILLSCORE:VARCHAR#,
         #PURPOSE:VARCHAR#,
          #SUMSCORE:VARCHAR#,
         #CREATED_BY:VARCHAR#,
         sysdate,
         #CONFIRMDATE:VARCHAR#,
         #PROVEBY:VARCHAR#,
         #PROVEDATE:VARCHAR#,
         '1',
         #deptke:VARCHAR#,
         #deptzhi:VARCHAR#,
         #deptzu:VARCHAR#
         )
		]]>
	</insert>
	<!-- 评价进行时保存 -->
	<update id="updateJinxing"  parameterClass="Evsupcode">
		<![CDATA[	
		 update evs_setupcode set 
		 
		 SKILLTYPE = #SKILLTYPE:VARCHAR#,
		 TYPEOPERATION = #TYPEOPERATION:VARCHAR#,  	
		 EV_PERIOD_ID = #EV_PERIOD_ID:VARCHAR#,
		 PROFICIENCY = #PROFICIENCY:VARCHAR#,
		 SHEOPERCYQ = #SHEOPERCYQ:VARCHAR#, 
		 OPERATIONCOM =  #OPERATIONCOM:VARCHAR#,
		 QUALITYOFWORK =#QUALITYOFWORK:VARCHAR#,
		 STANDARDACTION = #STANDARDACTION:VARCHAR#,
         COMPOSITE =  #COMPOSITE:VARCHAR#,
         SKILLLEVEL =#SKILLLEVEL:VARCHAR#,
         REMARK = #REMARK:VARCHAR#,
         QUALIFICATION =#QUALIFICATION:VARCHAR#,
         SKILLSCORE =#SKILLSCORE:VARCHAR#,
         PURPOSE =#PURPOSE:VARCHAR#,
         SUMSCORE =  #SUMSCORE:VARCHAR#,
         UPDATED_BY = #CREATED_BY:VARCHAR#,
         UPDATE_DATE = sysdate,
         PROVEBY = #PROVEBY:VARCHAR#,
         PROVEDATE =#PROVEDATE:VARCHAR#,
         CONFIRMDATE = #CONFIRMDATE:VARCHAR#,
         deptke = #deptke:VARCHAR#,
         deptzhi =#deptzhi:VARCHAR#,
         deptzu = #deptzu:VARCHAR#
         
         where SETUPCODENO = #SETUPCODENO:VARCHAR#
		]]>
	</update>
	
	<!-- getEvsCountEmp -->
	<select id="getEvsCountEmp" resultClass="SimpleMap" parameterClass="SimpleMap">
		<![CDATA[
	 		select t.SETUPCODENO,
	 		       t.evs_empid as EVS_EMPID,
	 		       h.chinesename,
	 		       h.empid,
	 		       d.deptname,
	 		       t.deptke,
	 		       t.deptzhi,
	 		       t.deptzu,
			       t.ev_period_id AS EV_PERIOD,
			       t.ev_type_id AS EV_TYPE,
			       t.craft AS CRAFT,
			       t.line AS LINE,
			       t.aircraft AS AIRCRAFT,
			       t.process AS PROCESS,
			       t.jobcontent AS JOBCONTENT,
			       t.skilltype AS SKILLTYPE,
			       t.typeoperation AS TYPEOPERATION,
			       t.proficiency AS PROFICIENCY,
			       t.sheopercyq AS SHEOPERCYQ,
			       t.operationcom AS OPERATIONCOM,
			       t.qualityofwork AS QUALITYOFWORK,
			       t.standardaction AS STANDARDACTION,
			       t.composite AS COMPOSITE,
			       t.skilllevel AS SKILLLEVEL,
			       t.remark AS REMARK,
			       t.QUALIFICATION AS QUALIFICATION,
			       t.SKILLSCORE AS SKILLSCORE,
			       t.PURPOSE AS PURPOSE,
			       
			       e.descriptio,
			       t.SUMSCORE,
			       t.CREATED_BY AS CREATED_BY,
			       t.CREATE_DATE AS CREATE_DATE,
			       t.CONFIRMDATE AS CONFIRMDATE,
			       t.PROVEBY AS PROVEBY,
			       t.PROVEDATE AS PROVEDATE,
			       t.STATUS AS STATUS
			  from evs_setupcode t,evs_code e,hr_employee h,hr_department d
		 where t.JOBCONTENT = e.code_id
		      and t.evs_empid = h.person_id
		      and h.deptid = d.deptid
		 
		]]>   
		<isNotEmpty prepend="AND" property="adminid">
				<![CDATA[
					h.deptid  in  ( SELECT DISTINCT deptid  FROM  HR_DEPARTMENT
						   START   WITH deptid = (select deptid from hr_employee where person_id= #adminid:VARCHAR2#)
						 CONNECT  BY PRIOR deptid= parent_dept_id )				   
				]]>
			  </isNotEmpty>
		<isNotEmpty prepend="AND" property="empID" > 
		    <![CDATA[
		       t.evs_empid = #empID:VARCHAR#
		    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="jobcontent" > 
		    <![CDATA[
		        t.jobcontent = #jobcontent:VARCHAR#
		    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="periodid" > 
		    <![CDATA[
		       t.ev_period_id = #periodid:VARCHAR#
		    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="purpose" > 
		    <![CDATA[
		       t.PURPOSE = #purpose:VARCHAR#
		    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND t.SETUPCODENO IN " property="ids">
				<iterate property="ids" open="(" close=")" conjunction=",">
					 #ids[]:NUMERIC#
				</iterate>
		</isNotEmpty>
		 <![CDATA[
		       order by t.ev_period_id desc
		    ]]>
	</select>
	
	<select id="regularlySentEvMailInfoList" resultClass="SimpleMap">
		<![CDATA[
	 		SELECT DISTINCT EV_AFFIRM.Affirmor_Id,
                HR_EMPLOYEE.EMAIL AFFIMOREMAIL,
                HR_EMPLOYEE.CHINESENAME,
                EV_DETAIL_APPLY.EVALUATE_MONTH
              FROM EV_AFFIRM, EV_DETAIL_APPLY, EV_HR_EMP_V HR_EMPLOYEE
             WHERE EV_AFFIRM.Affirmor_Id = HR_EMPLOYEE.PERSON_ID
                   AND EV_DETAIL_APPLY.APPLY_NO = EV_AFFIRM.APPLY_NO
                   AND EV_AFFIRM.AFFIRM_FLAG = '0'
                   AND HR_EMPLOYEE.EMAIL is not null
                   AND EV_DETAIL_APPLY.EVALUATE_MONTH >=
                       TO_CHAR(SYSDATE, 'YYYYMM')
                   AND EV_DETAIL_APPLY.EVALUATE_MONTH <=
                       TO_CHAR(SYSDATE, 'YYYYMM')
		]]>   
	</select>
	<select id="regularlySentEvMydMailInfoList" resultClass="SimpleMap">
		<![CDATA[
	 		select PLAY_APPLY ,
			h.EMAIL AFFIMOREMAIL,
			 h.CHINESENAME
			from GA_VISITER_APPLY t ,HR_EMPLOYEE h
			where t.PLAY_APPLY = h.PERSON_ID
			and many is   null
			and apply_date > to_date('20190501','yyyymmdd')
			and to_date(visiter_date,'yyyy-mm-dd') <sysdate
		]]>   
	</select>
	<insert id="insertSentEvMail" parameterClass="SimpleMap">
		<![CDATA[
	 	    INSERT INTO EV_MAIL_SENT
            (ID,
             EVALUATE_MONTH,
             PERSON_ID,
             AFFIMOREMAIL,
             SENT_DATE,
             TYPE)
            (SELECT EV_MAIL_SENT_SEQ.NEXTVAL,
                    #EVALUATE_MONTH:VARCHAR#,
                    #PERSON_ID:VARCHAR#,
                    #AFFIMOREMAIL:VARCHAR#,
                    SYSDATE,
                    'EvMail'
               FROM DUAL
             )
		]]>   
	</insert>
	
	<!-- NEW retrieve Leave affirm list information -->
	<select id="retrieveZyzgdjModifyAffirmList" parameterClass="SimpleMap" resultClass="EvsGxjndj"> 
		<![CDATA[   
			SELECT 
      
        		EVS_GXJNDJ.CODE_NO AS pkNo1,
        		EVS_GXJNDJ_BACK.PK_NO AS pkNo,
                
               EVS_CODE_AFFIRM.CODE_FLAG codeflag,
               EVS_CODE_AFFIRM.AFFIRMOR_ID,
               EVS_CODE_AFFIRM.AFFIRM_LEVEL AS affirmLevel,
               EVS_CODE_AFFIRM.AFFIRM_FLAG AS affirm_flag,
               EVS_CODE_AFFIRM.AFFIRM_REMARKS AS remark,
               NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) AS up_flag,
               NVL(EVS_CODE_AFFIRM.NEXT_AFFIRM_FLAG, 0) AS next_flag,
               NVL(EVS_CODE_AFFIRM.MAX_LEVEL_FLAG, 0) AS maxLevel_flag,
               MAX_AFFIRMOR_FLAG.AFFIRM_FLAG AS max_affirm_flag,
        
               EVS_GXJNDJ.CODE_NO,
               EVS_GXJNDJ.DJJFFROM,
               EVS_GXJNDJ.DJJFTO,
               EVS_GXJNDJ.DENGJI,
               EVS_GXJNDJ.CODE_ID evscodeid,
               EVS_GXJNDJ.UPDATE_DATE updatetime,
               EVS_GXJNDJ.UPDATED_BY uempid,
               EVS_GXJNDJ.CODE_FLAG,
               EVS_GXJNDJ.STATUS ,
               
               EVS_GXJNDJ_BACK.DJJFFROM DJJFFROM1,
               EVS_GXJNDJ_BACK.DJJFTO DJJFTO1,
               EVS_GXJNDJ_BACK.UPDATE_DATE UPDATE_DATE1,
               EVS_GXJNDJ_BACK.UPDATED_BY UPDATED_BY1,
               EVS_GXJNDJ_BACK.CODE_FLAG CODE_FLAG1,
               EVS_GXJNDJ_BACK.STATUS  STATUS1
         
          FROM EVS_GXJNDJ_BACK,
               EVS_GXJNDJ, 
               (SELECT EVS_CODE_AFFIRM.*,
                       UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
                       UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
                       NEXT_AFFIRM.AFFIRM_FLAG AS NEXT_AFFIRM_FLAG,
                       (CASE
                         WHEN EVS_CODE_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL THEN
                          1
                         ELSE
                          0
                       END) MAX_LEVEL_FLAG
                  FROM (SELECT EVS_CODE_AFFIRM.*,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
                          FROM EVS_CODE_AFFIRM where activity = '1'
                        ) EVS_CODE_AFFIRM,
                       (SELECT T.AR_DETAIL_NO,  MAX(T.AFFIRM_LEVEL) MAXLEVEL
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         GROUP BY T.AR_DETAIL_NO) ESS_AFFIRM_MAX_LEVEL,
                       (SELECT T.AR_DETAIL_NO,
                               T.AFFIRM_LEVEL,
                               T.AFFIRMOR_ID,
                               T.AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         ) UP_AFFIRM,
                       (SELECT A.AR_DETAIL_NO,
                               MAX(A.AFFIRM_FLAG) AS AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM A  ,
                               (SELECT T.AR_DETAIL_NO, T.AFFIRMOR_ID, T.AFFIRM_LEVEL
                                  FROM EVS_CODE_AFFIRM T where activity = '1'
                                 AND T.AFFIRMOR_ID = #supervisor:VARCHAR#
                                ) B
                         WHERE 
                              A.AR_DETAIL_NO = B.AR_DETAIL_NO
                               and A.activity = '1'
                           AND A.AFFIRM_LEVEL > B.AFFIRM_LEVEL
                         GROUP BY A.AR_DETAIL_NO) NEXT_AFFIRM
                 WHERE 
                    EVS_CODE_AFFIRM.AR_DETAIL_NO = UP_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = NEXT_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = ESS_AFFIRM_MAX_LEVEL.AR_DETAIL_NO(+)
                   ) EVS_CODE_AFFIRM,
              
                 (SELECT EVS_CODE_AFFIRM.AFFIRM_FLAG, EVS_CODE_AFFIRM.AR_DETAIL_NO
                  FROM EVS_CODE_AFFIRM ,
                       (SELECT MAX(EVS_CODE_AFFIRM.AFFIRM_LEVEL),
                               MAX(EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO) AR_DETAIL_AFFIRM_NO
                          FROM EVS_CODE_AFFIRM where activity = '1'
                         GROUP BY EVS_CODE_AFFIRM.AR_DETAIL_NO) HH
                 WHERE EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO = HH.AR_DETAIL_AFFIRM_NO and EVS_CODE_AFFIRM.activity = '1') MAX_AFFIRMOR_FLAG
         WHERE 
           EVS_GXJNDJ_BACK.CODE_NO(+) = EVS_GXJNDJ.CODE_NO
           AND EVS_GXJNDJ.CODE_NO = MAX_AFFIRMOR_FLAG.AR_DETAIL_NO(+)
           AND EVS_GXJNDJ.CODE_NO = EVS_CODE_AFFIRM.AR_DETAIL_NO(+)
           AND NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) = 1
          
          AND EVS_CODE_AFFIRM.AFFIRMOR_ID = #supervisor:VARCHAR#
           
		]]>			   
		
		<isNotEmpty prepend="AND" property="sDate">
		<![CDATA[
			       (
			   		   TO_DATE(EVS_GXJNDJ_BACK.CREATE_DATE,'YYYY-MM-DD') BETWEEN TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') 
			       )
		]]>
		</isNotEmpty>
			 
		       
		<isNotEmpty prepend="AND" property="qryType" > <!-- 未决裁 -->
		    <![CDATA[
		         EVS_CODE_AFFIRM.affirm_flag = #qryType:VARCHAR#
		    ]]>
		</isNotEmpty>
      
		<isNotEmpty prepend="AND" property="codeFlag" > <!-- 未决裁 -->
		    <![CDATA[
		         EVS_GXJNDJ.CODE_flag = #codeFlag:VARCHAR#
		    ]]>
		</isNotEmpty>
		<![CDATA[					        
					 ORDER BY EVS_GXJNDJ_BACK.CREATE_DATE DESC 
			]]>
	</select>
	<!-- NEW retrieve Leave affirm list information -->
	<select id="retrieveGjjsAffirmList" parameterClass="SimpleMap" resultClass="Gxjsdj"> 
		<![CDATA[   
			SELECT 
      
               EVS_GXJSDJ.CODE_NO AS pkNo1,
               
                
               EVS_CODE_AFFIRM.CODE_FLAG codeflag, 
               EVS_CODE_AFFIRM.AFFIRMOR_ID,
               EVS_CODE_AFFIRM.AFFIRM_LEVEL AS affirmLevel,
               EVS_CODE_AFFIRM.AFFIRM_FLAG AS affirm_flag,
               EVS_CODE_AFFIRM.AFFIRM_REMARKS AS remark,
               NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) AS up_flag,
               NVL(EVS_CODE_AFFIRM.NEXT_AFFIRM_FLAG, 0) AS next_flag,
               NVL(EVS_CODE_AFFIRM.MAX_LEVEL_FLAG, 0) AS maxLevel_flag,
               MAX_AFFIRMOR_FLAG.AFFIRM_FLAG AS max_affirm_flag,
        
               EVS_GXJSDJ.CHINESENAME,
               EVS_GXJSDJ.PJWD1,
               EVS_GXJSDJ.PJWD2,
               EVS_GXJSDJ.PJWD3,
               EVS_GXJSDJ.PJWD4,                    
               EVS_GXJSDJ.SUMSTORE,
               EVS_GXJSDJ.CODE_ID CODEID,
               EVS_GXJSDJ.EV_PERIOD_ID evperiodid,
               EVS_GXJSDJ.STATUS  
         
          FROM EVS_GXJSDJ,
               (SELECT EVS_CODE_AFFIRM.*,
                       UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
                       UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
                       NEXT_AFFIRM.AFFIRM_FLAG AS NEXT_AFFIRM_FLAG,
                       (CASE
                         WHEN EVS_CODE_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL THEN
                          1
                         ELSE
                          0
                       END) MAX_LEVEL_FLAG
                  FROM (SELECT EVS_CODE_AFFIRM.*,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
                          FROM EVS_CODE_AFFIRM where activity = '1'
                        ) EVS_CODE_AFFIRM,
                       (SELECT T.AR_DETAIL_NO,  MAX(T.AFFIRM_LEVEL) MAXLEVEL
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         GROUP BY T.AR_DETAIL_NO) ESS_AFFIRM_MAX_LEVEL,
                       (SELECT T.AR_DETAIL_NO,
                               T.AFFIRM_LEVEL,
                               T.AFFIRMOR_ID,
                               T.AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         ) UP_AFFIRM,
                       (SELECT A.AR_DETAIL_NO,
                               MAX(A.AFFIRM_FLAG) AS AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM A  ,
                               (SELECT T.AR_DETAIL_NO, T.AFFIRMOR_ID, T.AFFIRM_LEVEL
                                  FROM EVS_CODE_AFFIRM T where activity = '1'
                                 AND T.AFFIRMOR_ID = #supervisor:VARCHAR#
                                ) B
                         WHERE 
                              A.AR_DETAIL_NO = B.AR_DETAIL_NO
                               and A.activity = '1'
                           AND A.AFFIRM_LEVEL > B.AFFIRM_LEVEL
                         GROUP BY A.AR_DETAIL_NO) NEXT_AFFIRM
                 WHERE 
                    EVS_CODE_AFFIRM.AR_DETAIL_NO = UP_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = NEXT_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = ESS_AFFIRM_MAX_LEVEL.AR_DETAIL_NO(+)
                   ) EVS_CODE_AFFIRM,
              
                 (SELECT EVS_CODE_AFFIRM.AFFIRM_FLAG, EVS_CODE_AFFIRM.AR_DETAIL_NO
                  FROM EVS_CODE_AFFIRM ,
                       (SELECT MAX(EVS_CODE_AFFIRM.AFFIRM_LEVEL),
                               MAX(EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO) AR_DETAIL_AFFIRM_NO
                          FROM EVS_CODE_AFFIRM where activity = '1'
                         GROUP BY EVS_CODE_AFFIRM.AR_DETAIL_NO) HH
                 WHERE EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO = HH.AR_DETAIL_AFFIRM_NO and EVS_CODE_AFFIRM.activity = '1') MAX_AFFIRMOR_FLAG
         WHERE   EVS_GXJSDJ.CODE_NO = MAX_AFFIRMOR_FLAG.AR_DETAIL_NO(+)
           AND EVS_GXJSDJ.CODE_NO = EVS_CODE_AFFIRM.AR_DETAIL_NO
           AND NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) = 1
           
          AND EVS_CODE_AFFIRM.AFFIRMOR_ID = #supervisor:VARCHAR#
           
		]]>			   
		
		<isNotEmpty prepend="AND" property="sDate">
		<![CDATA[
			       (
			   		   TO_DATE(EVS_GXJSDJ.CREATE_DATE,'YYYY-MM-DD') BETWEEN TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') 
			       )
		]]>
		</isNotEmpty>
			 
		       
		<isNotEmpty prepend="AND" property="qryType" > <!-- 未决裁 -->
		    <![CDATA[
		         EVS_CODE_AFFIRM.affirm_flag = #qryType:VARCHAR#
		    ]]>
		</isNotEmpty>
      
		
		<![CDATA[					        
					 ORDER BY EVS_GXJSDJ.CREATE_DATE DESC 
			]]>
	</select>
	<!-- NEW retrieve Leave affirm list information -->
	<select id="retrieveSetupcodeAffirmList" parameterClass="SimpleMap" resultClass="Evsupcode"> 
		<![CDATA[   
			SELECT 
      
             evs_setupcode.SETUPCODENO AS pkNo1,
                h.chinesename ,   
                
               EVS_CODE_AFFIRM.CODE_FLAG codeflag, 
               EVS_CODE_AFFIRM.AFFIRMOR_ID,
               EVS_CODE_AFFIRM.AFFIRM_LEVEL AS affirmLevel,
               EVS_CODE_AFFIRM.AFFIRM_FLAG AS affirm_flag,
               EVS_CODE_AFFIRM.AFFIRM_REMARKS AS remark,
               NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) AS up_flag,
               NVL(EVS_CODE_AFFIRM.NEXT_AFFIRM_FLAG, 0) AS next_flag,
               NVL(EVS_CODE_AFFIRM.MAX_LEVEL_FLAG, 0) AS maxLevel_flag,
               MAX_AFFIRMOR_FLAG.AFFIRM_FLAG AS max_affirm_flag,
        
               evs_setupcode.CRAFT,
               evs_setupcode.LINE,
               evs_setupcode.JOBCONTENT,
               evs_setupcode.EV_PERIOD_ID,
               evs_setupcode.PROFICIENCY,
               evs_setupcode.OPERATIONCOM,
               evs_setupcode.QUALITYOFWORK,
               evs_setupcode.STANDARDACTION,
               evs_setupcode.COMPOSITE ,
               
               evs_setupcode.SKILLLEVEL,
               evs_setupcode.REMARK,
               evs_setupcode.SHEOPERCYQ,
               evs_setupcode.QUALIFICATION,
               evs_setupcode.SKILLSCORE,
                evs_setupcode.PURPOSE,
               evs_setupcode.SUMSCORE,
               evs_setupcode.CONFIRMDATE,
               evs_setupcode.PROVEBY,
               evs_setupcode.PROVEDATE,
               evs_setupcode.STATUS  
         
          FROM hr_employee h,evs_setupcode,
               (SELECT EVS_CODE_AFFIRM.*,
                       UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
                       UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
                       NEXT_AFFIRM.AFFIRM_FLAG AS NEXT_AFFIRM_FLAG,
                       (CASE
                         WHEN EVS_CODE_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL THEN
                          1
                         ELSE
                          0
                       END) MAX_LEVEL_FLAG
                  FROM (SELECT EVS_CODE_AFFIRM.*,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
                          FROM EVS_CODE_AFFIRM where activity = '1'
                        ) EVS_CODE_AFFIRM,
                       (SELECT T.AR_DETAIL_NO,  MAX(T.AFFIRM_LEVEL) MAXLEVEL
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         GROUP BY T.AR_DETAIL_NO) ESS_AFFIRM_MAX_LEVEL,
                       (SELECT T.AR_DETAIL_NO,
                               T.AFFIRM_LEVEL,
                               T.AFFIRMOR_ID,
                               T.AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         ) UP_AFFIRM,
                       (SELECT A.AR_DETAIL_NO,
                               MAX(A.AFFIRM_FLAG) AS AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM A  ,
                               (SELECT T.AR_DETAIL_NO, T.AFFIRMOR_ID, T.AFFIRM_LEVEL
                                  FROM EVS_CODE_AFFIRM T where activity = '1'
                                 AND T.AFFIRMOR_ID = #supervisor:VARCHAR#
                                ) B
                         WHERE 
                              A.AR_DETAIL_NO = B.AR_DETAIL_NO
                               and A.activity = '1'
                           AND A.AFFIRM_LEVEL > B.AFFIRM_LEVEL
                         GROUP BY A.AR_DETAIL_NO) NEXT_AFFIRM
                 WHERE 
                    EVS_CODE_AFFIRM.AR_DETAIL_NO = UP_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = NEXT_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = ESS_AFFIRM_MAX_LEVEL.AR_DETAIL_NO(+)
                   ) EVS_CODE_AFFIRM,
              
                 (SELECT EVS_CODE_AFFIRM.AFFIRM_FLAG, EVS_CODE_AFFIRM.AR_DETAIL_NO
                  FROM EVS_CODE_AFFIRM ,
                       (SELECT MAX(EVS_CODE_AFFIRM.AFFIRM_LEVEL),
                               MAX(EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO) AR_DETAIL_AFFIRM_NO
                          FROM EVS_CODE_AFFIRM where activity = '1'
                         GROUP BY EVS_CODE_AFFIRM.AR_DETAIL_NO) HH
                 WHERE EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO = HH.AR_DETAIL_AFFIRM_NO and EVS_CODE_AFFIRM.activity = '1') MAX_AFFIRMOR_FLAG
         WHERE evs_setupcode.evs_empid = h.person_id
           and   evs_setupcode.SETUPCODENO = MAX_AFFIRMOR_FLAG.AR_DETAIL_NO(+)
           AND evs_setupcode.SETUPCODENO = EVS_CODE_AFFIRM.AR_DETAIL_NO
           AND NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) = 1
           AND evs_setupcode.STATUS ='2'
          AND EVS_CODE_AFFIRM.AFFIRMOR_ID = #supervisor:VARCHAR#
           
		]]>			   
		
		<isNotEmpty prepend="AND" property="sDate">
		<![CDATA[
			       (
			   		   TO_DATE(evs_setupcode.CREATE_DATE,'YYYY-MM-DD') BETWEEN TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') 
			       )
		]]>
		</isNotEmpty>
			 
		       
		<isNotEmpty prepend="AND" property="qryType" > <!-- 未决裁 -->
		    <![CDATA[
		         EVS_CODE_AFFIRM.affirm_flag = #qryType:VARCHAR#
		    ]]>
		</isNotEmpty>
      
		
		<![CDATA[					        
					 ORDER BY evs_setupcode.CREATE_DATE DESC 
			]]>
	</select>
	
	<!-- NEW retrieve Leave affirm list information -->
	<select id="retrieveGxModifyAffirmList" parameterClass="SimpleMap" resultClass="EvsGxjndj"> 
		<![CDATA[   
			SELECT 
      
            E.CODE_NO AS pkNo1,
            EVS_CODE_BACK.PK_NO AS pkNo,
               
               EVS_CODE_AFFIRM.CODE_FLAG codeflag, 
               EVS_CODE_AFFIRM.AFFIRMOR_ID,
               EVS_CODE_AFFIRM.AFFIRM_LEVEL AS affirmLevel,
               EVS_CODE_AFFIRM.AFFIRM_FLAG AS affirm_flag,
               EVS_CODE_AFFIRM.AFFIRM_REMARKS AS remark,
               NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) AS up_flag,
               NVL(EVS_CODE_AFFIRM.NEXT_AFFIRM_FLAG, 0) AS next_flag,
               NVL(EVS_CODE_AFFIRM.MAX_LEVEL_FLAG, 0) AS maxLevel_flag,
               MAX_AFFIRMOR_FLAG.AFFIRM_FLAG AS max_affirm_flag,
        
               E.CODE_NO,
               E.Descriptio,
               E.CODE_ID evscodeid,
               E.Parent_Code dengji,
               (select Parent_Code from EVS_CODE where code_id = E.Parent_Code) djjffrom,
               (select Parent_Code from EVS_CODE where code_id = (
               select Parent_Code from EVS_CODE where code_id = E.Parent_Code)) djjffrom1,
               E.UPDATE_DATE updatetime,
               E.UPDATED_BY uempid,
               E.CODE_FLAG,
               E.STATUS ,
               
               EVS_CODE_BACK.Descriptio Descriptio1,
               EVS_CODE_BACK.UPDATE_DATE UPDATE_DATE1,
               EVS_CODE_BACK.UPDATED_BY UPDATED_BY1,
               EVS_CODE_BACK.CODE_FLAG CODE_FLAG1,
               EVS_CODE_BACK.STATUS  STATUS1
         
          FROM EVS_CODE_BACK,
               EVS_CODE E, 
               (SELECT EVS_CODE_AFFIRM.*,
                       UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
                       UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
                       NEXT_AFFIRM.AFFIRM_FLAG AS NEXT_AFFIRM_FLAG,
                       (CASE
                         WHEN EVS_CODE_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL THEN
                          1
                         ELSE
                          0
                       END) MAX_LEVEL_FLAG
                  FROM (SELECT EVS_CODE_AFFIRM.*,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
                          FROM EVS_CODE_AFFIRM where activity = '1'
                        ) EVS_CODE_AFFIRM,
                       (SELECT T.AR_DETAIL_NO,  MAX(T.AFFIRM_LEVEL) MAXLEVEL
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         GROUP BY T.AR_DETAIL_NO) ESS_AFFIRM_MAX_LEVEL,
                       (SELECT T.AR_DETAIL_NO,
                               T.AFFIRM_LEVEL,
                               T.AFFIRMOR_ID,
                               T.AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         ) UP_AFFIRM,
                       (SELECT A.AR_DETAIL_NO,
                               MAX(A.AFFIRM_FLAG) AS AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM A  ,
                               (SELECT T.AR_DETAIL_NO, T.AFFIRMOR_ID, T.AFFIRM_LEVEL
                                  FROM EVS_CODE_AFFIRM T where activity = '1'
                                 AND T.AFFIRMOR_ID = #supervisor:VARCHAR#
                                ) B
                         WHERE 
                              A.AR_DETAIL_NO = B.AR_DETAIL_NO
                               and A.activity = '1'
                           AND A.AFFIRM_LEVEL > B.AFFIRM_LEVEL
                         GROUP BY A.AR_DETAIL_NO) NEXT_AFFIRM
                 WHERE 
                    EVS_CODE_AFFIRM.AR_DETAIL_NO = UP_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = NEXT_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = ESS_AFFIRM_MAX_LEVEL.AR_DETAIL_NO(+)
                   ) EVS_CODE_AFFIRM,
              
                 (SELECT EVS_CODE_AFFIRM.AFFIRM_FLAG, EVS_CODE_AFFIRM.AR_DETAIL_NO
                  FROM EVS_CODE_AFFIRM ,
                       (SELECT MAX(EVS_CODE_AFFIRM.AFFIRM_LEVEL),
                               MAX(EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO) AR_DETAIL_AFFIRM_NO
                          FROM EVS_CODE_AFFIRM where activity = '1'
                         GROUP BY EVS_CODE_AFFIRM.AR_DETAIL_NO) HH
                 WHERE EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO = HH.AR_DETAIL_AFFIRM_NO and EVS_CODE_AFFIRM.activity = '1') MAX_AFFIRMOR_FLAG
         WHERE 
           EVS_CODE_BACK.CODE_NO(+) = E.CODE_NO
           AND e.CODE_NO = MAX_AFFIRMOR_FLAG.AR_DETAIL_NO(+)
           AND e.CODE_NO = EVS_CODE_AFFIRM.AR_DETAIL_NO(+)
           AND NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) = 1
          
          AND EVS_CODE_AFFIRM.AFFIRMOR_ID = #supervisor:VARCHAR#
           
		]]>			   
		
		<isNotEmpty prepend="AND" property="sDate">
		<![CDATA[
			       (
			   		   TO_DATE(EVS_CODE_BACK.CREATE_DATE,'YYYY-MM-DD') BETWEEN TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS') 
			       )
		]]>
		</isNotEmpty>
			 
		       
		<isNotEmpty prepend="AND" property="qryType" > <!-- 未决裁 -->
		    <![CDATA[
		         EVS_CODE_AFFIRM.affirm_flag = #qryType:VARCHAR#
		    ]]>
		</isNotEmpty>
      
		
		<![CDATA[					        
					 ORDER BY EVS_CODE_BACK.CREATE_DATE DESC 
			]]>
	</select>
	
	
	<select id="getZyzgdjModifyNextAffirmor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
                SELECT DISTINCT A.AFFIRMOR_ID, 
								A.AFFIRM_LEVEL
				  FROM EVS_CODE_AFFIRM A, EVS_GXJNDJ B
				 WHERE A.AR_DETAIL_NO = B.CODE_NO
				   AND A.ACTIVITY = '1'
				   AND B.CODE_NO IN ($applyStr$)
				   AND A.AFFIRM_LEVEL = (SELECT MAX(T.AFFIRM_LEVEL)
								          FROM EVS_CODE_AFFIRM T
								         WHERE T.AFFIRMOR_ID = #curAffirmor:VARCHAR#
								           AND T.AR_DETAIL_NO IN ($applyStr$)) + 1    								           
	]]>
	</select>
	<select id="getSetupcodeNextAffirmor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
                SELECT DISTINCT A.AFFIRMOR_ID, 
								A.AFFIRM_LEVEL
				  FROM EVS_CODE_AFFIRM A, evs_setupcode B
				 WHERE A.AR_DETAIL_NO = B.SETUPCODENO
				   AND A.ACTIVITY = '1'
				   AND B.SETUPCODENO IN ($applyStr$)
				   AND A.AFFIRM_LEVEL = (SELECT MAX(T.AFFIRM_LEVEL)
								          FROM EVS_CODE_AFFIRM T
								         WHERE T.AFFIRMOR_ID = #curAffirmor:VARCHAR#
								           AND T.AR_DETAIL_NO IN ($applyStr$)) + 1    								           
	]]>
	</select>
	<select id="getGjjsNextAffirmor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
                SELECT DISTINCT A.AFFIRMOR_ID, 
								A.AFFIRM_LEVEL
				  FROM EVS_CODE_AFFIRM A, EVS_GXJSDJ B
				 WHERE A.AR_DETAIL_NO = B.CODE_NO
				   AND A.ACTIVITY = '1'
				   AND B.CODE_NO IN ($applyStr$)
				   AND A.AFFIRM_LEVEL = (SELECT MAX(T.AFFIRM_LEVEL)
								          FROM EVS_CODE_AFFIRM T
								         WHERE T.AFFIRMOR_ID = #curAffirmor:VARCHAR#
								           AND T.AR_DETAIL_NO IN ($applyStr$)) + 1    								           
	]]>
	</select>
	<select id="getGxModifyNextAffirmor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
                SELECT DISTINCT A.AFFIRMOR_ID, 
								A.AFFIRM_LEVEL
				  FROM EVS_CODE_AFFIRM A, EVS_CODE B
				 WHERE A.AR_DETAIL_NO = B.CODE_NO
				   AND A.ACTIVITY = '1'
				   AND B.CODE_NO IN ($applyStr$)
				   AND A.AFFIRM_LEVEL = (SELECT MAX(T.AFFIRM_LEVEL)
								          FROM EVS_CODE_AFFIRM T
								         WHERE T.AFFIRMOR_ID = #curAffirmor:VARCHAR#
								           AND T.AR_DETAIL_NO IN ($applyStr$)) + 1    								           
	]]>
	</select>
	<select id="getArModifyApplyNoForMail" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.CODE_NO APPLY_NO
				  FROM EVS_GXJNDJ A, 
				  	   EVS_CODE_AFFIRM B
				 WHERE A.CODE_NO = B.AR_DETAIL_NO
				   AND B.ACTIVITY = '1'
				   AND B.AFFIRM_LEVEL = #affirmLevel:VARCHAR#
				   AND B.AFFIRMOR_ID = #affirmorId:VARCHAR#
				   AND A.CODE_NO IN ($applyStr$)

	]]>
	</select>
	<select id="getSetupcodeApplyNoForMail" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.SETUPCODENO APPLY_NO
				  FROM evs_setupcode A, 
				  	   EVS_CODE_AFFIRM B
				 WHERE A.SETUPCODENO = B.AR_DETAIL_NO
				   AND B.ACTIVITY = '1'
				   AND B.AFFIRM_LEVEL = #affirmLevel:VARCHAR#
				   AND B.AFFIRMOR_ID = #affirmorId:VARCHAR#
				   AND A.SETUPCODENO IN ($applyStr$)

	]]>
	</select>
	<select id="getGjjsApplyNoForMail" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.CODE_NO APPLY_NO
				  FROM EVS_GXJSDJ A, 
				  	   EVS_CODE_AFFIRM B
				 WHERE A.CODE_NO = B.AR_DETAIL_NO
				   AND B.ACTIVITY = '1'
				   AND B.AFFIRM_LEVEL = #affirmLevel:VARCHAR#
				   AND B.AFFIRMOR_ID = #affirmorId:VARCHAR#
				   AND A.CODE_NO IN ($applyStr$)

	]]>
	</select>
	<select id="getGxModifyApplyNoForMail" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.CODE_NO APPLY_NO
				  FROM EVS_CODE A, 
				  	   EVS_CODE_AFFIRM B
				 WHERE A.CODE_NO = B.AR_DETAIL_NO
				   AND B.ACTIVITY = '1'
				   AND B.AFFIRM_LEVEL = #affirmLevel:VARCHAR#
				   AND B.AFFIRMOR_ID = #affirmorId:VARCHAR#
				   AND A.CODE_NO IN ($applyStr$)

	]]>
	</select>
	<select id="getLeaveApplyor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT DISTINCT
					   A.CREATED_BY CREATED_BY
				FROM EVS_GXJNDJ A
				WHERE A.CODE_NO IN($applyStr$)
	]]>
	</select>
	<select id="getSetupApplyor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT DISTINCT
					   A.CREATED_BY CREATED_BY
				FROM evs_setupcode A
				WHERE A.SETUPCODENO IN($applyStr$)
	]]>
	</select>
	<select id="getGjjsApplyor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT DISTINCT
					   A.CREATED_BY CREATED_BY
				FROM EVS_GXJSDJ A
				WHERE A.CODE_NO IN($applyStr$)
	]]>
	</select>
	<select id="getGxApplyor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT DISTINCT
					   A.CREATED_BY CREATED_BY
				FROM EVS_CODE A
				WHERE A.CODE_NO IN($applyStr$)
	]]>
	</select>
	<select id="getLeaveApplyNoCreateBy" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.CODE_NO APPLY_NO
				  FROM EVS_GXJNDJ A
				 WHERE A.CODE_NO IN ($applyStr$)
				   AND A.CREATED_BY = #createBy:VARCHAR#

	]]>
	</select>
	<select id="getSetupApplyNoCreateBy" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.SETUPCODENO APPLY_NO
				  FROM evs_setupcode A
				 WHERE A.SETUPCODENO IN ($applyStr$)
				   AND A.CREATED_BY = #createBy:VARCHAR#

	]]>
	</select>
	<select id="getGjjsApplyNoCreateBy" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.CODE_NO APPLY_NO
				  FROM EVS_GXJSDJ A
				 WHERE A.CODE_NO IN ($applyStr$)
				   AND A.CREATED_BY = #createBy:VARCHAR#

	]]>
	</select>
	<select id="getGxApplyNoCreateBy" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.CODE_NO APPLY_NO
				  FROM EVS_CODE A
				 WHERE A.CODE_NO IN ($applyStr$)
				   AND A.CREATED_BY = #createBy:VARCHAR#

	]]>
	</select>
	<select id="setToEmail" parameterClass="SimpleMap" resultClass="SimpleMap">
	<![CDATA[
		select e.empid ,e.chinesename,e.email from hr_employee e where e.person_id=#setTo:VARCHAR#
	]]>
	</select>
<select id="applyLeaveResult" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
				
				SELECT ESS.CODE_NO,
				       TO_CHAR(ESS.CREATE_DATE,'YYYY-MM-DD HH24:MI') APPLY_DATE,
				       ESS.DJJFFROM ,
				       ESS.DJJFTO ,
				       ESS.DENGJI,
				       ESS.CODE_ID ,
				       HR.EMPID,
				       HR.CHINESENAME,
				       get_dept_name(HR.DEPTID) DEPTNAME
				FROM EVS_GXJNDJ ESS,
				     HR_EMPLOYEE HR
				WHERE ESS.CREATED_BY = HR.PERSON_ID
				AND   ESS.CODE_NO IN ($applyNoStr$)
			
	]]>
	</select>
	<select id="applyGxResult" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
				
				SELECT ESS.CODE_NO,
				       TO_CHAR(ESS.CREATE_DATE,'YYYY-MM-DD HH24:MI') APPLY_DATE,
				       ESS.DESCRIPTIO DENGJI,
				       ESS.CODE_ID ,
				       HR.EMPID,
				       HR.CHINESENAME,
				       get_dept_name(HR.DEPTID) DEPTNAME
				FROM EVS_CODE ESS,
				     HR_EMPLOYEE HR
				WHERE ESS.CREATED_BY = HR.PERSON_ID
				AND   ESS.CODE_NO IN ($applyNoStr$)
			
	]]>
	</select>
	<select id="applyLeaveResult1" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
				
				SELECT ESS.CODE_NO,
				       TO_CHAR(ESS.CREATE_DATE,'YYYY-MM-DD HH24:MI') APPLY_DATE,
				       ESS.DJJFFROM ,
				       ESS.DJJFTO ,
				       ESS.DENGJI,
				       ESS.CODE_ID APPLY_TYPE,
				       HR.EMPID,
				       HR.CHINESENAME,
				       get_dept_name(HR.DEPTID) DEPTNAME,
				       E.AFFIRM_REMARKS
				FROM ESS_LEAVE_APPLY_TB ESS,
				     HR_EMPLOYEE HR,
				     EVS_CODE_AFFIRM E
				WHERE ESS.CREATED_BY = HR.PERSON_ID
				AND   ESS.CODE_NO = E.AR_DETAIL_NO
				AND   E.ACTIVITY ='1'
				AND   ESS.CODE_NO IN ($applyNoStr$)
				AND   E.AFFIRMOR_ID = #adminId:VARCHAR#
			
	]]>
	</select>
	
	<select id="applySetupcodeResult" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
		SELECT 
               ESS.CRAFT ,
               ESS.LINE ,
               ESS.JOBCONTENT,
               TO_CHAR(E.CREATE_DATE,'YYYY-MM-DD HH24:MI') APPLY_DATE,
			   ESS.COMPOSITE ,
			    ESS.SKILLLEVEL ,
			    ESS.SUMSCORE,
               HR.EMPID,
               HR.CHINESENAME,
			   E.AFFIRM_REMARKS
				FROM evs_setupcode ESS,
				     HR_EMPLOYEE HR,
				     EVS_CODE_AFFIRM E
				WHERE ESS.CREATED_BY = HR.PERSON_ID
				AND   ESS.SETUPCODENO = E.AR_DETAIL_NO
				AND   E.ACTIVITY ='1'
				AND   ESS.SETUPCODENO IN ($applyNoStr$)
				AND   E.AFFIRMOR_ID = #adminId:VARCHAR#
			
	]]>
	</select>
	<select id="applyArModifyResult" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
		SELECT 
               ESS.CODE_ID ,
               ESS.DENGJI ,
               TO_CHAR(E.CREATE_DATE,'YYYY-MM-DD HH24:MI') APPLY_DATE,
				       ESS.DJJFFROM ,
				       ESS.DJJFTO ,
               HR.EMPID,
               HR.CHINESENAME,
			   E.AFFIRM_REMARKS
				FROM EVS_GXJNDJ ESS,
				     HR_EMPLOYEE HR,
				     EVS_CODE_AFFIRM E
				WHERE ESS.CREATED_BY = HR.PERSON_ID
				AND   ESS.CODE_NO = E.AR_DETAIL_NO
				AND   E.ACTIVITY ='1'
				AND   ESS.CODE_NO IN ($applyNoStr$)
				AND   E.AFFIRMOR_ID = #adminId:VARCHAR#
			
	]]>
	</select>
	<select id="applyGxModifyResult" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
		SELECT 
               ESS.CODE_ID ,
               ESS.DESCRIPTIO DENGJI ,
               TO_CHAR(E.CREATE_DATE,'YYYY-MM-DD HH24:MI') APPLY_DATE,			
               HR.EMPID,
               HR.CHINESENAME,
			   E.AFFIRM_REMARKS
				FROM EVS_CODE ESS,
				     HR_EMPLOYEE HR,
				     EVS_CODE_AFFIRM E
				WHERE ESS.CREATED_BY = HR.PERSON_ID
				AND   ESS.CODE_NO = E.AR_DETAIL_NO
				AND   E.ACTIVITY ='1'
				AND   ESS.CODE_NO IN ($applyNoStr$)
				AND   E.AFFIRMOR_ID = #adminId:VARCHAR#
			
	]]>
	</select>
	<!-- 删除Line -->
	<delete id="deleteSetupcode">
		<![CDATA[
		    delete from evs_setupcode where SETUPCODENO = #evscodeid:VARCHAR#
			]]>
	</delete>
	<!-- retrieve attendance record list -->
	<select id="retrieveJnpjRecordList" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			 SELECT r.EV_PERIOD_ID  ,
		         r.evs_empid ,
		         H.EMPID ,
		        H.CHINESENAME ,
		        H.DEPTID ,
		        t.deptname ,
                t.deptfullname  , 
                r.setupcodeno, 
                 r.CRAFT, 
                r.SKILLTYPE, 
                 r.LINE, 
                r.AIRCRAFT, 
                r.PROCESS,
                r.JOBCONTENT, 
                 r.TYPEOPERATION,                 
                r.DEPTKE, 
                r.DEPTZHI,
                r.DEPTZU, 
                 r.ZYZGDJLEVEL, 
                 r.SUMJCCOUNT,  
                 r.SUMSCORE, 
                
                r.proficiency AS PROFICIENCY, 
                r.sheopercyq AS SHEOPERCYQ, 
                r.operationcom AS OPERATIONCOM,
                r.qualityofwork AS QUALITYOFWORK, 
                r.standardaction AS STANDARDACTION, 
                r.composite AS COMPOSITE, 
                r.SKILLLEVEL , 
                r.QUALIFICATION, 
                r.skillscore AS SKILLSCORE, 
                r.PURPOSE, 
                r.remark AS REMARK 

				  FROM hr_employee H, 
				       hr_department t, 
				       evs_setupcode r 
				 where H.PERSON_ID = r.evs_empid 
				   and h.deptid = t.deptid 
	                  ]]>
       <isNotEmpty prepend="AND" property="evDeptId">
		<![CDATA[
		 		t.DEPTID IN (
			       SELECT DEPTID 
			                FROM HR_DEPARTMENT 
			                START WITH DEPTID = #evDeptId#
			                CONNECT BY PRIOR DEPTID = PARENT_DEPT_ID)
			  
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="craft">
		<![CDATA[
		 		r.craft = #craft#
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="evPeriodId">
		<![CDATA[
		 		R.EV_PERIOD_ID  >= #evPeriodId#
	    ]]>
		</isNotEmpty>	
		<isNotEmpty prepend="AND" property="period">
		<![CDATA[
		 		R.EV_PERIOD_ID  <= #period#
	    ]]>
		</isNotEmpty>			
		<isNotEmpty prepend="AND" property="GoEmp">
		<![CDATA[
		 		(   H.EMPID LIKE '%' || #GoEmp:VARCHAR# || '%'
			          OR H.CHINESENAME LIKE '%' || #master:VARCHAR# || '%'
			         )
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptke">
		<![CDATA[
		 		R.deptke LIKE '%' || #deptke:VARCHAR# || '%'
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptzhi">
		<![CDATA[
		 		R.deptzhi LIKE '%' || #deptzhi:VARCHAR# || '%'
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptzu">
		<![CDATA[
		 		R.deptzu LIKE '%' || #deptzu:VARCHAR# || '%'
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="line">
		<![CDATA[
		 		R.line  = #line#
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="jobcontent">
		<![CDATA[
		 		R.jobcontent  = #jobcontent#
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="zyzgdj">
		<![CDATA[
		 		R.zyzgdj  = #zyzgdj#
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="gxjndj">
		<![CDATA[
		 		R.gxjndj  = #gxjndj#
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sumstoref">
		<![CDATA[
		 		and  R.sumstore  >= #sumstoref#
	    ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sumstoret">
		<![CDATA[
		 		and  R.sumstore  <= #sumstoret#
	    ]]>
		</isNotEmpty>
		
	</select>
	<!-- 更新工种面中的工序显示 -->
	<select id="getSumCore"  parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[	
		  SELECT t.SUMSCORE,
    	  FROM evs_setupcode t
     	  WHERE t.status!='0' and t.evs_empid = #empid:VARCHAR#
		]]>
	</select>
</sqlMap>
