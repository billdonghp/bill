<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="ar.idcard">
	 
	<!-- retrieve attendance record list -->
	<select id="retrieveAttRecordList" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
	SELECT B.*,DEPT.DEPTNAME,hr_get_level_deptname(B.DEPTID,'4') FOURTHDEPTNAME
	  FROM (SELECT A.*, ROWNUM RNM
	          FROM (SELECT A.RECORD_NO,
	                       A.CARD_NO,
	                       TO_CHAR(A.R_TIME, 'YYYY-MM-DD HH24:MI') R_TIME,
	                       A.ACTIVE,
	                       A.DOOR_TYPE,
	                       HR_EMPLOYEE.EMPID,
	                       HR_EMPLOYEE.CHINESENAME,
	                       HR_EMPLOYEE.CHINESE_PINYIN,
	                       HR_EMPLOYEE.DEPTID,
	                       TO_CHAR(A.INSERT_TIME, 'YYYY-MM-DD HH24:MI') INSERT_TIME,
	                       HR2.EMPID AS OPERATOR_ID,
                       NVL(HR2.CHINESENAME,'SYSTEM') AS OPERATOR_NAME
	                  FROM $TABLE_NAME$ A, HR_EMPLOYEE, HR_EMPLOYEE HR2
	                 WHERE A.OPERATOR_ID = HR2.PERSON_ID(+)
	                  ]]>
       <isNotEmpty prepend="AND" property="DEPTID">
		<![CDATA[
		 		HR_EMPLOYEE.DEPTID IN (
			       SELECT DEPTID 
			                FROM HR_DEPARTMENT 
			                START WITH DEPTID = #DEPTID#
			                CONNECT BY PRIOR DEPTID = PARENT_DEPT_ID)
			  
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="key">
		<![CDATA[
		 		 HR_EMPLOYEE.EMPID = #key#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="R_START_TIME">	    
				<isEmpty prepend="" property="R_END_TIME">
					<![CDATA[ 
					 		 A.R_TIME=TO_DATE(#R_START_TIME#,'YYYY-MM-DD HH24:MI:SS') 
				    ]]>
				</isEmpty>
				</isNotEmpty>
				
				<isNotEmpty prepend="AND" property="R_END_TIME">	    
				    <isEmpty prepend="" property="R_START_TIME">
					<![CDATA[ 
					   A.R_TIME=TO_DATE(#R_END_TIME#,'YYYY-MM-DD HH24:MI:SS')+1 					 		
				    ]]>
				    </isEmpty>
				</isNotEmpty>
				
				<isNotEmpty prepend="AND" property="R_START_TIME">	    
				    <isNotEmpty prepend="" property="R_END_TIME">
					<![CDATA[ 
					 		A.R_TIME BETWEEN TO_DATE(#R_START_TIME#,'YYYY-MM-DD HH24:MI:SS')  AND TO_DATE(#R_END_TIME#,'YYYY-MM-DD HH24:MI:SS')+1 
				    ]]>
				    </isNotEmpty>
		</isNotEmpty>
				
		<isEmpty prepend="AND" property="R_START_TIME">
					<isEmpty prepend="" property="R_END_TIME">
					<![CDATA[
					 		 A.R_TIME  BETWEEN SYSDATE - 1  AND SYSDATE
				    ]]>
				    </isEmpty>
		</isEmpty>
		<![CDATA[
	                   AND (EXISTS
	                (SELECT *
	                          FROM AR_SUPERVISOR_INFO
	                         WHERE SUPERVISED_DEPTID = HR_EMPLOYEE.DEPTID
	                           AND AR_SUPERVISOR_ID = #supervisor:VARCHAR#) 
	                          OR A.EMPID= #supervisor:VARCHAR# )
	                  AND A.EMPID=HR_EMPLOYEE.PERSON_ID ) A
	         WHERE ROWNUM <= #endRownum:NUMERIC#) B,HR_DEPARTMENT DEPT
	         WHERE B.RNM > #startRownum:NUMERIC#
	         AND B.DEPTID=DEPT.DEPTID
      ]]>	
	</select>
	
	<!-- retrieve attendance record list count -->
	<select id="retrieveAttRecordListCount" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		
			   	SELECT COUNT(*) CNT
			      FROM $TABLE_NAME$ A,
				      HR_EMPLOYEE
				 WHERE 1 = 1
				   AND (EXISTS
	                 (SELECT *
	                          FROM AR_SUPERVISOR_INFO
	                         WHERE SUPERVISED_DEPTID = HR_EMPLOYEE.DEPTID
	                           AND AR_SUPERVISOR_ID = #supervisor:VARCHAR#) 
	                          OR A.EMPID= #supervisor:VARCHAR# )
	              AND A.EMPID=HR_EMPLOYEE.PERSON_ID
				  
	  	]]>
	<isNotEmpty prepend="AND" property="R_START_TIME">	    
				<isEmpty prepend="" property="R_END_TIME">
					<![CDATA[ 
					 		 A.R_TIME=TO_DATE(#R_START_TIME#,'YYYY-MM-DD HH24:MI:SS') 
				    ]]>
				</isEmpty>
				</isNotEmpty>
				
				<isNotEmpty prepend="AND" property="R_END_TIME">	    
				    <isEmpty prepend="" property="R_START_TIME">
					<![CDATA[ 
					   A.R_TIME=TO_DATE(#R_END_TIME#,'YYYY-MM-DD HH24:MI:SS')+1 					 		
				    ]]>
				    </isEmpty>
				</isNotEmpty>
				
				<isNotEmpty prepend="AND" property="R_START_TIME">	    
				    <isNotEmpty prepend="" property="R_END_TIME">
					<![CDATA[ 
					 		A.R_TIME BETWEEN TO_DATE(#R_START_TIME#,'YYYY-MM-DD HH24:MI:SS')  AND TO_DATE(#R_END_TIME#,'YYYY-MM-DD HH24:MI:SS')+1 
				    ]]>
				    </isNotEmpty>
		</isNotEmpty>
				
		<isEmpty prepend="AND" property="R_START_TIME">
					<isEmpty prepend="" property="R_END_TIME">
					<![CDATA[
					 		 A.R_TIME  BETWEEN SYSDATE - 1  AND SYSDATE
				    ]]>
				    </isEmpty>
		</isEmpty>
		<isNotEmpty prepend="AND" property="DEPTID">
		<![CDATA[
		 		HR_EMPLOYEE.DEPTID IN (
			      SELECT DEPTID 
			                FROM HR_DEPARTMENT 
			                START WITH DEPTID = #DEPTID#
			                CONNECT BY PRIOR DEPTID = PARENT_DEPT_ID)
			
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="key">
		<![CDATA[
		 		 HR_EMPLOYEE.EMPID = #key#
	    ]]>
		</isNotEmpty>
		
	</select>
	
	<!-- add attendance record data -->
	 <insert id="insertAttRecord" parameterClass="SimpleMap" >
		<![CDATA[	
		INSERT INTO AR_MAC_RECORDS
					( RECORD_NO,
					  CARD_NO,
					  R_TIME,
					  DOOR_TYPE,
					  ACTIVE,
					  INSERT_BY,
					  OPERATOR_ID,
					  INSERT_TIME,
					  REMARK)
			   SELECT AR_RECORDS_SEQ.NEXTVAL,
			 		  B.CARD_NO,
			 		  TO_DATE(#R_TIME#,'YYYY-MM-DD HH24:MI'),
					  #DOOR_TYPE#,
					  1,
					  'H',
					  #OPERATOR_ID#,
					  SYSDATE,
					  #REMARK#
			   	 FROM AR_EMP_CARD  B
				WHERE B.EMPID = #key#
				  AND TO_DATE(#R_TIME#,'YYYY-MM-DD HH24:MI') BETWEEN B.FROM_DATE AND NVL(B.TO_DATE,TO_DATE('9999-12-30','YYYY-MM-DD'))+1
				  AND B.ACTIVE = 1
		  ]]>
	 </insert>
	 
	 <!-- add attendance record2 data -->
	 <insert id="insertAttRecords" parameterClass="SimpleMap" >
		<![CDATA[	
		INSERT INTO AR_MAC_RECORDS
					( RECORD_NO,
					  CARD_NO,
					  EMPID,
					  R_TIME,
					  DOOR_TYPE,
					  ACTIVE,
					  INSERT_BY,
					  INSERT_TIME,
					  INTERFACE_RECORD_ID,
					  INTERFACE_RECORD_ID1,
					  CPNY_ID)
			VALUES(
			   		  AR_EATERY_RECORDS_SEQ.NEXTVAL,
			   		  #cardNo:VARCHAR#,
			   		  #personId:VARCHAR#,
			 		  #rTime:TIMESTAMP#,
					  #doorType:VARCHAR#,
					  1,
					  'M',
					  SYSDATE,
					  #interfaceRecordId:NUMERIC#,
					  -1,
					  #cpnyId#
					)
		  ]]>
	 </insert>
	 
	 <!-- retrieve attendance record for update attendance record -->
	<update id="retrieveDataForUpdateAttRecord" parameterClass="SimpleMap">
		<![CDATA[
		UPDATE AR_MAC_RECORDS A
		SET A.ACTIVE=#isCaltaFlag#,A.OPERATOR_ID=#adminId:VARCHAR#,A.INSERT_TIME=SYSDATE
		WHERE A.RECORD_NO = #RECORD_NO:NUMERIC# 			
	  	]]>
	</update>
	  	
	  <!-- update attendance record data -->
	 <update id="updateAttRecord" parameterClass="SimpleMap" >
		<![CDATA[
			  UPDATE AR_MAC_RECORDS A
			     SET R_TIME    = TO_DATE(#R_TIME#,'YYYY-MM-DD HH24:MI'),
				 	 DOOR_TYPE = #DOOR_TYPE#,
					 INSERT_BY = 'H',
					 INSERT_TIME = SYSDATE,
					 OPERATOR_ID = #OPERATOR_ID#,
					 REMARK = #REMARK#
			   WHERE A.RECORD_NO = #RECORD_NO# 
	 	]]>
	 </update>
	 
	  <!-- delete attendance record data 
	  	
		　 DELETE FROM AR_MAC_RECORDS A
			     WHERE A.RECORD_NO = #RECORD_NO# 
	  
	  -->
	 <delete id="deleteAttRecord" parameterClass="int">
		<![CDATA[
	    
		 UPDATE AR_MAC_RECORDS SET ACTIVE='0' WHERE RECORD_NO = #RECORD_NO# 
		]]>
	　</delete>
	
	<!-- retrieve employee list by card -->
	<select id="retrieveEmpListByCard" parameterClass="SimpleMap" resultClass="BasicInfo">
		<![CDATA[
 			 SELECT A.EMPID								   		empID,
			 		A.CHINESENAME        						chineseName,
                    A.CHINESE_PINYIN    						pinyinName,
					TO_CHAR(A.DATE_LEFT,'YYYY-MM-DD')           dateLeft,
					TO_CHAR(A.DATE_STARTED,'YYYY-MM-DD')        joinDate,
					HPI.IDCARD_NO           					idCard,
					HPI.PASSPORT_NO         					passPort,
                    B.DEPTNAME            						department,
                    hr_get_full_deptname (A.deptid)		   		deptFullName,
                    A.DEPTID            						deptID,
                    C.POSTID            						postCode,
                    D.POST_NAME            						post,
                    A.POSITION_CODE        						positionCode,
                    E.CODE_NAME            						position,
                    A.POST_COEF            						postCoef,
                    A.POST_GRADE_CODE      						postGradeCode,
                    F.CODE_NAME            						postGrade,
                    D.POST_GROUP_ID 	   						postGroupId,        
				    H.POST_GROUP_ID 	   						postGroupCode, 
				    H.POST_GROUP_NAME 	   						postGroup,
				    J.CODE_NAME									status,
				    A.STATUS_CODE								statusCode,
				    B.DEPT_EN_NAME								englishDept
               FROM AR_EMP_CARD G,
               		HR_EMPLOYEE A,
                    HR_DEPARTMENT B,
                    HR_EMP_POST C,
                    HR_POST D,
                    SY_CODE E,
                    SY_CODE F,
                    HR_POST_GROUP H,
					HR_PERSONAL_INFO HPI,
					SY_CODE J
               WHERE G.EMPID = A.EMPID(+)
                AND A.DEPTID = B.DEPTID(+)  
                AND A.EMPID = C.EMPID(+)
				AND A.EMPID = HPI.EMPID(+)
                AND C.POSTID = D.POST_ID(+)
                AND A.POSITION_CODE = E.CODE_ID(+)
                AND A.POST_GRADE_CODE = F.CODE_ID(+)
			    AND D.POST_GROUP_ID = H.POST_GROUP_ID(+)
			    AND A.STATUS_CODE=J.CODE_ID(+)
			    AND G.TO_DATE IS NULL
				AND G.ACTIVE = 1
          
		]]>         

		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
				(	
					A.CHINESENAME 		LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR A.CHINESE_PINYIN LIKE '%'||#CONDITION:VARCHAR#||'%'
				)
			]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">
			<![CDATA[
					 EXISTS ( SELECT EMPID
					              FROM (SELECT EMPID
					                      FROM HR_EMPLOYEE H1
					                     WHERE EXISTS (
					                              SELECT SUPERVISED_DEPTID
					                                FROM AR_SUPERVISOR_INFO J
					                               WHERE J.AR_SUPERVISOR_ID = #SUPERVISOR_ID#
					                                 AND H1.DEPTID = J.SUPERVISED_DEPTID)
					                    UNION
					                    SELECT #SUPERVISOR_ID# AS EMPID
					                      FROM DUAL) K
					             WHERE A.EMPID = K.EMPID
					  )
			]]>
		</isNotEmpty>

		<![CDATA[
	 	ORDER BY  A.EMPID 
		 ]]>
	</select>
	
	
	
	
	<!-- retrieve visit card list -->
	<select id="retrieveVisitCardList" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			  SELECT NO,
			  		 CARD_NO,
			  		 SY.CODE_NAME NAME,
			  		 SY.CODE_EN_NAME EN_NAME,
			  		 SY.CODE_KOR_NAME KOR_NAME,
			  		 TO_CHAR(FROM_DATE,'YYYY-MM-DD') FROM_DATE,
			  		 TO_CHAR(TO_DATE,'YYYY-MM-DD') TO_DATE,
			  		 ACTIVE,
			  		 TO_CHAR(AV.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
					 AV.CREATED_BY,
					 TO_CHAR(AV.UPDATE_DATE,'YYYY-MM-DD') UPDATE_DATE,
					 AV.UPDATED_BY,
					 REMARK,
           		     PRINCIPAL,
                     VISITOR_AMONT
			    FROM AR_VISIT_CARD AV,SY_CODE SY
			   WHERE AV.ACTIVE = 1
           AND AV.NAME = SY.CODE_ID(+) 
		]]>
		
		<isNotEmpty prepend="AND" property="CARD_NO">
		<![CDATA[
		 		CARD_NO = #CARD_NO#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="NAME">
		<![CDATA[
		 		AV.NAME = #NAME#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="USE_DATE">
		<![CDATA[
		 		TO_DATE(#USE_DATE#,'YYYY-MM-DD') BETWEEN FROM_DATE AND NVL(TO_DATE,TO_DATE('9999-12-30','YYYY-MM-DD'))
	    ]]>
		</isNotEmpty>
		
		<![CDATA[
	 			ORDER BY CARD_NO 
		 ]]>
	</select>
	
	<!-- retrieve visit card list count -->
	<select id="retrieveVisitCardListCnt" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
				  SELECT COUNT(*) CNT
			        FROM AR_VISIT_CARD 
			       WHERE ACTIVE = 1 
		]]>
		
		<isNotEmpty prepend="AND" property="CARD_NO">
		<![CDATA[
		 		CARD_NO = #CARD_NO#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="NAME">
		<![CDATA[
		 		NAME = #NAME#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="USE_DATE">
		<![CDATA[
		 		TO_DATE(#USE_DATE#,'YYYY-MM-DD') BETWEEN FROM_DATE AND NVL(TO_DATE,TO_DATE('9999-12-30','YYYY-MM-DD'))
	    ]]>
		</isNotEmpty>

	</select>
	
	<!-- retrieve visit card-->
	<select id="retrieveVisitCard" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
				 SELECT CARD_NO ID,CARD_NO NAME FROM 
					(SELECT DISTINCT T.CARD_NO FROM AR_VISIT_CARD T WHERE T.ACTIVE = 1 AND T.TO_DATE IS NOT NULL
					       AND NOT EXISTS
					       (
					           SELECT * FROM AR_VISIT_CARD T2 WHERE T2.ACTIVE = 1 AND T2.TO_DATE IS NULL AND T.CARD_NO = T2.CARD_NO
					       ) ORDER BY T.CARD_NO) 
				UNION ALL
				SELECT CARD_NO,CARD_NO FROM
					(SELECT CARD_NO FROM AR_VISIT_CARD WHERE ACTIVE = 0 AND TO_DATE IS NULL ORDER BY CARD_NO)
		]]>

	</select>
	
	<!-- add visit card relation -->
	 <insert id="insertVisitCard" parameterClass="SimpleMap" >
		<![CDATA[	
			    
		INSERT INTO AR_VISIT_CARD
					( NO,
					  CARD_NO,
					  NAME,
					  FROM_DATE,
					  TO_DATE,
					  ACTIVE,
					  CREATE_DATE,
					  CREATED_BY,
					  REMARK,
					  PRINCIPAL,
					  VISITOR_AMONT
					  )
			  VALUES( AR_CARD_VISIT_SEQ.NEXTVAL,
			 		  #CARD_NO:VARCHAR#,
			 		  #NAME:VARCHAR#,
			 		  TO_DATE(#FROM_DATE:VARCHAR#,'YYYY-MM-DD'),
			 		  TO_DATE(#TO_DATE:VARCHAR#,'YYYY-MM-DD'),
					  1,
					  SYSDATE,
					  #CREATED_BY:VARCHAR#,
					  #REMARK:VARCHAR# ,
					  #PRINCIPAL#,
					  #VISITOR_AMONT#
					  )
		  ]]>
	 </insert>
	
   <!-- retrieve visit card data for update visit card relation -->
	<select id="retrieveDataForUpdateVisitCard" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			  
			SELECT NO,
			  		 CARD_NO,
			  		 SY.CODE_NAME NAME,
			  		 TO_CHAR(FROM_DATE,'YYYY-MM-DD') FROM_DATE,
			  		 TO_CHAR(TO_DATE,'YYYY-MM-DD') TO_DATE,
			  		 ACTIVE,
			  		 TO_CHAR(AV.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
					 AV.CREATED_BY,
					 TO_CHAR(AV.UPDATE_DATE,'YYYY-MM-DD') UPDATE_DATE,
					 AV.UPDATED_BY,
					 REMARK,
					 PRINCIPAL,
					 VISITOR_AMONT 
			    FROM AR_VISIT_CARD AV,SY_CODE SY 
			   WHERE NO = #NO:VARCHAR# AND AV.NAME = SY.CODE_ID(+)
			
	  	]]>
	</select>
	
     <!-- update visit card relation -->
	 <update id="updateVisitCard" parameterClass="SimpleMap" >
		<![CDATA[
			  UPDATE AR_VISIT_CARD A
			     SET TO_DATE    = TO_DATE(#TO_DATE#,'YYYY-MM-DD'),
					 UPDATE_DATE = SYSDATE,
					 UPDATED_BY = #UPDATED_BY#,
					 REMARK = #REMARK#,
					 PRINCIPAL = #PRINCIPAL#,
					 VISITOR_AMONT = #VISITOR_AMONT#
			   WHERE A.NO = #NO:VARCHAR#
	 	]]>
	 </update>
	 
	 <!-- validate R_TIEM -->
	<select id="validateAttRecordDate" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		  SELECT COUNT(T.CARD_NO)
 				FROM AR_EMP_CARD T
				WHERE TO_DATE(#R_TIME:VARCHAR#, 'YYYY-MM-DD HH24:MI') BETWEEN T.FROM_DATE AND NVL(T.TO_DATE, TO_DATE(#R_TIME:VARCHAR#, 'YYYY-MM-DD HH24:MI'))
       			  AND T.EMPID = #key#
		]]>
		

		<isNotEmpty prepend="AND" property="NO">
		<![CDATA[
		 		NO <> #NO#
	    ]]>
		</isNotEmpty>
		
	</select>
	 
	 
	 <!-- validate start date or end date -->
	<select id="validateVisitCardDate" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		  SELECT COUNT(*) CNT         
		    FROM AR_VISIT_CARD A      
		   WHERE A.CARD_NO = #CARD_NO#
			 AND (
			 	 TO_DATE(#FROM_DATE#,'YYYY-MM-DD') BETWEEN A.FROM_DATE AND NVL(A.TO_DATE,A.FROM_DATE)
			 	 OR 
			 	 TO_DATE(NVL(#TO_DATE:VARCHAR#,'9999-12-31'),'YYYY-MM-DD') BETWEEN A.FROM_DATE AND NVL(A.TO_DATE,A.FROM_DATE)
				 OR
				 A.FROM_DATE BETWEEN TO_DATE(#FROM_DATE#,'YYYY-MM-DD') AND TO_DATE(NVL(#TO_DATE:VARCHAR#,'9999-12-31'),'YYYY-MM-DD')
				 OR 
				 NVL(A.TO_DATE,A.FROM_DATE) BETWEEN TO_DATE(#FROM_DATE#,'YYYY-MM-DD') AND TO_DATE(NVL(#TO_DATE:VARCHAR#,'9999-12-31'),'YYYY-MM-DD')
				 )
		]]>
		

		<isNotEmpty prepend="AND" property="NO">
		<![CDATA[
		 		NO <> #NO#
	    ]]>
		</isNotEmpty>
		
	</select>
	
	<!-- update end date by insert operation -->
	 <update id="updateEndDateByInsert" parameterClass="SimpleMap" >
		<![CDATA[
			  UPDATE AR_VISIT_CARD A
			     SET TO_DATE     = TO_DATE(#FROM_DATE#,'YYYY-MM-DD') - 1,
					 UPDATE_DATE = SYSDATE,
					 UPDATED_BY  = #UPDATED_BY#
			   WHERE A.CARD_NO = #CARD_NO#
				 AND TO_DATE IS NULL
				 AND TO_DATE(#FROM_DATE#,'YYYY-MM-DD') - 1 >= A.FROM_DATE
	 	]]>
	 </update>
	 
	 
	 
	 
	<!-- retrieve eatery record list -->
	<select id="retrieveEateryRecordList" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			  SELECT  A.RECORD_NO,
					  A.CARD_NO,
					  TO_CHAR(A.R_TIME,'YYYY-MM-DD HH24:MI') R_TIME,
					  A.REPAST_TYPE,
					  D.CODE_NAME 				   			 REPAST_TYPE_NAME,
					  D.CODE_EN_NAME 						 REPAST_TYPE_EN_NAME,
					  D.CODE_KOR_NAME 						 REPAST_TYPE_KOR_NAME,
					  A.EATERY_DATA_TYPE,
					  H.CODE_NAME 				   			 EATERY_DATA_TYPE_NAME,
					  H.CODE_EN_NAME 						 EATERY_DATA_TYPE_EN_NAME,
					  H.CODE_KOR_NAME 						 EATERY_DATA_TYPE_KOR_NAME,
					  A.ACTIVE,
					  A.INSERT_BY,
					  E.CODE_NAME 							 INSERT_BY_NAME,
					  E.CODE_EN_NAME 						 INSERT_BY_EN_NAME,
					  E.CODE_KOR_NAME 						 INSERT_BY_KOR_NAME,
					  F.EMPID,
					  NVL(B.CHINESENAME,I.CODE_NAME)	     CHINESENAME,
					  NVL(B.CHINESE_PINYIN,I.CODE_EN_NAME)    CHINESE_PINYIN,
					  B.ENGLISHNAME,
					  B.KOREANNAME,
					  B.DEPTID,
					  C.DEPTNAME,
					  C.DEPT_EN_NAME,
					  C.DEPT_KOR_NAME,
					  I.NAME		   						 VISIT_NAME,
					  A.OPERATOR_ID,
					  G.CHINESENAME    						 OPERATOR_NAME,
					  G.CHINESE_PINYIN 						 OPERATOR_PINYIN,
					  G.ENGLISHNAME 						 OPERATOR_EN_NAME,
					  G.KOREANNAME							 OPERATOR_KOR_NAME,
					  TO_CHAR(A.INSERT_TIME,'YYYY-MM-DD HH24:MI') INSERT_TIME,
					  A.REMARK,
					  DECODE(NVL(F.EMPID,-1),-1,'',NVL(J.SHIFT_NO,L.SHIFT_NO))			   SHIFT_NO,
					  DECODE(NVL(F.EMPID,-1),-1,'',NVL(K.SHIFT_NAME,M.SHIFT_NAME))		   SHIFT_NAME,
					  DECODE(NVL(F.EMPID,-1),-1,'',NVL(K.SHIFT_EN_NAME,M.SHIFT_EN_NAME))   SHIFT_EN_NAME,
					  DECODE(NVL(F.EMPID,-1),-1,'',NVL(K.SHIFT_KOR_NAME,M.SHIFT_KOR_NAME)) SHIFT_KOR_NAME
			     FROM AR_EATERY_RECORDS A
			LEFT JOIN AR_EMP_CARD F
				   ON F.CARD_NO = A.CARD_NO
				  AND A.R_TIME BETWEEN F.FROM_DATE AND NVL(F.TO_DATE,TO_DATE('9999-12-30','YYYY-MM-DD'))+1
			   	  AND F.ACTIVE = 1
			LEFT JOIN HR_EMPLOYEE B
				   ON B.EMPID = F.EMPID
			LEFT JOIN HR_DEPARTMENT C
				   ON C.DEPTID = B.DEPTID
			LEFT JOIN (SELECT AV.*,SY.CODE_NAME,SY.CODE_EN_NAME FROM AR_VISIT_CARD AV,SY_CODE SY WHERE AV.NAME = SY.CODE_ID(+)) I
				   ON I.CARD_NO = A.CARD_NO
			   	  AND TO_DATE(TO_CHAR(A.R_TIME,'YYYY-MM-DD'),'YYYY-MM-DD') BETWEEN I.FROM_DATE AND NVL(I.TO_DATE,TO_DATE('9999-12-30','YYYY-MM-DD'))+1
			   	  AND I.ACTIVE = 1
			LEFT JOIN SY_CODE D
				   ON D.CODE_ID = A.REPAST_TYPE 
			LEFT JOIN SY_CODE H
				   ON H.CODE_ID = A.EATERY_DATA_TYPE
			LEFT JOIN SY_CODE E
				   ON E.CODE_ID = A.INSERT_BY
			LEFT JOIN HR_EMPLOYEE G
				   ON G.EMPID = A.OPERATOR_ID
			LEFT JOIN AR_SCHEDULE J
				   ON J.EMPID = F.EMPID
			   	  AND J.AR_DATE_STR = TO_CHAR(A.R_TIME,'YYYY/MM/DD')
			LEFT JOIN AR_SHIFT010 K
				   ON K.SHIFT_NO = J.SHIFT_NO
			LEFT JOIN AR_CALENDER L
				   ON L.DDATE = TO_DATE(TO_CHAR(A.R_TIME,'YYYY-MM-DD'),'YYYY-MM-DD')
			LEFT JOIN AR_SHIFT010 M
				   ON M.SHIFT_NO = L.SHIFT_NO
				WHERE A.ACTIVE = 1 
	  	]]>
		
	   <isNotEmpty prepend="AND" property="R_TIME">
		<![CDATA[
		 		 TO_CHAR(A.R_TIME,'YYYY-MM-DD') = #R_TIME#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="DEPTID">
		<![CDATA[
		 		B.DEPTID = #DEPTID#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="key">
		<![CDATA[
		 		 A.CARD_NO = #key#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="REPAST_TYPE">
		<![CDATA[
		 	     A.REPAST_TYPE = #REPAST_TYPE#  
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="INSERT_BY">
		<![CDATA[
		 	     A.INSERT_BY = #INSERT_BY#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="CardType05">
		<![CDATA[
		 		 I.NAME IS NULL
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="CardType10">
		<![CDATA[
		 		 I.NAME IS NOT NULL
	    ]]>
	    </isNotEmpty>
		
		<![CDATA[
			ORDER BY A.R_TIME DESC
		]]>
	</select>
	
	<!-- retrieve eatery record list count -->
	<select id="retrieveEateryRecordListCount" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		
			   SELECT COUNT(*) CNT
				 FROM AR_EATERY_RECORDS A
			LEFT JOIN AR_EMP_CARD F
				   ON F.CARD_NO = A.CARD_NO
				  AND TO_DATE(TO_CHAR(A.R_TIME,'YYYY-MM-DD'),'YYYY-MM-DD') BETWEEN F.FROM_DATE AND NVL(F.TO_DATE,TO_DATE('9999-12-31','YYYY-MM-DD'))
			   	  AND F.ACTIVE = 1
			LEFT JOIN HR_EMPLOYEE B
				   ON B.EMPID = F.EMPID
			LEFT JOIN HR_DEPARTMENT C
				   ON C.DEPTID = B.DEPTID
			LEFT JOIN AR_VISIT_CARD I
				   ON I.CARD_NO = A.CARD_NO
				  AND TO_DATE(TO_CHAR(A.R_TIME,'YYYY-MM-DD'),'YYYY-MM-DD') BETWEEN I.FROM_DATE AND NVL(I.TO_DATE,TO_DATE('9999-12-31','YYYY-MM-DD'))
			   	  AND I.ACTIVE = 1
			LEFT JOIN SY_CODE D
				   ON D.CODE_ID = A.REPAST_TYPE 
			LEFT JOIN SY_CODE H
				   ON H.CODE_ID = A.EATERY_DATA_TYPE
			LEFT JOIN SY_CODE E
				   ON E.CODE_ID = A.INSERT_BY
			LEFT JOIN HR_EMPLOYEE G
				   ON G.EMPID = A.OPERATOR_ID
			LEFT JOIN AR_SCHEDULE J
				   ON J.EMPID = F.EMPID
			   	  AND J.AR_DATE_STR = TO_CHAR(A.R_TIME,'YYYY/MM/DD')
			LEFT JOIN AR_SHIFT010 K
				   ON K.SHIFT_NO = J.SHIFT_NO
			LEFT JOIN AR_CALENDER L
				   ON L.DDATE = TO_DATE(TO_CHAR(A.R_TIME,'YYYY-MM-DD'),'YYYY-MM-DD')
			LEFT JOIN AR_SHIFT010 M
				   ON M.SHIFT_NO = L.SHIFT_NO
				WHERE A.ACTIVE = 1
	  	]]>
	  	
	    <isNotEmpty prepend="AND" property="R_TIME">
		<![CDATA[
		 		 TO_CHAR(A.R_TIME,'YYYY-MM-DD') = #R_TIME#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="DEPTID">
		<![CDATA[
		 		B.DEPTID = #DEPTID#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="key">
		<![CDATA[
		 		 A.CARD_NO = #key#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="REPAST_TYPE">
		<![CDATA[
		 	     A.REPAST_TYPE = #REPAST_TYPE#  
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="INSERT_BY">
		<![CDATA[
		 	     A.INSERT_BY = #INSERT_BY#
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="CardType05">
		<![CDATA[
		 		 I.NAME IS NULL
	    ]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="CardType10">
		<![CDATA[
		 		 I.NAME IS NOT NULL
	    ]]>
	    </isNotEmpty>
	 </select>
	 
	  <!-- validate eatery record date -->
	<select id="validateEateryRecordDate" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
				SELECT SUM(CNT) CNT
				  FROM
				(SELECT COUNT(*) CNT
				   FROM AR_EMP_CARD A
				  WHERE A.CARD_NO = #key#
				    AND TO_DATE(#R_DATE#,'YYYY-MM-DD') BETWEEN A.FROM_DATE AND NVL(A.TO_DATE,TO_DATE('9999-12-31','YYYY-MM-DD'))
				    AND A.ACTIVE = 1
				 UNION ALL
				 SELECT COUNT(*) CNT
				   FROM AR_VISIT_CARD A
				  WHERE A.CARD_NO = #key#
				    AND TO_DATE(#R_DATE#,'YYYY-MM-DD') BETWEEN A.FROM_DATE AND NVL(A.TO_DATE,TO_DATE('9999-12-31','YYYY-MM-DD')) 
				    AND A.ACTIVE = 1
				 )
		]]>
	</select>
	
	 <!-- add eatery record data -->
	 <insert id="insertEateryRecord" parameterClass="SimpleMap" >
	 <!--  
		 INSERT INTO AR_EATERY_RECORDS
							( RECORD_NO,
							  CARD_NO,
							  R_TIME,
							  REPAST_TYPE,
							  EATERY_DATA_TYPE,
							  ACTIVE,
							  INSERT_BY,
							  OPERATOR_ID,
							  INSERT_TIME,
							  REMARK)
					  SELECT AR_EATERY_RECORDS_SEQ.NEXTVAL,
					  		 B.CARD_NO,
							 TO_DATE(#R_TIME#,'YYYY-MM-DD HH24:MI'),
							 #REPAST_TYPE#,
							 'Consumption',
							 1,
							 'H',
							 #OPERATOR_ID#,
							 SYSDATE,
							 #REMARK#
						FROM (SELECT CARD_NO
							    FROM AR_EMP_CARD C
							   WHERE C.EMPID= #key#
							     AND TO_DATE(#R_TIME#,'YYYY-MM-DD HH24:MI') BETWEEN C.FROM_DATE AND NVL(C.TO_DATE,TO_DATE('9999-12-31','YYYY-MM-DD'))
							     AND C.ACTIVE = 1
							UNION ALL
							   SELECT CARD_NO
							     FROM AR_VISIT_CARD D
								WHERE D.NAME = #key#
								  AND TO_DATE(#R_TIME#,'YYYY-MM-DD HH24:MI') BETWEEN D.FROM_DATE AND NVL(D.TO_DATE,TO_DATE('9999-12-31','YYYY-MM-DD'))
								  AND D.ACTIVE = 1) B
					   WHERE ROWNUM = 1
		 -->
		<![CDATA[	
		
		
		 	INSERT INTO AR_EATERY_RECORDS
						( RECORD_NO,
						  CARD_NO,
						  R_TIME,
						  REPAST_TYPE,
						  EATERY_DATA_TYPE,
						  ACTIVE,
						  INSERT_BY,
						  OPERATOR_ID,
						  INSERT_TIME,
						  REMARK)
				 VALUES( AR_EATERY_RECORDS_SEQ.NEXTVAL,
				  		 #key#,
						 TO_DATE(#R_TIME#,'YYYY-MM-DD HH24:MI'),
						 #REPAST_TYPE:VARCHAR#,
						 'Consumption',
						 1,
						 'H',
						 #OPERATOR_ID:VARCHAR#,
						 SYSDATE,
						 #REMARK:VARCHAR#)
		  ]]>
	 </insert>
	 
	 <!-- retrieve eatery data for update eatery record -->
	<select id="retrieveDataForUpdateEateryRecord" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			  
			SELECT  A.RECORD_NO,
					  A.CARD_NO,
					  TO_CHAR(A.R_TIME,'YYYY-MM-DD') R_TIME,
					  TO_CHAR(A.R_TIME,'HH24') 		 HOUR,
					  TO_CHAR(A.R_TIME,'MI') 		 MINUTE,
					  A.REPAST_TYPE,
					  A.EATERY_DATA_TYPE,
					  A.ACTIVE,
					  A.INSERT_BY,
					  F.EMPID,
					  NVL(B.CHINESENAME,I.CODE_NAME)		 CHINESENAME,
					  B.CHINESE_PINYIN,
					  B.ENGLISHNAME,
					  B.KOREANNAME,
					  B.DEPTID,
					  I.NAME		   						      VISIT_NAME,
					  TO_CHAR(A.INSERT_TIME,'YYYY-MM-DD HH24:MI') INSERT_TIME,
					  A.REMARK
			     FROM AR_EATERY_RECORDS A
			LEFT JOIN AR_EMP_CARD F
				   ON F.CARD_NO = A.CARD_NO
			   	  AND TO_DATE(TO_CHAR(A.R_TIME,'YYYY-MM-DD'),'YYYY-MM-DD') BETWEEN F.FROM_DATE AND NVL(F.TO_DATE,TO_DATE('9999-12-31','YYYY-MM-DD'))
			   	  AND F.ACTIVE = 1
			LEFT JOIN HR_EMPLOYEE B
				   ON B.EMPID = F.EMPID
			LEFT JOIN (SELECT AV.*,SY.CODE_NAME FROM AR_VISIT_CARD AV,SY_CODE SY WHERE AV.NAME = SY.CODE_ID(+)) I
				   ON I.CARD_NO = A.CARD_NO
			   	  AND TO_DATE(TO_CHAR(A.R_TIME,'YYYY-MM-DD'),'YYYY-MM-DD') BETWEEN I.FROM_DATE AND NVL(I.TO_DATE,TO_DATE('9999-12-31','YYYY-MM-DD'))
			   	  AND I.ACTIVE = 1
			   	WHERE A.RECORD_NO = #RECORD_NO# 
			
	  	]]>
	</select>
	  	
	  <!-- update eatery record data -->
	 <update id="updateEateryRecord" parameterClass="SimpleMap" >
		<![CDATA[
			  UPDATE AR_EATERY_RECORDS A
			     SET R_TIME      = TO_DATE(#R_TIME#,'YYYY-MM-DD HH24:MI'),
				 	 REPAST_TYPE = #REPAST_TYPE#,
					 INSERT_BY   = 'H',
					 INSERT_TIME = SYSDATE,
					 OPERATOR_ID = #OPERATOR_ID#,
					 REMARK      = #REMARK#
			   WHERE A.RECORD_NO = #RECORD_NO# 
	 	]]>
	 </update>
	 
	  <!-- delete eatery record data

　 DELETE FROM AR_EATERY_RECORDS A
			     WHERE A.RECORD_NO = #RECORD_NO# 
-->
	 <delete id="deleteEateryRecord" parameterClass="int">
		<![CDATA[
		
		　 UPDATE AR_EATERY_RECORDS SET ACTIVE='0'
			     WHERE RECORD_NO = #RECORD_NO#            
		]]>
	　</delete>
	
	<!-- retrieve visit list by eatery -->
	<select id="retrieveEmpListByEatery" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
		    	SELECT CARD_NO,
					   FROM_DATE,
					   NVL(TO_DATE,' ') AS TO_DATE,
					   NVL(CHINESENAME,' ') AS CHINESENAME,
					   CHINESE_PINYIN,
					   ENGLISHNAME,
					   KOREANNAME
				  FROM (		  
						      SELECT G.CARD_NO,
							  		 TO_CHAR(G.FROM_DATE,'YYYY-MM-DD') FROM_DATE,
									 TO_CHAR(G.TO_DATE,'YYYY-MM-DD') TO_DATE,
							 		 A.CHINESENAME,
									 A.CHINESE_PINYIN,
									 A.ENGLISHNAME,
									 A.KOREANNAME
				                FROM AR_EMP_CARD G,
				               		 HR_EMPLOYEE A
				               WHERE G.EMPID = A.EMPID(+)
								 AND G.ACTIVE = 1
							 UNION ALL
								SELECT CARD_NO,
									   TO_CHAR(FROM_DATE,'YYYY-MM-DD') FROM_DATE,
									   TO_CHAR(TO_DATE,'YYYY-MM-DD') TO_DATE,
									   SY.CODE_NAME NAME,
									   NULL,
									   NULL,
									   NULL
								  FROM AR_VISIT_CARD AV,SY_CODE SY
								 WHERE AV.ACTIVE = 1 AND AV.NAME = SY.CODE_ID(+)
				        ) A
          
		]]>         
		<isNotEmpty prepend="WHERE" property="CONDITION">
			<![CDATA[
				(	
					A.CHINESENAME 		LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR A.CARD_NO 		LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR A.CHINESE_PINYIN LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR A.ENGLISHNAME    LIKE '%'||#CONDITION:VARCHAR#||'%'
					OR A.KOREANNAME     LIKE '%'||#CONDITION:VARCHAR#||'%'
				)
			]]>
		</isNotEmpty>
	</select>
	
	<!-- check attendance record -->
	<select id="checkAttRecord" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
			SELECT COUNT(T.EMPID)
			  FROM AR_MAC_RECORDS T
			 WHERE T.R_TIME = #rTime:TIMESTAMP#
			   AND T.EMPID = #personId:VARCHER#
			
		]]>
	</select>
	
</sqlMap>