<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="ev.evaluateapply">

<select id="getEvaluateApplyList" parameterClass="SimpleMap" resultClass="EvaluateInfo">
<![CDATA[

        SELECT H.EMPID,
		       H.PERSON_ID,
		       #yearMonth:VARCHAR# as MONTH,
		       case when sysdate>=ADD_MONTHS(to_date(#yearMonth:VARCHAR#, 'yyyy-mm'),1)+25 then 
                 'N'
                 ELSE 'Y'
                END as activity ,
		       H.DEPTID,
		       HR_DEPARTMENT.DEPTNAME,
		       H.CHINESENAME,
		       GET_CODE_NAME(H.STATUS_CODE) as STATUS,
		       H.POST_CODE,
		       S.CODE_NAME POST_CODE_NAME,
		       (select nvl(max(t.place),0)
		          from ev_detail_apply t
		         where t.empid = H.PERSON_ID
		           and t.evaluate_month =
		               to_char(to_date(#yearMonth:VARCHAR#, 'yyyy-mm') - 1, 'yyyymm')
		           and t.activity = '1') as LAST_MONTH_PLACE,
		       (select nvl(max(t.amount),0)
		          from ev_detail_apply t
		         where t.empid = H.PERSON_ID
		           and t.evaluate_month =
		               to_char(to_date(#yearMonth:VARCHAR#, 'yyyy-mm') - 1, 'yyyymm')
		           and t.activity = '1') as LAST_MONTH_AMOUNT   
		  FROM EV_HR_EMPLOYEE H, EV_HR_DEPARTMENT HR_DEPARTMENT, SY_CODE S
		 WHERE H.DEPTID = HR_DEPARTMENT.DEPTID
		   AND H.POST_CODE = S.CODE_ID
		   and substr(h.post_code,8,13) = substr(#position:VARCHAR#,8,13)
		   AND NVL(DATE_LEFT, TO_DATE('2999-12-31', 'YYYY-MM-DD')) > SYSDATE
		   AND H.PERSON_ID NOT IN
		       (SELECT EV.EMPID
		          FROM EV_DETAIL_APPLY EV
		         WHERE EV.EVALUATE_MONTH = #yearMonth:VARCHAR#
		           AND EV.DEPTID = DEPTID
		           AND substr(EV.POSITION, 8, 13) = substr(POST_CODE, 8, 13)
		           AND (EV.ACTIVITY <> '2'))   
   ]]>
   <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = h.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
   <isNotEmpty prepend="AND" property="ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = H.DEPTID	
              AND  substr(EAR.AFFIRM_POSITION, 8, 13) = substr(H.POST_CODE, 8, 13)
              AND EAR.AFFIRM_LEVEL = '1'
				   ) 
   </isNotEmpty>
   <![CDATA[
					 ORDER BY H.DEPTID,H.EMPID
             ]]>

 </select>
 
 
 <select id="getEvaluateApplyListCnt" parameterClass="SimpleMap" resultClass="int">
<![CDATA[

        SELECT COUNT(*)
		  FROM EV_HR_EMPLOYEE H, EV_HR_DEPARTMENT HR_DEPARTMENT, SY_CODE S
		 WHERE H.DEPTID = HR_DEPARTMENT.DEPTID
		   AND H.POST_CODE = S.CODE_ID
		   and substr(h.post_code,8,13) = substr(#position:VARCHAR#,8,13)
		   AND NVL(DATE_LEFT, TO_DATE('2999-12-31', 'YYYY-MM-DD')) > SYSDATE
		   AND H.PERSON_ID NOT IN
		       (SELECT EV.EMPID
		          FROM EV_DETAIL_APPLY EV
		         WHERE EV.EVALUATE_MONTH = #yearMonth:VARCHAR#
		           AND EV.DEPTID = DEPTID
		           AND EV.POSITION = POST_CODE
		           AND (EV.ACTIVITY <> '2'))   
   ]]>
   <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = h.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
   <isNotEmpty prepend="AND" property="ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = H.DEPTID	
              AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(H.POST_CODE, 8, 13)
              AND EAR.AFFIRM_LEVEL = '1'
				   ) 
   </isNotEmpty>
		
	</select>
 
		 
 <!-- retrieve department tree -->
	<select id="getEvaluateApplyDeptList" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
		SELECT A.DEPTID        deptID,
			       A.DEPTNAME      deptName,
			       A.DEPT_EN_NAME  deptEnName,
			       A.DEPT_KOR_NAME korDept,
			       A.DEPT_LEVEL    deptLevel
			  FROM HR_DEPT_TREE_V A
			 WHERE 1 = 1
		  	  AND A.CPNY_ID=#cpnyId:VARCHAR#
		  ]]>

		<isNotEmpty prepend="AND" property="ADMIN_ID">
			EXISTS
				 (SELECT *
				          FROM EV_AFFIRM_RELATION T
				         WHERE T.AFFIRMOR_ID = #ADMIN_ID:VARCHAR2#
				           AND T.AFFIRM_LEVEL = '1'
				           AND T.AFFIRM_DEPTID = A.DEPTID )	   
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="ALL">
			EXISTS
				 (SELECT *
				          FROM EV_AFFIRM_RELATION T
				         WHERE T.AFFIRM_DEPTID = A.DEPTID )	   
		</isNotEmpty>
		
		
		
	</select>
	
	
	<select id="getEvaluateAffirmDeptListBak" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
              SELECT A.DEPTID        deptID,
			       A.DEPTNAME      deptName,
			       A.DEPT_EN_NAME  deptEnName,
			       A.DEPT_KOR_NAME korDept,
			       A.DEPT_LEVEL    deptLevel
			  FROM HR_DEPT_TREE_V A
			 WHERE 1 = 1
			   AND A.CPNY_ID = #cpnyId:VARCHAR#
			   and (a.DEPTID in (select h.deptid
			                     from EV_HR_EMPLOYEE h
			                    where h.person_id = #ADMIN_ID:VARCHAR2#
			                      and (SELECT count(*)
			                             FROM EV_AFFIRM_RELATION T
			                            WHERE T.AFFIRMOR_ID = #ADMIN_ID:VARCHAR2#
			                              AND T.AFFIRM_LEVEL != '1') > 0)
			      
			    or a.DEPTID in (SELECT t.affirm_deptid
			                      FROM EV_AFFIRM_RELATION T
			                     WHERE T.AFFIRMOR_ID = #ADMIN_ID:VARCHAR2#
			                       AND T.AFFIRM_LEVEL != '1') )
		  ]]>

	</select>
	
	<select id="getEvaluateAffirmDeptList" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
		SELECT A.DEPTID        deptID,
			       A.DEPTNAME      deptName,
			       A.DEPT_EN_NAME  deptEnName,
			       A.DEPT_KOR_NAME korDept,
			       A.DEPT_LEVEL    deptLevel
			  FROM HR_DEPT_TREE_V A
			 WHERE 1 = 1
		  	  AND A.CPNY_ID=#cpnyId:VARCHAR#
		  ]]>

		<isNotEmpty prepend="AND" property="ADMIN_ID">
			EXISTS
				 (SELECT *
				          FROM EV_AFFIRM_RELATION T
				         WHERE T.AFFIRMOR_ID = #ADMIN_ID:VARCHAR2#
				           AND T.AFFIRM_LEVEL != '1'
				           AND T.AFFIRM_DEPTID = A.DEPTID )	   
		</isNotEmpty>
		
	</select>
	
	 <!-- -->
	<select id="getEvaluateApplyPositionList" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		    SELECT DISTINCT 'C_12004'||substr(T.AFFIRM_POSITION,8,13) AS AFFIRM_POSITION,
                  S.CODE_NAME       AS AFFIRM_POSITION_NAME
		    FROM EV_AFFIRM_RELATION T, SY_CODE S
		   WHERE T.AFFIRM_POSITION = S.CODE_ID
		     AND T.AFFIRM_LEVEL = '1'
		     AND T.AFFIRMOR_ID = #ADMIN_ID:VARCHAR2#
		  ]]>

		
	</select>
	
	
	 <!-- -->
	<select id="getEvaluateAffirmPositionList" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		    SELECT DISTINCT T.AFFIRM_POSITION AS AFFIRM_POSITION,
                  S.CODE_NAME       AS AFFIRM_POSITION_NAME
		    FROM EV_AFFIRM_RELATION T, SY_CODE S
		   WHERE T.AFFIRM_POSITION = S.CODE_ID
		     AND T.AFFIRM_LEVEL != '1'
		     AND T.AFFIRMOR_ID = #ADMIN_ID:VARCHAR2#
		  ]]>

		
	</select>
	
	<select id="getEvaluateQueryPositionList" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		    SELECT DISTINCT 'C_12004'||substr(T.AFFIRM_POSITION,8,13) AS AFFIRM_POSITION,
                  S.CODE_NAME       AS AFFIRM_POSITION_NAME
		    FROM EV_AFFIRM_RELATION T, SY_CODE S
		   WHERE T.AFFIRM_POSITION = S.CODE_ID
		  ]]>
		 <isNotEmpty prepend="AND" property="EV_ADMIN_ID">
			T.AFFIRMOR_ID = #EV_ADMIN_ID:VARCHAR2#
		</isNotEmpty> 

		
	</select>
	
	<!-- -->
	<select id="getChangePostCodeNames" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		   	SELECT EP.EVALUATE_POSITION, S.CODE_NAME AS EVALUATE_POSITION_NAME
			  FROM (SELECT DISTINCT T.EVALUATE_POSITION AS EVALUATE_POSITION
			          FROM EV_ITEM_RELATION T
			         WHERE T.EVALUATE_DEPTID = #DEPTID:VARCHAR#) EP,
			       SY_CODE S
			 WHERE EP.EVALUATE_POSITION = S.CODE_ID
		  ]]>
		
	</select>

	<select id="getEvaluateApplyItem" parameterClass="SimpleMap" resultClass="SimpleMap">
	<![CDATA[
		   SELECT distinct EI.ITEM_ID, EI.ITEM_NAME,EI.ID
				  FROM EV_ITEM_RELATION EIR, EV_ITEM EI
				 WHERE EIR.EVALUATE_ITEM_ID = EI.ITEM_ID
				   AND EIR.EVALUATE_MONTH = #yearMonth:VARCHAR#
				   AND EIR.EVALUATE_POSITION = #position:VARCHAR#
				 
	   ]]>
	      <isEmpty prepend="AND" property="dept">
			<![CDATA[
			     EXISTS
				 (SELECT *
				          FROM EV_AFFIRM_RELATION T
				         WHERE T.AFFIRMOR_ID = #ADMIN_ID:VARCHAR2#
				           AND T.AFFIRM_LEVEL = '1'
				           AND T.AFFIRM_DEPTID = EIR.EVALUATE_DEPTID )	   
             ]]>
		</isEmpty>
	    <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = EIR.EVALUATE_DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
		
		<![CDATA[
		  ORDER BY EI.ID
	   ]]>
	
	 </select>
	 
	 
	 <select id="getEvaluateAffirmItem" parameterClass="SimpleMap" resultClass="SimpleMap">
	<![CDATA[
		   SELECT distinct EI.ITEM_ID, EI.ITEM_NAME,EI.ID
				  FROM EV_ITEM_RELATION EIR, EV_ITEM EI
				 WHERE EIR.EVALUATE_ITEM_ID = EI.ITEM_ID
				   AND EIR.EVALUATE_MONTH = #yearMonth:VARCHAR#
				   AND EIR.EVALUATE_POSITION = #position:VARCHAR#
				 
	   ]]>
	      <isEmpty prepend="AND" property="dept">
			<![CDATA[
			     EXISTS
				 (SELECT *
				          FROM EV_AFFIRM_RELATION T
				         WHERE T.AFFIRMOR_ID = #ADMIN_ID:VARCHAR2#
				           AND T.AFFIRM_LEVEL != '1'
				           AND T.AFFIRM_DEPTID = EIR.EVALUATE_DEPTID )	   
             ]]>
		</isEmpty>
	    <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = EIR.EVALUATE_DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
		
		<![CDATA[
		  ORDER BY EI.ID
	   ]]>
	
	 </select>
	 
	 <select id="getEvaluateAffirmorList" parameterClass="SimpleMap" resultClass="EvaluateAffirmor">
	<![CDATA[
		    SELECT T.AFFIRMOR_ID AS AFFIRMORID, T.AFFIRM_LEVEL AFFIRMLEVEL,H.CHINESENAME AS AFFIRMORNAME
			  FROM EV_AFFIRM_RELATION T,EV_HR_EMPLOYEE H
			 WHERE 
			   T.AFFIRMOR_ID = H.PERSON_ID(+)
			   AND T.AFFIRM_DEPTID = #DEPTID:VARCHAR#
			   AND substr(T.AFFIRM_POSITION,8,13) = substr(#POSTCODE:VARCHAR#,8,13)
			   AND T.AFFIRM_LEVEL <> '1'
			 ORDER BY T.AFFIRM_LEVEL
	   ]]>
	
	 </select>
	 
	  <select id="getEvaluateAffirmorAllList" parameterClass="SimpleMap" resultClass="EvaluateAffirmor">
	<![CDATA[
		    SELECT T.AFFIRMOR_ID AS AFFIRMORID, T.AFFIRM_LEVEL AFFIRMLEVEL,H.CHINESENAME AS AFFIRMORNAME
			  FROM EV_AFFIRM_RELATION T,EV_HR_EMPLOYEE H
			 WHERE 
			   T.AFFIRMOR_ID = H.PERSON_ID(+)
			   AND T.AFFIRM_DEPTID = #DEPTID:VARCHAR#
			   AND substr(T.AFFIRM_POSITION, 8, 13) = substr(#POSTCODE:VARCHAR#, 8, 13) 
			 ORDER BY T.AFFIRM_LEVEL
	   ]]>
	
	 </select>
	 
	<select id="getSequence" parameterClass="SimpleMap" resultClass="int">
	<![CDATA[
		 SELECT $sql$
		 FROM DUAL
	]]>
	</select>
	
	<!-- insert evaluate apply information -->
	<insert id="insertEvDetailApply" parameterClass="EvaluateInfo"> 
		<![CDATA[
			INSERT INTO EV_DETAIL_APPLY 
						(APPLY_NO,
						 EVALUATE_MONTH, 
						 EMPID, 
						 DEPTID, 
						 DEPTNAME, 
						 POSITION, 
						 ACTIVITY, 
						 REMARK, 
					     LAST_MONTH_PLACE,
					     LAST_MONTH_AMOUNT,
					     CREATED_BY,
					     CREATE_DATE,
						 TOTAL,
						 ITEM1,
						 ITEM2,
						 ITEM3,
						 ITEM4,
						 ITEM5,
						 ITEM6,
						 ITEM7,
						 ITEM8,
						 ITEM9,
						 ITEM10,
						 ITEM11,
						 ITEM12,
						 ITEM13,
						 ITEM14,
						 ITEM15,
						 ITEM16,
						 ITEM17,
						 ITEM18,
						 ITEM19,
						 ITEM20,
						 ITEM21,
						 ITEM22,
						 ITEM23,
						 ITEM24,
						 ITEM25,
						 ITEM26,
						 ITEM27,
						 ITEM28,
						 ITEM29,
						 ITEM30,
						 ITEM0,
						 ITEM31,
						 ITEM32,
						 ITEM33,
						 ITEM34,
						 ITEM35,
						 ITEM36,
						 ITEM37,
						 ITEM38,
						 ITEM39,
						 ITEM40,
						 ITEM41,
						 ITEM42,
						 ITEM43,
						 ITEM44,
						 ITEM45,
						 ITEM46,
						 ITEM47,
						 ITEM48,
						 ITEM49,
						 ITEM50,
						 ITEM51,
						 ITEM52,
						 ITEM53,
						 ITEM54,
						 ITEM55,
						 ITEM56,
						 ITEM57,
						 ITEM58,
						 ITEM59,
						 ITEM60,
						 ITEM61,
						 ITEM62)
				VALUES  (#no:NUMERIC#, 
						 #MONTH:VARCHAR#, 
						 #PERSON_ID:VARCHAR#, 
						 #DEPTID:VARCHAR#,
						 get_dept_name(#DEPTID:VARCHAR#),
						 #POST_CODE:VARCHAR#,
						 -1, 
						 #REMARK:VARCHAR#, 
						 #LAST_MONTH_PLACE:VARCHAR#, 
						 #LAST_MONTH_AMOUNT:VARCHAR#, 
						 #createdBy:VARCHAR#,
						 SYSDATE, 
						 
						 #TOTAL:NUMERIC#,
						 #ITEM1:NUMERIC#,
						 #ITEM2:NUMERIC#,
						 #ITEM3:NUMERIC#,
						 #ITEM4:NUMERIC#,
						 #ITEM5:NUMERIC#,
						 #ITEM6:NUMERIC#,
						 #ITEM7:NUMERIC#,
						 #ITEM8:NUMERIC#,
						 #ITEM9:NUMERIC#,
						 #ITEM10:NUMERIC#,
						 #ITEM11:NUMERIC#,
						 #ITEM12:NUMERIC#,
						 #ITEM13:NUMERIC#,
						 #ITEM14:NUMERIC#,
						 #ITEM15:NUMERIC#,
						 #ITEM16:NUMERIC#,
						 #ITEM17:NUMERIC#,
						 #ITEM18:NUMERIC#,
						 #ITEM19:NUMERIC#,
						 #ITEM20:NUMERIC#,
						 #ITEM21:NUMERIC#,
						 #ITEM22:NUMERIC#,
						 #ITEM23:NUMERIC#,
						 #ITEM24:NUMERIC#,
						 #ITEM25:NUMERIC#,
						 #ITEM26:NUMERIC#,
						 #ITEM27:NUMERIC#,
						 #ITEM28:NUMERIC#,
						 #ITEM29:NUMERIC#,
						 #ITEM30:NUMERIC#,
						 #ITEM0:NUMERIC#,
						 #ITEM31:NUMERIC#,
						 #ITEM32:NUMERIC#,
						 #ITEM33:NUMERIC#,
						 #ITEM34:NUMERIC#,
						 #ITEM35:NUMERIC#,
						 #ITEM36:NUMERIC#,
						 #ITEM37:NUMERIC#,
						 #ITEM38:NUMERIC#,
						 #ITEM39:NUMERIC#,
						 #ITEM40:NUMERIC#,
						 #ITEM41:NUMERIC#,
						 #ITEM42:NUMERIC#,
						 #ITEM43:NUMERIC#,
						 #ITEM44:NUMERIC#,
						 #ITEM45:NUMERIC#,
						 #ITEM46:NUMERIC#,
						 #ITEM47:NUMERIC#,
						 #ITEM48:NUMERIC#,
						 #ITEM49:NUMERIC#,
						 #ITEM50:NUMERIC#,
						 #ITEM51:NUMERIC#,
						 #ITEM52:NUMERIC#,
						 #ITEM53:NUMERIC#,
						 #ITEM54:NUMERIC#,
						 #ITEM55:NUMERIC#,
						 #ITEM56:NUMERIC#,
						 #ITEM57:NUMERIC#,
						 #ITEM58:NUMERIC#,
						 #ITEM59:NUMERIC#,
						 #ITEM60:NUMERIC#,
						 #ITEM61:NUMERIC#,
						 #ITEM62:NUMERIC#
						 )    
		]]>
	</insert>
	
	<!-- insert affirmor information -->
	<insert id="insertAffirmorInfo" parameterClass="EvaluateAffirmor"> 
		<![CDATA[
		
			INSERT INTO ev_affirm 
				   (EV_AFFIRM_NO, 
				   	APPLY_NO, 
					AFFIRM_FLAG, 
					AFFIRM_LEVEL, 
					AFFIRMOR_ID, 
					CREATE_DATE, 
					CREATE_BY, 
					ACTIVITY
					) 
			VALUES (EV_AFFIRM_SEQ.NEXTVAL, 
				    #applyNo:NUMERIC#, 
				    0, 
					#affirmLevel:NUMERIC#, 
					#affirmorId:VARCHAR#, 
					SYSDATE, 
					#createdBy:VARCHAR#, 
					1
					)
				]]>
	</insert>

    <select id="getEvaluateAffirmList" parameterClass="SimpleMap" resultClass="EvaluateInfo">
	<![CDATA[
	        SELECT EV_DETAIL_APPLY.APPLY_NO AS no,
			       (select e.empid
			          from EV_HR_EMPLOYEE e
			         where e.person_id = EV_DETAIL_APPLY.EMPID) AS empId,
			       HR_EMPLOYEE.CHINESENAME AS chineseName,
			       HR_EMPLOYEE.deptname AS DEPTNAME,
			       GET_CODE_NAME(HR_EMPLOYEE.STATUS_CODE) as STATUS,
			       S.CODE_NAME POST_CODE_NAME,
			       EV_AFFIRM.AFFIRM_LEVEL AS affirmLevel,
			       EV_AFFIRM.AFFIRM_FLAG AS affirm_flag,
			       EV_AFFIRM.AFFIRM_REMARKS AS remarks,
			       NVL(EV_AFFIRM.UP_AFFIRM_FLAG, 1) AS up_flag,
			       NVL(EV_AFFIRM.NEXT_AFFIRM_FLAG, 0) AS next_flag,
			       NVL(EV_AFFIRM.MAX_LEVEL_FLAG, 0) AS maxLevel_flag,
			       MAX_AFFIRMOR_FLAG.AFFIRM_FLAG AS max_affirm_flag,
			       EV_DETAIL_APPLY.EVALUATE_MONTH,
			       EV_DETAIL_APPLY.DEPTID,
			       EV_DETAIL_APPLY.POSITION AS POST_CODE,
			       EV_DETAIL_APPLY.AMOUNT,
			       EV_DETAIL_APPLY.PLACE,
			       EV_DETAIL_APPLY.LAST_MONTH_PLACE,
			       EV_DETAIL_APPLY.LAST_MONTH_AMOUNT,
			       EV_DETAIL_APPLY.ACTIVITY,
			       EV_DETAIL_APPLY.REMARK,
			       EV_DETAIL_APPLY.Total,
			       EV_DETAIL_APPLY.ITEM1,
			       EV_DETAIL_APPLY.ITEM2,
			       EV_DETAIL_APPLY.ITEM3,
			       EV_DETAIL_APPLY.ITEM4,
			       EV_DETAIL_APPLY.ITEM5,
			       EV_DETAIL_APPLY.ITEM6,
			       EV_DETAIL_APPLY.ITEM7,
			       EV_DETAIL_APPLY.ITEM8,
			       EV_DETAIL_APPLY.ITEM9,
			       EV_DETAIL_APPLY.ITEM10,
			       EV_DETAIL_APPLY.ITEM11,
			       EV_DETAIL_APPLY.ITEM12,
			       EV_DETAIL_APPLY.ITEM13,
			       EV_DETAIL_APPLY.ITEM14,
			       EV_DETAIL_APPLY.ITEM15,
			       EV_DETAIL_APPLY.ITEM16,
			       EV_DETAIL_APPLY.ITEM17,
			       EV_DETAIL_APPLY.ITEM18,
			       EV_DETAIL_APPLY.ITEM19,
			       EV_DETAIL_APPLY.ITEM20,
			       EV_DETAIL_APPLY.ITEM21,
			       EV_DETAIL_APPLY.ITEM22,
			       EV_DETAIL_APPLY.ITEM23,
			       EV_DETAIL_APPLY.ITEM24,
			       EV_DETAIL_APPLY.ITEM25,
			       EV_DETAIL_APPLY.ITEM26,
			       EV_DETAIL_APPLY.ITEM27,
			       EV_DETAIL_APPLY.ITEM28,
			       EV_DETAIL_APPLY.ITEM29,
			       EV_DETAIL_APPLY.ITEM30,
			       EV_DETAIL_APPLY.ITEM31,
			       EV_DETAIL_APPLY.ITEM32,
			       EV_DETAIL_APPLY.ITEM33,
			       EV_DETAIL_APPLY.ITEM34,
			       EV_DETAIL_APPLY.ITEM35,
			       EV_DETAIL_APPLY.ITEM36,
			       EV_DETAIL_APPLY.ITEM37,
			       EV_DETAIL_APPLY.ITEM38,
			       EV_DETAIL_APPLY.ITEM39,
			       EV_DETAIL_APPLY.ITEM40,
			       EV_DETAIL_APPLY.ITEM41,
			       EV_DETAIL_APPLY.ITEM42,
			       EV_DETAIL_APPLY.ITEM43,
			       EV_DETAIL_APPLY.ITEM44,
			       EV_DETAIL_APPLY.ITEM45,
			       EV_DETAIL_APPLY.ITEM46,
			       EV_DETAIL_APPLY.ITEM47,
			       EV_DETAIL_APPLY.ITEM48,
			       EV_DETAIL_APPLY.ITEM49,
			       EV_DETAIL_APPLY.ITEM50,
			       EV_DETAIL_APPLY.ITEM51,
			       EV_DETAIL_APPLY.ITEM52,
			       EV_DETAIL_APPLY.ITEM53,
			       EV_DETAIL_APPLY.ITEM54,
			       EV_DETAIL_APPLY.ITEM55,
			       EV_DETAIL_APPLY.ITEM56,
			       EV_DETAIL_APPLY.ITEM57,
			       EV_DETAIL_APPLY.ITEM58,
			       EV_DETAIL_APPLY.ITEM59,
			       EV_DETAIL_APPLY.ITEM60,
			       EV_DETAIL_APPLY.ITEM61,
			       EV_DETAIL_APPLY.ITEM62,
			       EV_DETAIL_APPLY.ITEM0
			  FROM EV_DETAIL_APPLY,
			       EV_HR_EMP_V HR_EMPLOYEE,
			       SY_CODE S,
			       (SELECT EV_AFFIRM.*,
			               UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
			               UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
			               NEXT_AFFIRM.AFFIRM_FLAG AS NEXT_AFFIRM_FLAG,
			               (CASE
			                 WHEN EV_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL THEN
			                  1
			                 ELSE
			                  0
			               END) MAX_LEVEL_FLAG
			          FROM (SELECT EV_AFFIRM.*,
			                       EV_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,
			                       EV_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
			                  FROM EV_AFFIRM) EV_AFFIRM,
			               (SELECT T.APPLY_NO, MAX(T.AFFIRM_LEVEL) MAXLEVEL
			                  FROM EV_AFFIRM T
			                 GROUP BY T.APPLY_NO) ESS_AFFIRM_MAX_LEVEL,
			               (SELECT T.APPLY_NO,
			                       T.AFFIRM_LEVEL,
			                       T.AFFIRMOR_ID,
			                       T.AFFIRM_FLAG
			                  FROM EV_AFFIRM T) UP_AFFIRM,
			               (SELECT A.APPLY_NO, MAX(A.AFFIRM_FLAG) AS AFFIRM_FLAG
			                  FROM EV_AFFIRM A,
			                       (SELECT T.APPLY_NO, T.AFFIRMOR_ID, T.AFFIRM_LEVEL
			                          FROM EV_AFFIRM T
			                         WHERE T.AFFIRMOR_ID = #supervisor:VARCHAR#) B
			                 WHERE A.APPLY_NO = B.APPLY_NO
			                   AND A.AFFIRM_LEVEL > B.AFFIRM_LEVEL
			                 GROUP BY A.APPLY_NO) NEXT_AFFIRM
			         WHERE EV_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
			           AND EV_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
			           AND EV_AFFIRM.APPLY_NO = NEXT_AFFIRM.APPLY_NO(+)
			           AND EV_AFFIRM.APPLY_NO = ESS_AFFIRM_MAX_LEVEL.APPLY_NO(+)) EV_AFFIRM,
			       (SELECT EV_AFFIRM.AFFIRM_FLAG, EV_AFFIRM.APPLY_NO
			          FROM EV_AFFIRM,
			               (SELECT MAX(EV_AFFIRM.AFFIRM_LEVEL),
			                       MAX(EV_AFFIRM.EV_AFFIRM_NO) AR_DETAIL_AFFIRM_NO
			                  FROM EV_AFFIRM
			                 GROUP BY EV_AFFIRM.APPLY_NO) HH
			         WHERE EV_AFFIRM.EV_AFFIRM_NO = HH.AR_DETAIL_AFFIRM_NO) MAX_AFFIRMOR_FLAG
			      
			 WHERE EV_DETAIL_APPLY.APPLY_NO = MAX_AFFIRMOR_FLAG.APPLY_NO(+)
			   AND EV_DETAIL_APPLY.EMPID = HR_EMPLOYEE.person_id
			   AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
			   AND EV_DETAIL_APPLY.APPLY_NO = EV_AFFIRM.APPLY_NO
			   AND NVL(EV_AFFIRM.UP_AFFIRM_FLAG, 1) = 1
			   AND EV_AFFIRM.AFFIRMOR_ID = #supervisor:VARCHAR#
			   AND substr(EV_DETAIL_APPLY.POSITION,8,13) = substr(#position:VARCHAR#,8,13)
			   AND EV_DETAIL_APPLY.EVALUATE_MONTH = #yearMonth:VARCHAR#
			   AND EV_DETAIL_APPLY.ACTIVITY <> -1
			
	   ]]>
	   
	    <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = EV_DETAIL_APPLY.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
	   
	   <isNotEqual prepend="" property="qryType" compareValue="0"> 
		   
		    <isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁过的，无论是通过还是否决 -->
		    <![CDATA[
		      		         ( EV_AFFIRM.affirm_flag != 0 OR (EV_DETAIL_APPLY.ACTIVITY!=0 AND EV_DETAIL_APPLY.ACTIVITY!= -1) )
		    ]]>
		    </isEqual> 
		       
		    <isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
		    <![CDATA[
		         EV_AFFIRM.affirm_flag = 0
		    ]]>
		    </isEqual>
      </isNotEqual>
      <isNotEmpty prepend="AND" property="key">
		<![CDATA[			    
			       (   
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%' 
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%' 
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%' 
			   	    )
		]]>
		</isNotEmpty>
       
        <isEqual prepend="" property="position" compareValue="C_12005_1355928"> <!-- 工人按部门和名次排序 -->
		    <![CDATA[
		      		ORDER BY  EV_DETAIL_APPLY.DEPTID,EV_DETAIL_APPLY.PLACE        
		    ]]>
		</isEqual>
		
		<isNotEqual prepend="" property="position" compareValue="C_12005_1355928"> <!-- 非工人按上级部门和名次排序，因为非工人是按照上级部门进行排序的 -->
		    <![CDATA[
		      		ORDER BY  HR_EMPLOYEE.PARENT_DEPT_ID,EV_DETAIL_APPLY.PLACE        
		    ]]>
		</isNotEqual>
		 
   </select>
   
 <select id="getEvaluateAffirmListCnt" parameterClass="SimpleMap" resultClass="int">
<![CDATA[
		SELECT COUNT(EV_DETAIL_APPLY.APPLY_NO) AS COUNT
         FROM EV_DETAIL_APPLY,
			       EV_HR_EMP_V HR_EMPLOYEE,
			       SY_CODE S,
			       (SELECT EV_AFFIRM.*,
			               UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
			               UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
			               NEXT_AFFIRM.AFFIRM_FLAG AS NEXT_AFFIRM_FLAG,
			               (CASE
			                 WHEN EV_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL THEN
			                  1
			                 ELSE
			                  0
			               END) MAX_LEVEL_FLAG
			          FROM (SELECT EV_AFFIRM.*,
			                       EV_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,
			                       EV_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
			                  FROM EV_AFFIRM) EV_AFFIRM,
			               (SELECT T.APPLY_NO, MAX(T.AFFIRM_LEVEL) MAXLEVEL
			                  FROM EV_AFFIRM T
			                 GROUP BY T.APPLY_NO) ESS_AFFIRM_MAX_LEVEL,
			               (SELECT T.APPLY_NO,
			                       T.AFFIRM_LEVEL,
			                       T.AFFIRMOR_ID,
			                       T.AFFIRM_FLAG
			                  FROM EV_AFFIRM T) UP_AFFIRM,
			               (SELECT A.APPLY_NO, MAX(A.AFFIRM_FLAG) AS AFFIRM_FLAG
			                  FROM EV_AFFIRM A,
			                       (SELECT T.APPLY_NO, T.AFFIRMOR_ID, T.AFFIRM_LEVEL
			                          FROM EV_AFFIRM T
			                         WHERE T.AFFIRMOR_ID = #supervisor:VARCHAR#) B
			                 WHERE A.APPLY_NO = B.APPLY_NO
			                   AND A.AFFIRM_LEVEL > B.AFFIRM_LEVEL
			                 GROUP BY A.APPLY_NO) NEXT_AFFIRM
			         WHERE EV_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
			           AND EV_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
			           AND EV_AFFIRM.APPLY_NO = NEXT_AFFIRM.APPLY_NO(+)
			           AND EV_AFFIRM.APPLY_NO = ESS_AFFIRM_MAX_LEVEL.APPLY_NO(+)) EV_AFFIRM,
			       (SELECT EV_AFFIRM.AFFIRM_FLAG, EV_AFFIRM.APPLY_NO
			          FROM EV_AFFIRM,
			               (SELECT MAX(EV_AFFIRM.AFFIRM_LEVEL),
			                       MAX(EV_AFFIRM.EV_AFFIRM_NO) AR_DETAIL_AFFIRM_NO
			                  FROM EV_AFFIRM
			                 GROUP BY EV_AFFIRM.APPLY_NO) HH
			         WHERE EV_AFFIRM.EV_AFFIRM_NO = HH.AR_DETAIL_AFFIRM_NO) MAX_AFFIRMOR_FLAG
			      
			 WHERE EV_DETAIL_APPLY.APPLY_NO = MAX_AFFIRMOR_FLAG.APPLY_NO(+)
			   AND EV_DETAIL_APPLY.EMPID = HR_EMPLOYEE.person_id
			   AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
			   AND EV_DETAIL_APPLY.APPLY_NO = EV_AFFIRM.APPLY_NO
			   AND NVL(EV_AFFIRM.UP_AFFIRM_FLAG, 1) = 1
			   AND EV_AFFIRM.AFFIRMOR_ID = #supervisor:VARCHAR#
			   AND substr(EV_DETAIL_APPLY.POSITION,8,13) = substr(#position:VARCHAR#,8,13)
			   AND EV_DETAIL_APPLY.EVALUATE_MONTH = #yearMonth:VARCHAR#
			   AND EV_DETAIL_APPLY.ACTIVITY <> -1
			  
	   ]]>
	   
	    <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = EV_DETAIL_APPLY.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
      <isNotEqual prepend="" property="qryType" compareValue="0"> 
		   
		    <isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁过的，无论是通过还是否决 -->
		    <![CDATA[
		         ( EV_AFFIRM.affirm_flag != 0 OR (EV_DETAIL_APPLY.ACTIVITY!=0 AND EV_DETAIL_APPLY.ACTIVITY!= -1) )
		    ]]>
		    </isEqual> 
		       
		    <isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
		    <![CDATA[
		         EV_AFFIRM.affirm_flag = 0
		    ]]>
		    </isEqual>
      </isNotEqual>
      <isNotEmpty prepend="AND" property="key">
		<![CDATA[			    
			       (   
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%' 
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%' 
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%' 
			   	    )
		]]>
		</isNotEmpty>
   </select>
   
  <select id="getEvaluateNextAffirmor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
                       SELECT DISTINCT A.AFFIRMOR_ID, 
				                A.AFFIRM_LEVEL
				          FROM EV_AFFIRM A, EV_DETAIL_APPLY B
				         WHERE A.APPLY_NO = B.APPLY_NO
				           AND B.APPLY_NO IN ($applyStr$)
				           AND A.AFFIRM_LEVEL = (SELECT MAX(T.AFFIRM_LEVEL)
				                          FROM EV_AFFIRM T
				                         WHERE T.AFFIRMOR_ID = #curAffirmor:VARCHAR#
				                           AND T.APPLY_NO IN ($applyStr$)) + 1     								           
	]]>
	</select>
	
	
	<select id="getEvaluateDeptAndPosition" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			 SELECT DISTINCT E.EVALUATE_MONTH,E.DEPTID, E.POSITION
                    FROM EV_DETAIL_APPLY E
                    WHERE E.APPLY_NO IN ($applyStr$)		           
	]]>
	</select>
	
	<select id="getEvaluateApplyNoForMail" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				 	SELECT A.APPLY_NO APPLY_NO
					  FROM EV_DETAIL_APPLY A, 
					  	   EV_AFFIRM B
					 WHERE A.APPLY_NO = B.APPLY_NO
					   AND B.AFFIRM_LEVEL = #affirmLevel:VARCHAR#
					   AND B.AFFIRMOR_ID = #affirmorId:VARCHAR#
					   AND A.APPLY_NO IN ($applyStr$)

	]]>
	</select>
	
	<select id="getEvaluateApplyor" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT DISTINCT
					   A.CREATED_BY CREATED_BY
				FROM EV_DETAIL_APPLY A
				WHERE A.APPLY_NO IN($applyStr$)
	]]>
	</select>
	
	<select id="getEvaluateApplyNoCreateBy" parameterClass="SimpleMap" resultClass="SimpleMap" remapResults="true">
	<![CDATA[				
			
				SELECT A.APPLY_NO APPLY_NO
				  FROM EV_DETAIL_APPLY A
				 WHERE A.APPLY_NO IN ($applyStr$)
				   AND A.CREATED_BY = #createBy:VARCHAR#

	]]>
	</select>
	
	<select id="setToEmail" parameterClass="SimpleMap" resultClass="SimpleMap">
	<![CDATA[
		select e.empid ,e.chinesename,e.email from EV_HR_EMPLOYEE e where e.person_id=#setTo:VARCHAR#
	]]>
	</select>
	
	<select id="applyEvaluateResult" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
			SELECT 
	               EV.TOTAL,
	               EV.REMARK,
	               HR.EMPID,
	               HR.CHINESENAME,
	              E.AFFIRM_REMARKS
	        FROM EV_DETAIL_APPLY EV,
	             EV_HR_EMPLOYEE HR,
	             EV_AFFIRM E
	        WHERE EV.EMPID = HR.PERSON_ID
	        AND   EV.APPLY_NO = E.APPLY_NO
	        AND   EV.APPLY_NO IN ($applyNoStr$)
	        AND   E.AFFIRMOR_ID = #adminId:VARCHAR#
			
	]]>
	</select>
	
	<select id="applyEvaluateResultNoAffirmor" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
			SELECT 
	               EV.TOTAL,
	               EV.REMARK,
	               HR.EMPID,
	               HR.CHINESENAME
	        FROM EV_DETAIL_APPLY EV,
	             EV_HR_EMPLOYEE HR
	        WHERE EV.EMPID = HR.PERSON_ID
	        AND   EV.APPLY_NO IN ($applyNoStr$)
			
	]]>
	</select>
	
	
	 <select id="getEvaluateDetailList" parameterClass="SimpleMap" resultClass="EvaluateInfo">
	<![CDATA[
			SELECT EV_DETAIL_APPLY.APPLY_NO AS no,
			       (SELECT E.EMPID
			          FROM EV_HR_EMPLOYEE E
			         WHERE E.PERSON_ID = EV_DETAIL_APPLY.EMPID) AS EMPID,
			       HR_EMPLOYEE.CHINESENAME AS CHINESENAME,
			       HR_EMPLOYEE.DEPTNAME AS DEPTNAME,
			       GET_CODE_NAME(HR_EMPLOYEE.STATUS_CODE) AS STATUS,
			       S.CODE_NAME POST_CODE_NAME,
			       EV_AFFIRM.MAXFLAG AS AFFIRM_FLAG,
			      
			       EV_DETAIL_APPLY.DEPTID DEPTID,
			       EV_DETAIL_APPLY.EVALUATE_MONTH MONTH,
			       EV_DETAIL_APPLY.POSITION POST_CODE,
			       EV_DETAIL_APPLY.AMOUNT,
			       EV_DETAIL_APPLY.PLACE,
			       EV_DETAIL_APPLY.LAST_MONTH_PLACE,
			        EV_DETAIL_APPLY.LAST_MONTH_AMOUNT,
			       EV_DETAIL_APPLY.ACTIVITY,
			       EV_DETAIL_APPLY.REMARK,
			       EV_DETAIL_APPLY.TOTAL,
			       EV_DETAIL_APPLY.ITEM1,
			       EV_DETAIL_APPLY.ITEM2,
			       EV_DETAIL_APPLY.ITEM3,
			       EV_DETAIL_APPLY.ITEM4,
			       EV_DETAIL_APPLY.ITEM5,
			       EV_DETAIL_APPLY.ITEM6,
			       EV_DETAIL_APPLY.ITEM7,
			       EV_DETAIL_APPLY.ITEM8,
			       EV_DETAIL_APPLY.ITEM9,
			       EV_DETAIL_APPLY.ITEM10,
			       EV_DETAIL_APPLY.ITEM11,
			       EV_DETAIL_APPLY.ITEM12,
			       EV_DETAIL_APPLY.ITEM13,
			       EV_DETAIL_APPLY.ITEM14,
			       EV_DETAIL_APPLY.ITEM15,
			       EV_DETAIL_APPLY.ITEM16,
			       EV_DETAIL_APPLY.ITEM17,
			       EV_DETAIL_APPLY.ITEM18,
			       EV_DETAIL_APPLY.ITEM19,
			       EV_DETAIL_APPLY.ITEM20,
			       EV_DETAIL_APPLY.ITEM21,
			       EV_DETAIL_APPLY.ITEM22,
			       EV_DETAIL_APPLY.ITEM23,
			       EV_DETAIL_APPLY.ITEM24,
			       EV_DETAIL_APPLY.ITEM25,
			       EV_DETAIL_APPLY.ITEM26,
			       EV_DETAIL_APPLY.ITEM27,
			       EV_DETAIL_APPLY.ITEM28,
			       EV_DETAIL_APPLY.ITEM29,
			       EV_DETAIL_APPLY.ITEM30,
			       EV_DETAIL_APPLY.ITEM31,
			       EV_DETAIL_APPLY.ITEM32,
			       EV_DETAIL_APPLY.ITEM33,
			       EV_DETAIL_APPLY.ITEM34,
			       EV_DETAIL_APPLY.ITEM35,
			       EV_DETAIL_APPLY.ITEM36,
			       EV_DETAIL_APPLY.ITEM37,
			       EV_DETAIL_APPLY.ITEM38,
			       EV_DETAIL_APPLY.ITEM39,
			       EV_DETAIL_APPLY.ITEM40,
			       EV_DETAIL_APPLY.ITEM41,
			       EV_DETAIL_APPLY.ITEM42,
			       EV_DETAIL_APPLY.ITEM43,
			       EV_DETAIL_APPLY.ITEM44,
			       EV_DETAIL_APPLY.ITEM45,
			       EV_DETAIL_APPLY.ITEM46,
			       EV_DETAIL_APPLY.ITEM47,
			       EV_DETAIL_APPLY.ITEM48,
			       EV_DETAIL_APPLY.ITEM49,
			       EV_DETAIL_APPLY.ITEM50,
			       EV_DETAIL_APPLY.ITEM51,
			       EV_DETAIL_APPLY.ITEM52,
			       EV_DETAIL_APPLY.ITEM53,
			       EV_DETAIL_APPLY.ITEM54,
			       EV_DETAIL_APPLY.ITEM55,
			       EV_DETAIL_APPLY.ITEM56,
			       EV_DETAIL_APPLY.ITEM57,
			       EV_DETAIL_APPLY.ITEM58,
			       EV_DETAIL_APPLY.ITEM59,
			       EV_DETAIL_APPLY.ITEM60,
			       EV_DETAIL_APPLY.ITEM61,
			       EV_DETAIL_APPLY.ITEM62,
			       EV_DETAIL_APPLY.ITEM0
			  FROM EV_DETAIL_APPLY,
			       EV_HR_EMP_V HR_EMPLOYEE,
			       SY_CODE S,
			       (SELECT T.APPLY_NO, MAX(T.AFFIRM_FLAG) MAXFLAG
			          FROM EV_AFFIRM T
			         GROUP BY T.APPLY_NO) EV_AFFIRM
			       
			 WHERE EV_DETAIL_APPLY.EMPID = HR_EMPLOYEE.PERSON_ID
			   AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
			   AND EV_DETAIL_APPLY.APPLY_NO = EV_AFFIRM.APPLY_NO
			   AND EV_DETAIL_APPLY.CREATED_BY = #ADMIN_ID:VARCHAR# 
			   AND EV_DETAIL_APPLY.EVALUATE_MONTH = #yearMonth:VARCHAR# 
			   AND substr(EV_DETAIL_APPLY.POSITION,8,13) = substr(#position:VARCHAR#,8,13)
			  
	
	  

	   ]]>
	   
	    <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = HR_EMPLOYEE.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
	   
	   <isNotEmpty prepend="AND" property="ADMIN_ID">
			  EXISTS ( SELECT *
			 		   	   FROM EV_AFFIRM_RELATION EAR
						  WHERE EAR.AFFIRMOR_ID  = #ADMIN_ID:VARCHAR#
						    AND EAR.AFFIRM_DEPTID = EV_DETAIL_APPLY.DEPTID	
			              AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(EV_DETAIL_APPLY.POSITION, 8, 13)
			              AND EAR.AFFIRM_LEVEL = '1'
					   ) 
      </isNotEmpty>
	   
	  
      <isNotEmpty prepend="AND" property="key">
		<![CDATA[			    
			       (   
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%' 
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%' 
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%' 
			   	    )
		]]>
		</isNotEmpty>
       <![CDATA[
       
         ORDER BY ACTIVITY,EV_AFFIRM.MAXFLAG
       ]]>
   </select>
   
 <select id="getEvaluateDetailListCnt" parameterClass="SimpleMap" resultClass="int">
<![CDATA[
		SELECT COUNT(*)
			  FROM EV_DETAIL_APPLY,
			       EV_HR_EMP_V HR_EMPLOYEE,
			       SY_CODE S,
			       (SELECT T.APPLY_NO, MAX(T.AFFIRM_FLAG) MAXFLAG
			          FROM EV_AFFIRM T
			         GROUP BY T.APPLY_NO) EV_AFFIRM
			       
			 WHERE EV_DETAIL_APPLY.EMPID = HR_EMPLOYEE.PERSON_ID
			   AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
			   AND EV_DETAIL_APPLY.APPLY_NO = EV_AFFIRM.APPLY_NO
			   AND EV_DETAIL_APPLY.CREATED_BY = #ADMIN_ID:VARCHAR# 
			   AND EV_DETAIL_APPLY.EVALUATE_MONTH = #yearMonth:VARCHAR# 
			   AND substr(EV_DETAIL_APPLY.POSITION,8,13) = substr(#position:VARCHAR#,8,13)
			   
	   ]]>
	   
	    <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = HR_EMPLOYEE.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
	   
	   <isNotEmpty prepend="AND" property="ADMIN_ID">
			  EXISTS ( SELECT *
			 		   	   FROM EV_AFFIRM_RELATION EAR
						  WHERE EAR.AFFIRMOR_ID  = #ADMIN_ID:VARCHAR#
						    AND EAR.AFFIRM_DEPTID = EV_DETAIL_APPLY.DEPTID	
			              AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(EV_DETAIL_APPLY.POSITION, 8, 13)
			              AND EAR.AFFIRM_LEVEL = '1'
					   ) 
      </isNotEmpty>
	   
	  
      <isNotEmpty prepend="AND" property="key">
		<![CDATA[			    
			       (   
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%' 
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%' 
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%' 
			   	    )
		]]>
		</isNotEmpty>
   </select>
   
   
   <update id="updateEvaluateDetailSortGongren" parameterClass="SimpleMap">
   <![CDATA[
		  UPDATE EV_DETAIL_APPLY E
			   SET E.PLACE = (SELECT T.PX
			                    FROM (SELECT EVD.APPLY_NO,
			                                 RANK() OVER(ORDER BY EVD.TOTAL DESC) AS PX
			                            FROM EV_DETAIL_APPLY EVD
			                           WHERE EVD.DEPTID = #dept:VARCHAR# 
			                             AND EVD.EVALUATE_MONTH =#yearMonth:VARCHAR# 
			                             AND EVD.POSITION =#post:VARCHAR# 
			                             AND EVD.TOTAL <> 0
			                             AND EVD.ACTIVITY <> '2') T
			                   WHERE T.APPLY_NO = E.APPLY_NO),
			      E.AMOUNT = (
			   (SELECT COUNT(EVD.APPLY_NO)    
                                  FROM EV_DETAIL_APPLY EVD
                                 WHERE EVD.DEPTID = #dept:VARCHAR# 
			                           AND EVD.EVALUATE_MONTH =#yearMonth:VARCHAR# 
			                           AND EVD.POSITION =#post:VARCHAR# 
                                       AND EVD.TOTAL <> 0
                                       AND EVD.ACTIVITY <> '2')
			   )                
			 WHERE EXISTS
			 (SELECT *
			          FROM (SELECT EVD.APPLY_NO, RANK() OVER(ORDER BY EVD.TOTAL DESC) AS PX
			                  FROM EV_DETAIL_APPLY EVD
			                 WHERE EVD.DEPTID = #dept:VARCHAR# 
			                   AND EVD.EVALUATE_MONTH =#yearMonth:VARCHAR# 
			                   AND EVD.POSITION =#post:VARCHAR# 
			                   AND EVD.TOTAL <> 0
			                   AND EVD.ACTIVITY <> '2') T
			         WHERE T.APPLY_NO = E.APPLY_NO)
	]]>
     
   </update>
   
   <update id="updateEvaluateDetailSortNoGongren" parameterClass="SimpleMap">
   <![CDATA[
		  UPDATE EV_DETAIL_APPLY E
			   SET E.PLACE = (SELECT T.PX
			                    FROM (SELECT EVD.APPLY_NO,
			                                 RANK() OVER(ORDER BY EVD.TOTAL DESC) AS PX
			                            FROM EV_DETAIL_APPLY EVD
			                           WHERE EVD.DEPTID in
			                        (SELECT HRD.DEPTID
									  FROM EV_HR_DEPARTMENT HRD
									 WHERE HRD.PARENT_DEPT_ID IN
									       (SELECT H.PARENT_DEPT_ID
									          FROM EV_HR_DEPARTMENT H
									         WHERE H.DEPTID = #dept:VARCHAR#))
			                             AND EVD.EVALUATE_MONTH =#yearMonth:VARCHAR# 
			                             AND EVD.POSITION =#post:VARCHAR# 
			                             AND EVD.TOTAL <> 0
			                             AND EVD.ACTIVITY <> '2') T
			                   WHERE T.APPLY_NO = E.APPLY_NO),
			       E.AMOUNT = (SELECT COUNT(EVD.APPLY_NO)     
                                  FROM EV_DETAIL_APPLY EVD
                                 WHERE EVD.DEPTID IN
                              (SELECT HRD.DEPTID
                    FROM EV_HR_DEPARTMENT HRD
                   WHERE HRD.PARENT_DEPT_ID IN
                         (SELECT H.PARENT_DEPT_ID
                            FROM EV_HR_DEPARTMENT H
                           WHERE H.DEPTID = #dept:VARCHAR#))
			                             AND EVD.EVALUATE_MONTH =#yearMonth:VARCHAR# 
			                             AND EVD.POSITION =#post:VARCHAR# 
                                   AND EVD.TOTAL <> 0
                                   AND EVD.ACTIVITY <> '2')              
			 WHERE EXISTS
			 (SELECT *
			          FROM (SELECT EVD.APPLY_NO, RANK() OVER(ORDER BY EVD.TOTAL DESC) AS PX
			                  FROM EV_DETAIL_APPLY EVD
			                 WHERE EVD.DEPTID in 
			                   (SELECT HRD.DEPTID
									  FROM EV_HR_DEPARTMENT HRD
									 WHERE HRD.PARENT_DEPT_ID IN
									       (SELECT H.PARENT_DEPT_ID
									          FROM EV_HR_DEPARTMENT H
									         WHERE H.DEPTID = #dept:VARCHAR#)) 
			                   AND EVD.EVALUATE_MONTH =#yearMonth:VARCHAR# 
			                   AND EVD.POSITION =#post:VARCHAR# 
			                   AND EVD.TOTAL <> 0
			                   AND EVD.ACTIVITY <> '2') T
			         WHERE T.APPLY_NO = E.APPLY_NO)
	]]>
     
   </update>
   
   
   
   <update id="updateEvaluateDetailSortZero" parameterClass="SimpleMap">
   <![CDATA[
			UPDATE EV_DETAIL_APPLY E
			   SET E.PLACE = '',
			       E.AMOUNT = ''
			 WHERE E.DEPTID = #dept:VARCHAR#
			   AND E.EVALUATE_MONTH = #yearMonth:VARCHAR#
			   AND E.POSITION = #post:VARCHAR#
			   AND E.TOTAL = 0
			   AND E.ACTIVITY <> '2'	        
	]]>
   </update>
   
   <select id="getEvAffirmorEvaluateAffirm" parameterClass="SimpleMap" resultClass="SimpleMap"  remapResults="true">
	<![CDATA[				
			SELECT DISTINCT A.AFFIRMOR_ID AFFIRMOR_ID
             FROM EV_AFFIRM A, ev_detail_apply B
			 WHERE A.APPLY_NO = B.APPLY_NO
			   AND A.AFFIRM_LEVEL = #applyLevel:VARCHAR#
			   AND A.ACTIVITY = 1
			   AND A.APPLY_NO IN ($applyStr$)
	]]>
	</select>
	
	<!--  SELECT  E.AFFIRM_RELATION_NO SEQ_NO,
		           E.AFFIRM_DEPTID,
			       HD.DEPTNAME,
			       HRD.DEPTNAME AS FOURTHDEPT,
			       E.AFFIRMOR_ID,
			       HE.EMPID,
			       HE.CHINESENAME,
			       E.AFFIRM_LEVEL,
			       E.AFFIRM_POSITION,
			       S.CODE_NAME AFFIRM_POSITION_NAME -->
	
	<select id="getEvaluateAffirmSetList" parameterClass="SimpleMap"
		resultClass="EvaluateAffirm">
		<![CDATA[	
  
		   SELECT  DISTINCT
		           E.AFFIRM_DEPTID deptId,
			       HD.DEPTNAME,
			       HRD.DEPTNAME AS FOURTHDEPT,
			       E.AFFIRM_POSITION as POSITION,
			       S.CODE_NAME POSITIONNAME
			  FROM EV_AFFIRM_RELATION E, EV_HR_EMPLOYEE HE, EV_HR_DEPARTMENT HD, SY_CODE S,EV_HR_DEPARTMENT HRD
			 WHERE E.AFFIRM_DEPTID = HD.DEPTID
			   AND E.AFFIRMOR_ID = HE.PERSON_ID
			   AND E.AFFIRM_POSITION = S.CODE_ID
			   AND HD.FOURTHDEPT = HRD.DEPTID(+)
			   AND HD.CPNY_ID = #cpnyId:VARCHAR#
		  ]]>

		<isNotEmpty prepend="AND" property="dept">
			E.AFFIRM_DEPTID=#dept:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="position">
			substr(E.AFFIRM_POSITION , 8, 13) = substr(#position:VARCHAR# , 8, 13)
		</isNotEmpty>
		
	</select>
	
	
	<select id="getEvaluateAffirmSetListCnt" parameterClass="SimpleMap"
		resultClass="int">
		<![CDATA[	
        SELECT COUNT(*) FROM (
		   SELECT  DISTINCT E.AFFIRM_DEPTID,
			       HD.DEPTNAME,
			       HRD.DEPTNAME AS FOURTHDEPT,
			       E.AFFIRM_POSITION,
			       S.CODE_NAME AFFIRM_POSITION_NAME
			  FROM EV_AFFIRM_RELATION E, EV_HR_EMPLOYEE HE, EV_HR_DEPARTMENT HD, SY_CODE S,EV_HR_DEPARTMENT HRD
			 WHERE E.AFFIRM_DEPTID = HD.DEPTID
			   AND E.AFFIRMOR_ID = HE.PERSON_ID
			   AND E.AFFIRM_POSITION = S.CODE_ID
			   AND HD.FOURTHDEPT = HRD.DEPTID(+)
			   AND HD.CPNY_ID = #cpnyId:VARCHAR#
		  ]]>

		<isNotEmpty prepend="AND" property="dept">
			E.AFFIRM_DEPTID=#dept:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="position">
			substr(E.AFFIRM_POSITION , 8, 13) = substr(#position:VARCHAR# , 8, 13)
		</isNotEmpty>
		<![CDATA[	
			   ) 
		  ]]>
	</select>
	
	<!--  SELECT T.ITEM_RELATION_NO SEQ_NO,
			       T.EVALUATE_MONTH,
			       T.EVALUATE_DEPTID,
			       H.DEPTNAME,
			       HRD.DEPTNAME AS FOURTHDEPT,
			       T.EVALUATE_POSITION,
			       S.CODE_NAME AS EVALUATE_POSITION_NAME,
			       T.EVALUATE_ITEM_ID,
			       E.ITEM_NAME -->
	
	<select id="getEvaluateItemSetList" parameterClass="SimpleMap"
		resultClass="EvaluateSetItem">
		<![CDATA[	
			SELECT DISTINCT
			       T.EVALUATE_MONTH AS MONTH,
			       T.EVALUATE_DEPTID AS DEPTID,
			       H.DEPTNAME,
			       HRD.DEPTNAME AS FOURTHDEPT,
			       T.EVALUATE_POSITION AS POSITION,
			       S.CODE_NAME AS POSITIONNAME
			       
			  FROM EV_ITEM_RELATION T, EV_HR_DEPARTMENT H, SY_CODE S, EV_ITEM E,EV_HR_DEPARTMENT HRD
			 WHERE T.EVALUATE_DEPTID = H.DEPTID
			   AND T.EVALUATE_POSITION = S.CODE_ID
			   AND T.EVALUATE_ITEM_ID = E.ITEM_ID
			   AND H.FOURTHDEPT = HRD.DEPTID(+)
			   AND H.CPNY_ID = #cpnyId:VARCHAR#
			  
		  ]]>

		<isNotEmpty prepend="AND" property="dept">
			t.EVALUATE_DEPTID=#dept:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="position">
			t.EVALUATE_POSITION=#position:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="yearMonth">
			t.EVALUATE_MONTH=#yearMonth:VARCHAR#
		</isNotEmpty>
		<![CDATA[	
             ORDER BY T.EVALUATE_MONTH DESC,T.EVALUATE_DEPTID,T.EVALUATE_POSITION   
		  ]]>
		
	</select>
	
	
	<select id="getEvaluateItemSetListCnt" parameterClass="SimpleMap"
		resultClass="int">
			<![CDATA[	
			SELECT COUNT(*) FROM (
			
			SELECT DISTINCT
			       T.EVALUATE_MONTH,
			       T.EVALUATE_DEPTID,
			       H.DEPTNAME,
			       HRD.DEPTNAME AS FOURTHDEPT,
			       T.EVALUATE_POSITION,
			       S.CODE_NAME AS EVALUATE_POSITION_NAME
			  FROM EV_ITEM_RELATION T, EV_HR_DEPARTMENT H, SY_CODE S, EV_ITEM E,EV_HR_DEPARTMENT HRD
			 WHERE T.EVALUATE_DEPTID = H.DEPTID
			   AND T.EVALUATE_POSITION = S.CODE_ID
			   AND T.EVALUATE_ITEM_ID = E.ITEM_ID
			   AND H.FOURTHDEPT = HRD.DEPTID(+)
			   AND H.CPNY_ID = #cpnyId:VARCHAR#
			  
		  ]]>

		<isNotEmpty prepend="AND" property="dept">
			t.EVALUATE_DEPTID=#dept:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="position">
			t.EVALUATE_POSITION=#position:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="yearMonth">
			t.EVALUATE_MONTH=#yearMonth:VARCHAR#
		</isNotEmpty>
		<![CDATA[	
			   ) 
		  ]]>
		
	</select>
	
	
	<select id="getEvaluatePositionSetList" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		  SELECT T.CODE_ID,T.CODE_NAME
				  FROM SY_CODE T
				 WHERE T.PARENT_CODE = 'PositionCode'
				   AND T.CODE_ID IN
				       ('C_12004_1355928', 'C_12004_1331763', 'C_12004_1331764')
				 ORDER BY T.CODE_NO DESC
		  ]]>
		
	</select>
	
	<select id="getEvaluateItemList" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		  SELECT T.ITEM_ID,T.ITEM_NAME FROM EV_ITEM T ORDER BY T.ID
		  ]]>
		
	</select>
 
	<select id="getEvaluateAffirmSetInfo" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		   SELECT  E.AFFIRM_RELATION_NO SEQ_NO,
		           E.AFFIRM_DEPTID,
			       HD.DEPTNAME,
			       HRD.DEPTNAME AS FOURTHDEPT,
			       E.AFFIRMOR_ID,
			       HE.EMPID,
			       HE.CHINESENAME,
			       E.AFFIRM_LEVEL,
			       E.AFFIRM_POSITION,
			       S.CODE_NAME AFFIRM_POSITION_NAME
			  FROM EV_AFFIRM_RELATION E, EV_HR_EMPLOYEE HE, EV_HR_DEPARTMENT HD, SY_CODE S,EV_HR_DEPARTMENT HRD
			 WHERE E.AFFIRM_DEPTID = HD.DEPTID
			   AND E.AFFIRMOR_ID = HE.PERSON_ID
			   AND E.AFFIRM_POSITION = S.CODE_ID
			   AND HD.FOURTHDEPT = HRD.DEPTID(+)
			  
		  ]]>
		  <isNotEmpty prepend="AND" property="SEQ_NO">
				<![CDATA[		   
				 	 E.AFFIRM_RELATION_NO = #SEQ_NO#
				]]>	
		</isNotEmpty>

		
	</select>
	
	<insert id="insertAffirmSetInfo" parameterClass="SimpleMap">
		<![CDATA[	
			INSERT INTO EV_AFFIRM_RELATION A
			     ( A.AFFIRM_RELATION_NO,
			       A.AFFIRM_DEPTID,
			       A.AFFIRM_POSITION,
			       A.AFFIRMOR_ID,
			       A.AFFIRM_LEVEL,
			       A.UPDATE_DATE,
			       A.UPDATE_BY
			      )
			 VALUES
			 	 ( EV_AFFIRM_RELATION_SEQ.NEXTVAL,
			 	   #DeptId:VARCHAR#,
			 	   #selectPosition:VARCHAR#,
			 	   get_personid(#empID:VARCHAR#,#cpnyId:VARCHAR#),
			 	   #level:VARCHAR#,
			 	   SYSDATE,
			 	   #personId:VARCHAR#
			 	   )
		]]>
	</insert>
	
	<update id="updateAffirmSetInfo" parameterClass="SimpleMap">
		<![CDATA[
				UPDATE EV_AFFIRM_RELATION A
				SET    A.AFFIRMOR_ID = get_personid(#empID:VARCHAR#,#cpnyId:VARCHAR#),
			           A.AFFIRM_LEVEL = #level:VARCHAR#,
			           A.UPDATE_DATE  = SYSDATE,
			           A.UPDATE_BY   = #personId:VARCHAR#
				WHERE A.AFFIRM_RELATION_NO = #SEQ_NO:VARCHAR#
		]]>
	</update>
	
	
	<delete id="deleteAffirmSetInfo" parameterClass="SimpleMap">
		<![CDATA[
				DELETE EV_AFFIRM_RELATION WHERE AFFIRM_DEPTID = #DEPTID_SEQ:VARCHAR# AND AFFIRM_POSITION = #POSITION_SEQ:VARCHAR#
		]]>
	</delete>
	
		<insert id="insertItemSetInfo" parameterClass="SimpleMap">
		<![CDATA[	
			INSERT INTO EV_ITEM_RELATION A
			     ( A.ITEM_RELATION_NO,
			       A.EVALUATE_MONTH,
			       A.EVALUATE_DEPTID,
			       A.EVALUATE_POSITION,
			       A.EVALUATE_ITEM_ID,
			       A.EVALUATE_ITEM_PROPORTION,
			       A.UPDATE_DATE,
			       A.UPDATE_BY
			      )
			 VALUES
			 	 ( EV_ITEM_RELATION_SEQ.NEXTVAL,
			 	   #yearMonth:VARCHAR#,
			 	   #DeptId:VARCHAR#,
			 	   #selectPosition:VARCHAR#,
			 	   #selectItem:VARCHAR#,
			 	   #proportion:VARCHAR#,
			 	   SYSDATE,
			 	   #personId:VARCHAR#
			 	   )
		]]>
	</insert>
    <select id="getEvaluateItemSetInfo" parameterClass="SimpleMap"
		resultClass="SimpleMap">
		<![CDATA[	
  
		  SELECT T.ITEM_RELATION_NO SEQ_NO,
			       T.EVALUATE_MONTH,
			       T.EVALUATE_DEPTID,
			       H.DEPTNAME,
			       HRD.DEPTNAME AS FOURTHDEPT,
			       T.EVALUATE_POSITION,
			       S.CODE_NAME AS EVALUATE_POSITION_NAME,
			       T.EVALUATE_ITEM_ID,
			       E.ITEM_NAME
			  FROM EV_ITEM_RELATION T, EV_HR_DEPARTMENT H, SY_CODE S, EV_ITEM E,EV_HR_DEPARTMENT HRD
			 WHERE T.EVALUATE_DEPTID = H.DEPTID
			   AND T.EVALUATE_POSITION = S.CODE_ID
			   AND T.EVALUATE_ITEM_ID = E.ITEM_ID
			   AND H.FOURTHDEPT = HRD.DEPTID(+)
			  
		  ]]>
		  <isNotEmpty prepend="AND" property="SEQ_NO">
				<![CDATA[		   
				 	 T.ITEM_RELATION_NO = #SEQ_NO#
				]]>	
		</isNotEmpty>

		
	</select>
	
	<update id="updateItemSetInfo" parameterClass="SimpleMap">
		<![CDATA[
				UPDATE EV_ITEM_RELATION A
				SET    A.EVALUATE_ITEM_ID = #selectItem:VARCHAR#,
			           A.UPDATE_DATE  = SYSDATE,
			           A.UPDATE_BY   = #personId:VARCHAR#
				WHERE A.ITEM_RELATION_NO = #SEQ_NO:VARCHAR#
		]]>
	</update>
	
	<delete id="deleteItemSetInfo" parameterClass="SimpleMap">
		<![CDATA[
				DELETE EV_ITEM_RELATION 
				where evaluate_month = #MONTH_SEQ:VARCHAR# 
				and evaluate_deptid = #DEPTID_SEQ:VARCHAR# 
				and evaluate_position = #POSITION_SEQ:VARCHAR#
		]]>
	</delete>
	
	
	 <select id="getEvaluateQueryDetailList" parameterClass="SimpleMap" resultClass="EvaluateInfo">
	<![CDATA[
             SELECT EV_DETAIL_BACK.APPLY_NO AS no,
               (select e.empid
                  from EV_HR_EMPLOYEE e
                 where e.person_id = EV_DETAIL_BACK.EMPID) AS empId,
               HR_EMPLOYEE.CHINESENAME AS chineseName,
               HR_EMPLOYEE.deptname AS DEPTNAME,
               GET_CODE_NAME(HR_EMPLOYEE.STATUS_CODE) as STATUS,
               S.CODE_NAME POST_CODE_NAME,
               EV_DETAIL_BACK.DEPTID DEPTID,
               HR_EMPLOYEE.FOURTHDEPTNAME FOURTHDEPTNAME,
               EV_DETAIL_BACK.EVALUATE_MONTH MONTH,
               EV_DETAIL_BACK.POSITION POST_CODE,
               EV_DETAIL_BACK.AMOUNT,
               EV_DETAIL_BACK.PLACE,
               EV_DETAIL_BACK.LAST_MONTH_PLACE,
               EV_DETAIL_BACK.ACTIVITY,
               EV_DETAIL_BACK.REMARK,
               (select e.chinesename
                  from EV_HR_EMPLOYEE e
                 where e.person_id = EV_DETAIL_BACK.AFFIRMOR_ID) AS AFFIRMOR_ID,
               EV_DETAIL_BACK.AFFIRM_LEVEL,
               EV_DETAIL_BACK.TOTAL,
               EV_DETAIL_BACK.ITEM1,
               EV_DETAIL_BACK.ITEM2,
               EV_DETAIL_BACK.ITEM3,
               EV_DETAIL_BACK.ITEM4,
               EV_DETAIL_BACK.ITEM5,
               EV_DETAIL_BACK.ITEM6,
               EV_DETAIL_BACK.ITEM7,
               EV_DETAIL_BACK.ITEM8,
               EV_DETAIL_BACK.ITEM9,
               EV_DETAIL_BACK.ITEM10,
               EV_DETAIL_BACK.ITEM11,
               EV_DETAIL_BACK.ITEM12,
               EV_DETAIL_BACK.ITEM13,
               EV_DETAIL_BACK.ITEM14,
               EV_DETAIL_BACK.ITEM15,
               EV_DETAIL_BACK.ITEM16,
               EV_DETAIL_BACK.ITEM17,
               EV_DETAIL_BACK.ITEM18,
               EV_DETAIL_BACK.ITEM19,
               EV_DETAIL_BACK.ITEM20,
               EV_DETAIL_BACK.ITEM21,
               EV_DETAIL_BACK.ITEM22,
               EV_DETAIL_BACK.ITEM23,
               EV_DETAIL_BACK.ITEM24,
               EV_DETAIL_BACK.ITEM25,
               EV_DETAIL_BACK.ITEM26,
               EV_DETAIL_BACK.ITEM27,
               EV_DETAIL_BACK.ITEM28,
               EV_DETAIL_BACK.ITEM29,
               EV_DETAIL_BACK.ITEM30,
               EV_DETAIL_BACK.ITEM31,
               EV_DETAIL_BACK.ITEM32,
               EV_DETAIL_BACK.ITEM33,
               EV_DETAIL_BACK.ITEM34,
               EV_DETAIL_BACK.ITEM35,
               EV_DETAIL_BACK.ITEM36,
               EV_DETAIL_BACK.ITEM37,
               EV_DETAIL_BACK.ITEM38,
               EV_DETAIL_BACK.ITEM39,
               EV_DETAIL_BACK.ITEM0

          FROM 
               EV_DETAIL_BACK, 
               EV_HR_EMP_V HR_EMPLOYEE,
               SY_CODE S
    
         WHERE 
            EV_DETAIL_BACK.EMPID = HR_EMPLOYEE.person_id
           AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
           AND HR_EMPLOYEE.CPNY_ID = #cpnyId:VARCHAR#
           AND EV_DETAIL_BACK.EVALUATE_MONTH =#yearMonth:VARCHAR# 
           AND substr(EV_DETAIL_BACK.POSITION, 8, 13) = substr(#position:VARCHAR#, 8, 13)
	   ]]>
	     <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = HR_EMPLOYEE.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #EV_ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = HR_EMPLOYEE.DEPTID	
                        AND substr(EAR.AFFIRM_POSITION,8,13) = substr(HR_EMPLOYEE.POST_CODE,8,13)
				   ) 
        </isNotEmpty>
	    <isNotEmpty prepend="AND" property="level">
		<![CDATA[			    
			    EV_DETAIL_BACK.AFFIRM_LEVEL=#level:VARCHAR#
		]]>
		</isNotEmpty>
	   
	  
      <isNotEmpty prepend="AND" property="key">
		<![CDATA[			    
			       (   
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%' 
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%' 
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%' 
			   	    )
		]]>
		</isNotEmpty>
       <![CDATA[
       
         ORDER BY  HR_EMPLOYEE.EMPID, EV_DETAIL_BACK.AFFIRM_LEVEL
       ]]>
   </select>
   
   
    <select id="getEvaluateQueryDetailListCnt" parameterClass="SimpleMap" resultClass="int">
	<![CDATA[
             SELECT COUNT(*)
          FROM 
               EV_DETAIL_BACK, 
               EV_HR_EMP_V HR_EMPLOYEE,
               SY_CODE S
         WHERE 
           
            EV_DETAIL_BACK.EMPID = HR_EMPLOYEE.person_id
           AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
           AND EV_DETAIL_BACK.EVALUATE_MONTH =#yearMonth:VARCHAR# 
           AND substr(EV_DETAIL_BACK.POSITION, 8, 13) = substr(#position:VARCHAR#, 8, 13)


	   ]]>
	     <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = HR_EMPLOYEE.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #EV_ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = HR_EMPLOYEE.DEPTID	
                        AND substr(EAR.AFFIRM_POSITION,8,13) = substr(HR_EMPLOYEE.POST_CODE,8,13) )
        </isNotEmpty>
	     <isNotEmpty prepend="AND" property="level">
		<![CDATA[			    
			    EV_DETAIL_BACK.AFFIRM_LEVEL=#level:VARCHAR#
		]]>
		</isNotEmpty>
	  
      <isNotEmpty prepend="AND" property="key">
		<![CDATA[			    
			       (   
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%' 
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%' 
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%' 
			   	    )
		]]>
		</isNotEmpty>
      
   </select>
   
    <select id="getEvaluateQueryResultList" parameterClass="SimpleMap" resultClass="EvaluateInfo">
	<![CDATA[
             SELECT EV_DETAIL_APPLY.APPLY_NO AS no,
               (select e.empid
                  from EV_HR_EMPLOYEE e
                 where e.person_id = EV_DETAIL_APPLY.EMPID) AS empId,
               HR_EMPLOYEE.CHINESENAME AS chineseName,
               HR_EMPLOYEE.deptname AS DEPTNAME,
               HR_EMPLOYEE.FOURTHDEPTNAME FOURTHDEPTNAME,
               GET_CODE_NAME(HR_EMPLOYEE.STATUS_CODE) as STATUS,
               S.CODE_NAME POST_CODE_NAME,
               EV_DETAIL_APPLY.DEPTID DEPTID,
               EV_DETAIL_APPLY.EVALUATE_MONTH MONTH,
               EV_DETAIL_APPLY.POSITION POST_CODE,
               EV_DETAIL_APPLY.AMOUNT,
               EV_DETAIL_APPLY.PLACE,
               EV_DETAIL_APPLY.LAST_MONTH_PLACE,
               EV_DETAIL_APPLY.LAST_MONTH_AMOUNT,
               EV_DETAIL_APPLY.ACTIVITY,
               EV_DETAIL_APPLY.REMARK,      
               EV_DETAIL_APPLY.TOTAL

          FROM 
               EV_DETAIL_APPLY, 
               EV_HR_EMP_V HR_EMPLOYEE,
               SY_CODE S
         WHERE 
           
            EV_DETAIL_APPLY.EMPID = HR_EMPLOYEE.person_id
           AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
           AND EV_DETAIL_APPLY.ACTIVITY <> '-1'
           AND HR_EMPLOYEE.Cpny_Id = #cpnyId:VARCHAR#

	   ]]>
	   
	    <isNotEmpty prepend="AND" property="yearMonth">
		<![CDATA[			    
			    EV_DETAIL_APPLY.EVALUATE_MONTH >=#yearMonth:VARCHAR# 
		]]>
		</isNotEmpty>
		 <isNotEmpty prepend="AND" property="yearMonth1">
		<![CDATA[			    
			    EV_DETAIL_APPLY.EVALUATE_MONTH <=#yearMonth1:VARCHAR# 
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="dept">
		<![CDATA[			    
			   EV_DETAIL_APPLY.DEPTID =#dept:VARCHAR# 
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="position">
		<![CDATA[			    
			    substr(EV_DETAIL_APPLY.POSITION, 8, 13) = substr(#position:VARCHAR#, 8, 13)
		]]>
		</isNotEmpty>
		
		<isNotEqual prepend="" property="qryType" compareValue="0"> 
		    <isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 通过 -->
		    <![CDATA[
		         EV_DETAIL_APPLY.ACTIVITY = 1
		    ]]>
		    </isEqual> 
		       
		    <isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
		    <![CDATA[
		         EV_DETAIL_APPLY.ACTIVITY=0 
		    ]]>
		    </isEqual>
		     <isEqual prepend="AND" property="qryType" compareValue="3"> <!-- 否决 -->
		    <![CDATA[
		         EV_DETAIL_APPLY.ACTIVITY=2 
		    ]]>
		    </isEqual>
        </isNotEqual>
		
		<isNotEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #EV_ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = HR_EMPLOYEE.DEPTID	
                      AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(HR_EMPLOYEE.POST_CODE, 8, 13) 
				   ) 
        </isNotEmpty>
	   
	  
       <isNotEmpty prepend="AND" property="key">
		<![CDATA[			    
			       (   
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%' 
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%' 
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%' 
			   	    )
		]]>
		</isNotEmpty>
       <![CDATA[
         ORDER BY  EV_DETAIL_APPLY.DEPTID,EV_DETAIL_APPLY.POSITION, EV_DETAIL_APPLY.PLACE,EV_DETAIL_APPLY.EVALUATE_MONTH
       ]]>
   </select>
   
   
    <select id="getEvaluateQueryResultListCnt" parameterClass="SimpleMap" resultClass="int">
	<![CDATA[
             SELECT COUNT(*)

          FROM 
               EV_DETAIL_APPLY, 
               EV_HR_EMP_V HR_EMPLOYEE,
               SY_CODE S
         WHERE 
           
            EV_DETAIL_APPLY.EMPID = HR_EMPLOYEE.person_id
           AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
           AND EV_DETAIL_APPLY.ACTIVITY <> '-1'
           AND HR_EMPLOYEE.Cpny_Id = #cpnyId:VARCHAR#

	   ]]>
	   
	    <isNotEmpty prepend="AND" property="yearMonth">
		<![CDATA[			    
			    EV_DETAIL_APPLY.EVALUATE_MONTH >=#yearMonth:VARCHAR# 
		]]>
		</isNotEmpty>
		 <isNotEmpty prepend="AND" property="yearMonth1">
		<![CDATA[			    
			    EV_DETAIL_APPLY.EVALUATE_MONTH <=#yearMonth1:VARCHAR# 
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="dept">
		<![CDATA[			    
			   EV_DETAIL_APPLY.DEPTID =#dept:VARCHAR# 
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="position">
		<![CDATA[			    
			    substr(EV_DETAIL_APPLY.POSITION, 8, 13) = substr(#position:VARCHAR#, 8, 13)
		]]>
		</isNotEmpty>
		<isNotEqual prepend="" property="qryType" compareValue="0"> 
		    <isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 通过 -->
		    <![CDATA[
		         EV_DETAIL_APPLY.ACTIVITY = 1
		    ]]>
		    </isEqual> 
		       
		    <isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
		    <![CDATA[
		         EV_DETAIL_APPLY.ACTIVITY=0 
		    ]]>
		    </isEqual>
		     <isEqual prepend="AND" property="qryType" compareValue="3"> <!-- 否决 -->
		    <![CDATA[
		         EV_DETAIL_APPLY.ACTIVITY=2 
		    ]]>
		    </isEqual>
        </isNotEqual>
		<isNotEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #EV_ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = HR_EMPLOYEE.DEPTID	
                        AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(HR_EMPLOYEE.POST_CODE, 8, 13)
				   ) 
        </isNotEmpty>
	   
	  
       <isNotEmpty prepend="AND" property="key">
		<![CDATA[			    
			       (   
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%' 
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%' 
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%' 
			   	    )
		]]>
		</isNotEmpty>
     
   </select>
   
   
<select id="retrieveEvAffirmAdmin" parameterClass="SimpleMap" resultClass="string">
  <![CDATA[

        select t.empid from ev_affirm_admin t where t.empid = #PERSON_ID:VARCHAR#
   ]]>
</select>


<select id="getEvaluateQueryResultExcelSumList" parameterClass="SimpleMap" resultClass="SimpleMap">
	<![CDATA[
        
		SELECT DISTINCT H.EMPID,H.CHINESENAME,D.DEPTNAME,'连续三个月及以上' AS REMARK
		  FROM (SELECT B.EMPID, (MAX(B.EVALUATE_MONTH) - MIN(B.EVALUATE_MONTH)) DAYS
		          FROM (
		                
		                SELECT A.*, TO_NUMBER(A.EVALUATE_MONTH - ROWNUM) DAYS
		                  FROM (SELECT EMPID, EVALUATE_MONTH, RATE
		                           FROM (SELECT EMPID,
		                                        EVALUATE_MONTH,
		                                        (PLACE / AMOUNT) AS RATE
		                                   FROM EV_DETAIL_APPLY
		                                  WHERE SUBSTR(EVALUATE_MONTH, 1, 4) = #year:VARCHAR#
		                                    AND PLACE > 0
		                                    AND AMOUNT >= 7)
		                          WHERE RATE >= 0.8
		                          ORDER BY EMPID, EVALUATE_MONTH) A
		                
		                ) B
		         GROUP BY B.EMPID, B.DAYS) C,
		         EV_HR_EMPLOYEE H,
		         EV_HR_DEPARTMENT D 
		 WHERE C.DAYS >= 2 
		 AND C.EMPID = H.PERSON_ID
		 AND H.DEPTID = D.DEPTID
		 ]]>
		<isNotEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #EV_ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = H.DEPTID	
                      AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(H.POST_CODE, 8, 13)
				   ) 
        </isNotEmpty> 
        <![CDATA[
		UNION ALL
		SELECT H.EMPID,H.CHINESENAME,D.DEPTNAME,'累计五个月及以上' AS REMARK  FROM (
		SELECT EMPID,SUM(SL) AS SL
		  FROM (SELECT EMPID, EVALUATE_MONTH, (PLACE / AMOUNT) AS RATE, 1 AS SL
		          FROM EV_DETAIL_APPLY
		         WHERE SUBSTR(EVALUATE_MONTH, 1, 4) = #year:VARCHAR#
		           AND PLACE > 0
		           AND AMOUNT >= 7
		        ) 
		 WHERE RATE >0.8
		 GROUP BY EMPID HAVING SUM(SL)>=5) C,
		 EV_HR_EMPLOYEE H,
		 EV_HR_DEPARTMENT D 
		 WHERE C.EMPID = H.PERSON_ID
		 AND H.DEPTID = D.DEPTID    
		 ]]>
		<isNotEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #EV_ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = H.DEPTID	
                      AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(H.POST_CODE, 8, 13)
				   ) 
        </isNotEmpty>
	   
	   
   </select>
   

<select id="getEvaluateQueryNoApplyList" parameterClass="SimpleMap" resultClass="EvaluateInfo">
<![CDATA[

        SELECT H.EMPID,
		       H.PERSON_ID,
		       #yearMonth:VARCHAR# as MONTH,
		       H.DEPTID,
		       HR_DEPARTMENT.DEPTNAME,
		       H.CHINESENAME,
		       GET_CODE_NAME(H.STATUS_CODE) as STATUS,
		       H.POST_CODE,
		       S.CODE_NAME POST_CODE_NAME,
		       H.FOURTHDEPTNAME FOURTHDEPTNAME,
		    
               4 ACTIVITY,
               '' REMARK,      
               0 TOTAL
		       
		       
		       
		  FROM EV_HR_EMP_V H, EV_HR_DEPARTMENT HR_DEPARTMENT, SY_CODE S
		 WHERE H.DEPTID = HR_DEPARTMENT.DEPTID
		   AND H.POST_CODE = S.CODE_ID
		   AND NVL(DATE_LEFT, TO_DATE('2999-12-31', 'YYYY-MM-DD')) > SYSDATE
           AND H.Cpny_Id = #cpnyId:VARCHAR#
		   AND H.PERSON_ID NOT IN
		       (SELECT EV.EMPID
		          FROM EV_DETAIL_APPLY EV
		         WHERE EV.EVALUATE_MONTH = #yearMonth:VARCHAR#
		           AND EV.DEPTID = DEPTID
		           AND substr(EV.POSITION, 8, 13) = substr(POST_CODE, 8, 13)
		           AND EV.ACTIVITY <> '2'
		           AND EV.ACTIVITY <> '-1' )   
   ]]>
    <isNotEmpty prepend="AND" property="position">
		<![CDATA[			    
			    H.POST_CODE =#position:VARCHAR#
		]]>
   </isNotEmpty>
   <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = h.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
   <isNotEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #EV_ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = H.DEPTID	
                        AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(H.POST_CODE, 8, 13)

				   ) 
   </isNotEmpty>
   <isEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRM_DEPTID = H.DEPTID	
              AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(H.POST_CODE, 8, 13)

				   ) 
   </isEmpty>
   <![CDATA[
					 ORDER BY H.DEPTID,H.EMPID
             ]]>

 </select>   
 
 
 <select id="getEvaluateQueryNoApplyListCnt" parameterClass="SimpleMap" resultClass="int">
<![CDATA[

        SELECT COUNT(*)
		       
		   FROM EV_HR_EMP_V H, EV_HR_DEPARTMENT HR_DEPARTMENT, SY_CODE S
		 WHERE H.DEPTID = HR_DEPARTMENT.DEPTID
		   AND H.POST_CODE = S.CODE_ID
		   AND NVL(DATE_LEFT, TO_DATE('2999-12-31', 'YYYY-MM-DD')) > SYSDATE
           AND H.Cpny_Id = #cpnyId:VARCHAR#
		   AND H.PERSON_ID NOT IN
		       (SELECT EV.EMPID
		          FROM EV_DETAIL_APPLY EV
		         WHERE EV.EVALUATE_MONTH = #yearMonth:VARCHAR#
		           AND EV.DEPTID = DEPTID
		           AND substr(EV.POSITION, 8, 13) = substr(POST_CODE, 8, 13)
		           AND EV.ACTIVITY <> '2'
		           AND EV.ACTIVITY <> '-1' )    
   ]]>
   <isNotEmpty prepend="AND" property="position">
		<![CDATA[			    
			    H.POST_CODE =#position:VARCHAR#
		]]>
   </isNotEmpty>
   <isNotEmpty prepend="AND" property="dept">
			<![CDATA[
					  EXISTS (SELECT *
				          FROM EV_HR_DEPARTMENT B1
				         WHERE B1.DEPTID = h.DEPTID
				         START WITH B1.DEPTID = #dept:VARCHAR#
				        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
             ]]>
		</isNotEmpty>
   <isNotEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRMOR_ID  = #ADMIN_ID:VARCHAR#
					    AND EAR.AFFIRM_DEPTID = H.DEPTID	
                        AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(H.POST_CODE, 8, 13)
 
				   ) 
   </isNotEmpty>
   <isEmpty prepend="AND" property="EV_ADMIN_ID">
		  EXISTS ( SELECT *
		 		   	   FROM EV_AFFIRM_RELATION EAR
					  WHERE EAR.AFFIRM_DEPTID = H.DEPTID	
                   AND substr(EAR.AFFIRM_POSITION, 8, 13) = substr(H.POST_CODE, 8, 13)

				   ) 
   </isEmpty>
   <![CDATA[
					 ORDER BY H.DEPTID,H.EMPID
             ]]>

 </select>   
	
</sqlMap>