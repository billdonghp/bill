<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="kpa.payplan">

<select id="payPlan01Serche" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[ 
select  dep.deptname,code.code_name,grade.post_grade_name,'基本工资' as paytype ,sum(temp.month01) month01,sum(temp.month02) month02,sum(temp.month03) month03,sum(temp.month04) month04,
trunc((sum(temp.month01)+sum(temp.month02)+sum(temp.month03)+sum(temp.month04))/
(sumpnumber.sump),2) avgpay
from (select hr_get_level_deptid(hr.deptid,'3') deptid,
        hr.join_type_code,
        hr.post_grade_code,
       hr.empid,
       nvl(pa01.base_pay, 0) as month01,
       nvl(pa02.base_pay, 0) as month02,
       nvl(pa03.base_pay, 0) as month03,
       nvl(pa04.base_pay, 0) as month04

  from (select t.empid,t.deptid,t.join_type_code,t.post_grade_code from hr_employee t where (t.date_left is null or t.date_left >to_date('2008-01-01','yyyy-mm-dd')) and t.empid<>'000000') hr
  full join
  (select t.empid, t.base_pay
          from pa_history200801 t
         where t.pa_month = '200801') pa01 on hr.empid=pa01.empid
  
  full join (select t.empid, t.base_pay
               from pa_history200802 t
              where t.pa_month = '200802') pa02 on hr.empid = pa02.empid
  full join (select t.empid, t.base_pay
               from pa_history200803 t
              where t.pa_month = '200803') pa03 on hr.empid = pa03.empid
  full join (select t.empid, t.base_pay
               from pa_history t
              where t.pa_month = '200804') pa04 on hr.empid = pa04.empid
 )temp , 
 (select  temp.deptid,temp.join_type_code,temp.post_grade_code,(sum(temp.countm1)+sum(temp.countm2)+sum(temp.countm3)+sum(temp.countm4)) as sump from (select hr_get_level_deptid(hr.deptid,'3') deptid,
        hr.join_type_code,
        hr.post_grade_code,
        hr.empid,
       case when pa01.base_pay<>0 then count(hr.empid) else 0 end as countm1,
       case when pa02.base_pay<>0 then count(hr.empid) else 0 end as countm2,
       case when pa03.base_pay<>0 then count(hr.empid) else 0 end as countm3,
       case when pa04.base_pay<>0 then count(hr.empid) else 0 end as countm4
     
  from (select t.empid,t.deptid,t.join_type_code,t.post_grade_code from hr_employee t where (t.date_left is null or t.date_left >to_date('2008-01-01','yyyy-mm-dd')) and t.empid<>'000000') hr
  full join
  (select t.empid, t.base_pay
          from pa_history200801 t
         where t.pa_month = '200801') pa01 on hr.empid=pa01.empid
  
  full join (select t.empid, t.base_pay
               from pa_history200802 t
              where t.pa_month = '200802') pa02 on hr.empid = pa02.empid
  full join (select t.empid, t.base_pay
               from pa_history200803 t
              where t.pa_month = '200803') pa03 on hr.empid = pa03.empid
  full join (select t.empid, t.base_pay
               from pa_history t
              where t.pa_month = '200804') pa04 on hr.empid = pa04.empid
group by deptid,  hr.join_type_code, hr.post_grade_code, hr.empid,pa01.base_pay,pa02.base_pay,pa03.base_pay,pa04.base_pay
) temp 
group by temp.deptid,temp.join_type_code,temp.post_grade_code) sumpnumber, sy_code code,hr_post_grade grade,hr_department dep
 where sumpnumber.deptid=temp.deptid
 and temp.deptid=dep.deptid(+)
 and sumpnumber.join_type_code=temp.join_type_code
 and sumpnumber.post_grade_code=temp.post_grade_code
 and temp.join_type_code=code.code_id(+)
 and temp.post_grade_code=grade.post_grade_id(+)
 group by  dep.deptname,code.code_name,grade.post_grade_name,sumpnumber.sump

		]]>
</select>

<select id="getYearPayPlan" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[  
select count(t.empid)*12 as empnum, 
       grade.post_grade_name as postgrade,
       nvl(code.code_name,'无') as position,
       sum(t.BASE_PAY)*12 as basepa,
       sum(t.ACTUAL_ANNUITY_RATE)*12 as annuityrate,
      (sum(t.PERFORMANCE_PAY2) + sum(t.PERFORMANCE_PAY3))*12 as performancepa ,
       sum(t.DUTY_SUBSIDIES)*12 as dutysubsidies,
       t.deptfullname as depname
from pa_history t, hr_post_grade grade,sy_code  code 
where t.deptid = #planDept:VARCHAR#
   and t.pa_month = (#year:VARCHAR#||#month:VARCHAR#)
   and grade.post_grade_id(+)=t.post_grade_code
   and code.code_id(+)=t.join_type_code
group by t.deptid, grade.post_grade_name, code.code_name, t.deptfullname
 order by empnum
		]]>
</select>

<select id="getSeqChar" parameterClass="SimpleMap" resultClass="string">
		<![CDATA[  
select temp.* from (select t.seq_id
from py_pay_plan t
where t.base_yymm = (#year:VARCHAR#||#month:VARCHAR#)
   and t.bg_gu = #planDept:VARCHAR#
order by t.seq_id desc) temp 
where rownum=1
			]]>
</select>

<select id="savePayPlanProdures" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[  
select t.deptid as deptid,
       count(t.empid) * 12 as empnum,
       t.post_grade_code as postgrade,      
       t.join_type_code as jointype,
       sum(t.BASE_PAY) * 12 as basepa,
       sum(t.ACTUAL_ANNUITY_RATE) * 12 as annuityrate,
       (sum(t.PERFORMANCE_PAY2) + sum(t.PERFORMANCE_PAY3)) * 12 as performancepa,
       sum(t.DUTY_SUBSIDIES) * 12 as dutysubsidies,
       t.deptfullname as depname,
       (sum(t.BASE_PAY) * 12 + sum(t.ACTUAL_ANNUITY_RATE) * 12 +
       (sum(t.PERFORMANCE_PAY2) + sum(t.PERFORMANCE_PAY3)) * 12 +
       sum(t.DUTY_SUBSIDIES) * 12) as sumc
  from pa_history t
 where t.deptid = #planDept:VARCHAR#
  and t.pa_month =#yearAndmonthSave:VARCHAR#

 group by t.deptid,
          t.post_grade_code,
          t.join_type_code,
          t.deptfullname,
          t.position_code
 order by empnum
		]]>
</select>

<insert id="savePayPlanIntoInterfaceTable" parameterClass="SimpleMap">
		<![CDATA[  
insert into py_pay_plan(
  PAYPLAN_ID,
  COM_ORG_ID,
  PLAN_YY,
  BASE_YYMM,
  SEQ_ID,
  BG_GU,
  BG_NM,
  AUTH_GROUP_TYPE,
  POS_TYPE,
  NOW_INWON,
  YEAR_PAY01_MON,
  YEAR_PAY02_MON,
  YEAR_PAY03_MON,
  YEAR_PAY04_MON,
  YEAR_PAY05_MON,
  YEAR_PAY06_MON,
  YEAR_PAY07_MON,
  YEAR_TOT_MON
) values(
PA_PAYYEARPLAN_INTERFACE_SEQ.NEXTVAL,
'1200',
#planyearSave:VARCHAR#,
#planYearandMonthSave:VARCHAR#,
#seqid:VARCHAR#,
#DEPTID:VARCHAR#,
#DEPNAME:VARCHAR#,
#JOINTYPE:VARCHAR#,
#POSTGRADE:VARCHAR#,
#EMPNUM#,
#BASEPA#,
#ANNUITYRATE#,
#PERFORMANCEPA#,
0,
#DUTYSUBSIDIES#,
0,
0,
#SUMC#
)
]]>
</insert>


<select id="averagePayPlanSearch" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[  
select t.payplan_id  as planid,
       t.bg_nm as DEPNAME,
       nvl(code.code_name,'') as POSITION,
       grade.post_grade_name as POSTGRADE,
       t.now_inwon as EMPNUM,
       t.year_pay01_mon as BASEPA,
       t.year_pay02_mon as ANNUITYRATE,
       t.year_pay03_mon as PERFORMANCEPA,
       t.year_pay05_mon as DUTYSUBSIDIES
  from py_pay_plan t, hr_post_grade grade,sy_code  code 
  where t.auth_group_type = code.code_id(+)
  and t.pos_type =grade.post_grade_id(+)
  and t.bg_gu =#planDept:VARCHAR#
  and t.plan_yy=#palnYear:VARCHAR#
  and t.seq_id=#SEQ:VARCHAR#
  order by EMPNUM 
		]]>
</select>

<update id="saveAveragePayPlan" parameterClass="SimpleMap">
		<![CDATA[  
update py_pay_plan  t
set t.plan_inwon=#PlanPeploeNum#,
    t.pay_inc=#payRatioRose#,
    t.pay_bonus_inc=#bonusesRatioRose#,
    t.plan_pay01_mon=#basepa#,
    t.plan_pay02_mon=#annuityrate#,
    t.plan_pay03_mon=#performancep#,
    t.plan_pay04_mon=0,
    t.plan_pay05_mon=#dutysubsidie#,
    t.plan_pay06_mon=0,
    t.plan_pay07_mon=0,
    t.plan_tot_mon=#paysum#,
    t.mod_user_id=#applerId#,
    t.mod_date=SYSDATE,
    t.mod_loc_id='1200'
where t.payplan_id=#planID#
]]>
</update>

<select id="averagePayPlanMonthSearch" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[  
select t.bg_nm,
       t.plan_yy,
       t.base_yymm,
       t.com_org_id,
       t.seq_id,
       t.bg_gu,
       t.auth_group_type,
       t.pos_type,
       grade.post_grade_name as POSTGRADE,
       code.code_name as POSITION,
       round((nvl(t.plan_pay01_mon,0) / 12), 2) as plan_pay01,
       nvl(t.plan_pay01_mon,0) as plan_pay01_mon,
       round((nvl(t.plan_pay02_mon,0) / 12), 2) as plan_pay02,
       nvl(t.plan_pay02_mon,0) as plan_pay02_mon,
       round((nvl(t.plan_pay03_mon,0) / 12), 2) as plan_pay03,
       nvl(t.plan_pay03_mon,0) as plan_pay03_mon,
       round((nvl(t.plan_pay05_mon,0) / 12), 2) as plan_pay05,
       nvl(t.plan_pay05_mon,0) as plan_pay05_mon
from py_pay_plan t,sy_code code,hr_post_grade grade
where t.bg_gu =#planDept:VARCHAR#
  and t.plan_yy=#palnYear:VARCHAR#
  and t.seq_id=#SEQ:VARCHAR#
  and t.auth_group_type=code.code_id(+)
  and t.pos_type=grade.post_grade_id(+)  
		]]>
</select>

<insert id="saveAveragePayPlanMonth" parameterClass="SimpleMap">
		<![CDATA[  
insert into py_pay_plan_detail(
  PAYPLAN_DETAIL_ID,
  COM_ORG_ID,
  PLAN_YY,
  BASE_YYMM,
  SEQ_ID,
  BG_GU,
  BG_NM,
  AUTH_GROUP_TYPE,
  POS_TYPE, 
  PAY_TYPE,
  PAY_MONTH_01,
  PAY_MONTH_02,
  PAY_MONTH_03,
  PAY_MONTH_04,
  PAY_MONTH_05,
  PAY_MONTH_06,
  PAY_MONTH_07,
  PAY_MONTH_08,
  PAY_MONTH_09,
  PAY_MONTH_10,
  PAY_MONTH_11,
  PAY_MONTH_12,
  PAY_MONTH_TOT,
  MOD_USER_ID,
  MOD_DATE,
  MOD_LOC_ID   
) values(
PY_PAY_PLAN_DETAIL_SEQ.NEXTVAL,
#COM_ORG_ID:VARCHAR#,
#PLAN_YY:VARCHAR#,
#BASE_YYMM:VARCHAR#,
#SEQ_ID:VARCHAR#,
#BG_GU:VARCHAR#,
#BG_NM:VARCHAR#,
#AUTH_GROUP_TYPE:VARCHAR#,
#POS_TYPE:VARCHAR#,
#PLAN_PAY:VARCHAR#,
#PAY_MONTH_01#,
#PAY_MONTH_02#,
#PAY_MONTH_03#,
#PAY_MONTH_04#,
#PAY_MONTH_05#,
#PAY_MONTH_06#,
#PAY_MONTH_07#,
#PAY_MONTH_08#,
#PAY_MONTH_09#,
#PAY_MONTH_10#,
#PAY_MONTH_11#,
#PAY_MONTH_12#,
#PAY_MONTH_TOT#,
#applerId:VARCHAR#,
SYSDATE,
'1200' 
)
]]>
</insert>

</sqlMap>