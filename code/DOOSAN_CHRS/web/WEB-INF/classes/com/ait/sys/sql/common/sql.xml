<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="sys.common">
	
	<select id="getEssLeaveParamList" resultClass="SimpleMap"  parameterClass="SimpleMap">
		<![CDATA[
			SELECT PARAM_NO,
			       REFERENCN_FLAG,
			       REFERENCN_FROM_FLAG,
			       REFERENCN_FROM_OFFSET,
			       REFERENCN_FROM_RELATION,
			       REFERENCN_TO_FLAG,
			       REFERENCN_TO_OFFSET,
			       REFERENCN_TO_RELATION,
			       APPLY_TYPE,
			       AFFIRM_LEVEL,
			       ESS.ACTIVITY,
			       STAT_TYPE_CODE,
			       SY.CODE_NAME AS APPLY_NAME,
			       TO_CHAR(ESS.CREATE_DATE,'YYYY-MM-DD') AS CREATE_DATE,
			       ESS.CREATED_BY,
			       TO_CHAR(ESS.UPDATE_DATE,'YYYY-MM-DD') AS UPDATE_DATE,
			       ESS.UPDATED_BY,
			       CPNY.CODE_NAME CPNYNAME,
			       ESS.CPNY_ID,
			       T.DEPTNAME,
			       ESS.DEPTID,
			       HR.CHINESENAME,
			       HR.EMPID,
			       ESS.PERSON_ID
			  FROM ESS_LEAVE_APPLY_PARAM ESS ,SY_CODE SY,SY_CODE CPNY,HR_DEPARTMENT T,HR_EMPLOYEE HR
			 WHERE ESS.APPLY_TYPE = SY.CODE_ID(+)   
			       AND ESS.CPNY_ID=CPNY.CODE_ID(+)  
			       AND ESS.DEPTID = T.DEPTID(+)  
			       AND ESS.PERSON_ID = HR.PERSON_ID(+)
			       AND ESS.CPNY_ID=#cpnyId:VARCHAR#
    	]]>
    	<isNotEmpty prepend="AND" property="APPLY_TYPE">		
			<![CDATA[
			      APPLY_TYPE = #APPLY_TYPE:VARCHAR#
			]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="PARAM_NO">		
			<![CDATA[
			      PARAM_NO = #PARAM_NO:NUMERIC#
			]]>
		</isNotEmpty>
		
		 <![CDATA[
	    	ORDER BY APPLY_TYPE
	     ]]>
	</select>
		<select id="EssLeaveParam" resultClass="SimpleMap"  parameterClass="SimpleMap">
		<![CDATA[
			select sy.code_id ID, sy.code_name NAME
                  from sy_code sy
                  where sy.parent_code = 'LeaveTypeCode'
                  AND (SY.CPNY_ID IS NULL    
    	]]>
    	<isNotEmpty prepend="OR" property="cpnyId">		
			<![CDATA[
			      SY.CPNY_ID=#cpnyId:VARCHAR#
			]]>
		</isNotEmpty>	
		<![CDATA[
		  )
		]]>
			
	</select>
	
	<select id="getEssLeaveParamListCnt" resultClass="int"  parameterClass="SimpleMap">
		<![CDATA[
			SELECT COUNT(PARAM_NO) 
			  FROM ESS_LEAVE_APPLY_PARAM ESS
			 WHERE 1 = 1        
			 AND ESS.CPNY_ID=#cpnyId:VARCHAR#
    	]]>
    	<isNotEmpty prepend="AND" property="APPLY_TYPE">		
			<![CDATA[
			      APPLY_TYPE = #APPLY_TYPE:VARCHAR#
			]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="PARAM_NO">		
			<![CDATA[
			      PARAM_NO = #PARAM_NO:NUMERIC#
			]]>
		</isNotEmpty>
	</select>
	
	<select id="validateInsertEssLeaveParam" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		     SELECT COUNT(PARAM_NO) 
			   FROM ESS_LEAVE_APPLY_PARAM ESS 
			  WHERE ESS.APPLY_TYPE = #APPLY_TYPE:VARCHAR#
			    AND ESS.REFERENCN_FROM_OFFSET = #REFERENCN_FROM_OFFSET:NUMERIC#
			    AND ESS.REFERENCN_TO_OFFSET = #REFERENCN_TO_OFFSET:NUMERIC#
			    AND ESS.REFERENCN_FROM_RELATION = #REFERENCN_FROM_RELATION:VARCHAR#
			    AND ESS.AFFIRM_LEVEL = #AFFIRM_LEVEL:NUMERIC#
			    AND ESS.CPNY_ID= #cpnyId:VARCHAR#
			    AND ESS.DEPTID = #serchDept:VARCHAR#
    	]]>
	</select>
	
	<select id="validateInsertEssOvertimeParam" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		     SELECT COUNT(PARAM_NO) 
			   FROM ESS_OVERTIME_APPLY_PARAM ESS 
			  WHERE ESS.CONDITION_TYPE = #CONDITION_TYPE:VARCHAR#
			    AND ESS.OVERTIME_TYPE = #OVERTIME_TYPE:VARCHAR#
			    AND ESS.REFERENCN_FROM_OFFSET = #REFERENCN_FROM_OFFSET:NUMERIC#
			    AND ESS.REFERENCN_TO_OFFSET = #REFERENCN_TO_OFFSET:NUMERIC#
			    AND ESS.REFERENCN_FROM_RELATION = #REFERENCN_FROM_RELATION:VARCHAR#
			    AND ESS.OVERTIME_TOTAL = #OVERTIME_TOTAL:VARCHAR#
			    AND ESS.AFFIRM_LEVEL = #AFFIRM_LEVEL:NUMERIC#
			    AND ESS.CPNY_ID= #cpnyId:VARCHAR#
			    AND ESS.DEPTID = #serchDept:VARCHAR#      
    	]]>
	</select>
	
	<insert id="insertEssLeaveParam" parameterClass="SimpleMap">
		<![CDATA[
			INSERT INTO  ESS_LEAVE_APPLY_PARAM (
				   PARAM_NO,
			       REFERENCN_FLAG,
			       REFERENCN_FROM_FLAG,
			       REFERENCN_FROM_OFFSET,
			       REFERENCN_FROM_RELATION,
			       REFERENCN_TO_FLAG,
			       REFERENCN_TO_OFFSET,
			       REFERENCN_TO_RELATION,
			       APPLY_TYPE,
			       AFFIRM_LEVEL,
			       ACTIVITY,
			       CREATE_DATE,
			       CREATED_BY,
			       CPNY_ID,
			       DEPTID,
			       PERSON_ID
			 ) VALUES
			 (
			 	   ESS_LEAVE_APPLY_PARAM_SEQ.NEXTVAL,
			       #REFERENCN_FLAG:NUMERIC#,
			       #REFERENCN_FROM_FLAG:NUMERIC#,
			       #REFERENCN_FROM_OFFSET:NUMERIC#,
			       #REFERENCN_FROM_RELATION:VARCHAR#,
			       #REFERENCN_TO_FLAG:NUMERIC#,
			       #REFERENCN_TO_OFFSET:NUMERIC#,
			       #REFERENCN_TO_RELATION:VARCHAR#,
			       #APPLY_TYPE:VARCHAR#,
			       #AFFIRM_LEVEL:NUMERIC#,
			       1,
			       SYSDATE,
			       #CREATED_BY:VARCHAR#,
			       #cpnyId:VARCHAR#,
			       #serchDept:VARCHAR#,
			       (SELECT MAX(T.PERSON_ID) FROM HR_EMPLOYEE T WHERE T.EMPID = #empID:VARCHAR# AND T.CPNY_ID = #cpnyId:VARCHAR#)

			       
			 )    
    	]]>
	</insert>
	
	<insert id="insertEssOvertimeParam" parameterClass="SimpleMap">
		<![CDATA[
			INSERT INTO  ESS_OVERTIME_APPLY_PARAM (
				   PARAM_NO,
			       CONDITION_TYPE,
			       AFFIRM_LEVEL,
			       OVERTIME_TYPE,
			       REFERENCN_FLAG,
			       REFERENCN_FROM_FLAG,
			       REFERENCN_FROM_OFFSET,
			       REFERENCN_FROM_RELATION,
			       REFERENCN_TO_FLAG,
			       REFERENCN_TO_OFFSET,
			       REFERENCN_TO_RELATION,
			       OVERTIME_TOTAL,
			       CPNY_ID,
			       DEPTID,
			       CREATE_DATE,
			       CREATED_BY,
			       ACTIVITY
			 ) VALUES
			 (
			 	   ESS_OVERTIME_APPLY_PARAM_SEQ.NEXTVAL,
			       #CONDITION_TYPE:VARCHAR#,
			       #AFFIRM_LEVEL#,
			       #OVERTIME_TYPE:VARCHAR#,
			       #REFERENCN_FLAG:NUMERIC#,
			       #REFERENCN_FROM_FLAG:NUMERIC#,
			       #REFERENCN_FROM_OFFSET:NUMERIC#,
			       #REFERENCN_FROM_RELATION:VARCHAR#,
			       #REFERENCN_TO_FLAG:NUMERIC#,
			       #REFERENCN_TO_OFFSET:NUMERIC#,
			       #REFERENCN_TO_RELATION:VARCHAR#,
			       #OVERTIME_TOTAL:NUMERIC#,
			       #cpnyId:VARCHAR#,
			       #serchDept:VARCHAR#,
			       SYSDATE,
			       #CREATED_BY:VARCHAR#,
			       1
			 )    
    	]]>
	</insert>
	
	<delete id="deleteEssLeaveParam" parameterClass="SimpleMap" >
		<![CDATA[
		     DELETE ESS_LEAVE_APPLY_PARAM ESS 
			  WHERE ESS.PARAM_NO = #PARAM_NO:NUMERIC#
    	]]>
	</delete>
	
	<delete id="deleteEssOvertimeParam" parameterClass="SimpleMap" >
		<![CDATA[
		     DELETE ESS_OVERTIME_APPLY_PARAM ESS 
			  WHERE ESS.PARAM_NO = #PARAM_NO:NUMERIC#
    	]]>
	</delete>
	
	<select id="validateUpdateEssLeaveParam" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		     SELECT COUNT(PARAM_NO) 
			   FROM ESS_LEAVE_APPLY_PARAM ESS 
			  WHERE ESS.APPLY_TYPE = #APPLY_TYPE:VARCHAR#
			    AND ESS.REFERENCN_FROM_OFFSET = #REFERENCN_FROM_OFFSET:NUMERIC#
			    AND ESS.REFERENCN_TO_OFFSET = #REFERENCN_TO_OFFSET:NUMERIC#
			    AND ESS.AFFIRM_LEVEL = #AFFIRM_LEVEL:NUMERIC#
			    AND ESS.REFERENCN_FROM_RELATION = #REFERENCN_FROM_RELATION:VARCHAR#
			    AND ESS.CPNY_ID= #cpnyId:VARCHAR#
			    AND ESS.PARAM_NO <> #PARAM_NO:NUMERIC#
			    AND ESS.DEPTID = #serchDept:VARCHAR#
			   
    	]]>
	</select>
	
	<select id="validateUpdateEssOvertimeParam" parameterClass="SimpleMap" resultClass="int">
		<![CDATA[
		
			    
			  SELECT COUNT(PARAM_NO) 
			   FROM ESS_OVERTIME_APPLY_PARAM ESS 
			  WHERE ESS.CONDITION_TYPE = #CONDITION_TYPE:VARCHAR#
			    AND ESS.OVERTIME_TYPE = #OVERTIME_TYPE:VARCHAR#
			    AND ESS.REFERENCN_FROM_OFFSET = #REFERENCN_FROM_OFFSET:NUMERIC#
			    AND ESS.REFERENCN_TO_OFFSET = #REFERENCN_TO_OFFSET:NUMERIC#
			    AND ESS.OVERTIME_TOTAL = #OVERTIME_TOTAL:VARCHAR#
			    AND ESS.AFFIRM_LEVEL = #AFFIRM_LEVEL#
			    AND ESS.CPNY_ID= #cpnyId:VARCHAR#
			    AND ESS.DEPTID = #serchDept:VARCHAR#   
			    AND ESS.PARAM_NO <> #PARAM_NO:NUMERIC#   
			   
    	]]>
	</select>
	
	<update id="updateEssLeaveParam" parameterClass="SimpleMap">
		<![CDATA[
			UPDATE ESS_LEAVE_APPLY_PARAM SET
						   
			       REFERENCN_FLAG = #REFERENCN_FLAG:NUMERIC#,
			       REFERENCN_FROM_FLAG = #REFERENCN_FROM_FLAG:NUMERIC#,
			       REFERENCN_FROM_OFFSET = #REFERENCN_FROM_OFFSET:NUMERIC#,
			       REFERENCN_FROM_RELATION = #REFERENCN_FROM_RELATION:VARCHAR#,
			       REFERENCN_TO_FLAG = #REFERENCN_TO_FLAG:NUMERIC#,
			       REFERENCN_TO_OFFSET = #REFERENCN_TO_OFFSET:NUMERIC#,
			       REFERENCN_TO_RELATION = #REFERENCN_TO_RELATION:VARCHAR#,
			       APPLY_TYPE = #APPLY_TYPE:VARCHAR#,
			       AFFIRM_LEVEL = #AFFIRM_LEVEL:NUMERIC#,
			       UPDATE_DATE = SYSDATE,
			       UPDATED_BY = #UPDATED_BY:VARCHAR#,
				   DEPTID = #serchDept:VARCHAR#,
				   PERSON_ID = (SELECT MAX(T.PERSON_ID) FROM HR_EMPLOYEE T WHERE T.EMPID = #empID:VARCHAR# AND T.CPNY_ID = #cpnyId:VARCHAR#)
			 WHERE PARAM_NO = #PARAM_NO:NUMERIC#
    	]]>
	</update>
	
	<update id="updateEssOvertimeParam" parameterClass="SimpleMap">
		<![CDATA[
			UPDATE ESS_OVERTIME_APPLY_PARAM SET
			       
			       REFERENCN_FLAG = #REFERENCN_FLAG:NUMERIC#,
			       REFERENCN_FROM_FLAG = #REFERENCN_FROM_FLAG:NUMERIC#,
			       REFERENCN_FROM_OFFSET = #REFERENCN_FROM_OFFSET:NUMERIC#,
			       REFERENCN_FROM_RELATION = #REFERENCN_FROM_RELATION:VARCHAR#,
			       REFERENCN_TO_FLAG = #REFERENCN_TO_FLAG:NUMERIC#,
			       REFERENCN_TO_OFFSET = #REFERENCN_TO_OFFSET:NUMERIC#,
			       REFERENCN_TO_RELATION = #REFERENCN_TO_RELATION:VARCHAR#,
			       OVERTIME_TOTAL=#OVERTIME_TOTAL:VARCHAR#,
			       CONDITION_TYPE=#CONDITION_TYPE:VARCHAR#,
			       OVERTIME_TYPE=#OVERTIME_TYPE:VARCHAR#,
			       AFFIRM_LEVEL = #AFFIRM_LEVEL#,
			       UPDATE_DATE = SYSDATE,
			       UPDATED_BY = #UPDATED_BY:VARCHAR#,
				   DEPTID = #serchDept:VARCHAR#
			 WHERE PARAM_NO = #PARAM_NO:NUMERIC#
    	]]>
	</update>
	

	<!-- test sqlmap -->
	<select id="getPostList" resultClass="SimpleMap"  parameterClass="string">
		<![CDATA[
	select
		 post_id,      
		 post_no,
		 post_en_name,  
		 post_name,
     	 POST_GROUP_NAME,               
		 POST_GROUP_EN_NAME,
     	 POST_KOR_NAME,
		 to_char(hr_post.create_date,'YYYY-MM-DD') create_date,  
		 hr_post.created_by             
	from hr_post join hr_post_group
		 on hr_post.post_group_id=hr_post_group.post_group_id	             
    ]]>
    <isNotEmpty>
       where post_id like #postid#  
    </isNotEmpty>
    <![CDATA[
    order by post_en_name
     ]]>
	</select>
	
	<select id="getPostListCnt" resultClass="int"  parameterClass="string">
		<![CDATA[
	select
		 count( post_id)                
	from hr_post join hr_post_group
		 on hr_post.post_group_id=hr_post_group.post_group_id	             
    ]]>
    <isNotEmpty>
       where post_id like #postid#  
    </isNotEmpty>
    
	</select>
	
    <select id="isPostIdExsit" parameterClass="string"
		resultClass="int">          
		<![CDATA[  
			  select  count(*) from hr_post where POST_ID=#id#                 
			]]>
	</select>
	<select id="getPostById" parameterClass="string"
		resultClass="SimpleMap">
		<![CDATA[  
         select
		 post_id,
		 post_no,
		 post_en_name,
		 post_name,
		 hr_post.POST_GROUP_ID , 
		 post_group_name,  
		 post_group_en_name 
		 from hr_post join hr_post_group
		 on hr_post.post_group_id=hr_post_group.post_group_id 
		 WHERE POST_ID=#id#     
                
    ]]>
	</select>

	<select id="retrievepostgrouplist"                                  
		resultClass="SimpleMap">
		<![CDATA[    
        select
         POST_GROUP_ID ID,
         POST_GROUP_NAME NAME,
         POST_GROUP_EN_NAME EN_NAME from hr_post_group              
    ]]>
	</select>
	<insert id="InsertPost" parameterClass="SimpleMap">
		<![CDATA[
		insert into hr_post(
		 post_no,
		 post_id,
		 post_name, 
		 post_en_name,
		 post_group_id,
		 create_date,
		 created_by ,
		 activity) values(hr_post_seq.nextval,#POSTID#,#POSTNAME#,#POSTENNAME#,#POSTGROUPID#, 
		 sysdate,#CREATEDBY#,'1'
		 )
	]]>
	</insert>

	<update id="UpdatePost" parameterClass="SimpleMap">
		<![CDATA[  
			   UPDATE hr_post 
				   SET POST_NAME=#POSTNAME#,
				   post_en_name=#POSTENNAME#,
				   update_date=sysdate,updated_by=#UPDATEDBY#,
				   post_group_id=#POSTGROUPID#
				   WHERE POST_ID = #OLDPOSTID#             
			]]>
	</update>  
	
	<update id="updatePostByForGroupId" parameterClass="SimpleMap">
		<![CDATA[  
			   UPDATE hr_post 
				   SET  post_group_id=#POSTGROUPID#
				       WHERE post_group_id = #OLDID#                   
			]]>
	</update>  

	<delete id="deletePost" parameterClass="string">
		<![CDATA[
			   delete from hr_post where POST_ID=#ID#          
			]]>
	</delete>

   <delete id="deletePostByGroupId" parameterClass="string">
		<![CDATA[
			   delete from hr_post where POST_GROUP_ID=#ID#          
			]]>
	</delete>  

	<select id="getPostLevelList" resultClass="SimpleMap">
		<![CDATA[
			select               
			        POST_GRADE_LEVEL_NO ,
					POST_GRADE_LEVEL_ID, 
					POST_GRADE_LEVEL_NAME, 
					POST_GRADE_LEVEL_EN_NAME,
					POST_GRADE_LEVEL_VALUE,
					to_char(HP.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
					HP.CREATED_BY,
		        HR.CHINESENAME AS CREATED_BY_NAME,
		        HR.ENGLISHNAME AS CREATED_BY_ENNAME,
		        HR.KOREANNAME  AS CREATED_BY_KORNAME,
		        HR.CHINESE_PINYIN	AS CREATED_BY_PINYIN
		  	 FROM hr_post_grade_level hp,hr_employee hr
		     where hp.created_by = hr.empid(+) 
		     order by POST_GRADE_LEVEL_NO
    ]]>
	</select>

    <select id="isPostLevelIdExsit" parameterClass="string"
		resultClass="int">                             
		<![CDATA[               
			  select  count(*) from hr_post_grade_level where POST_GRADE_LEVEL_ID=#id#                 
			]]>
	</select>
	
	<select id="getPostLevelById" parameterClass="string"
		resultClass="SimpleMap">
		<![CDATA[  
      select 
	        POST_GRADE_LEVEL_NO ,
			POST_GRADE_LEVEL_ID, 
			POST_GRADE_LEVEL_NAME,
			POST_GRADE_LEVEL_EN_NAME,
			POST_GRADE_LEVEL_VALUE,
			to_char(CREATE_DATE,'YYYY-MM-DD') CREATE_DATE ,
			CREATED_BY 
	FROM hr_post_grade_level  WHERE POST_GRADE_LEVEL_ID=#ID#
                
    ]]>
	</select>  

	<insert id="insertPostLevel" parameterClass="SimpleMap">
		<![CDATA[
		insert into hr_post_grade_level(
		 POST_GRADE_LEVEL_NO, 
		 POST_GRADE_LEVEL_ID,  
		 POST_GRADE_LEVEL_NAME, 
		 POST_GRADE_LEVEL_EN_NAME,
		 POST_GRADE_LEVEL_VALUE,
		 CREATE_DATE,
		 CREATED_BY ,  
		 ACTIVITY) values(HR_GRADE_LEVEL_SEQ.nextval,#POSTLEVELID#,#POSTLEVELNAME#,
		 #POSTLEVELENNAME#,#POSTGRADELEVELVALUE#,
		 sysdate,#CREATEDBY#,'1'      
		 )  
	]]>
	</insert>

	<update id="updatePostLevel" parameterClass="SimpleMap">
		<![CDATA[
			   UPDATE hr_post_grade_level    
				   SET POST_GRADE_LEVEL_EN_NAME=#POSTLEVELENNAME#,          
				   POST_GRADE_LEVEL_NAME=#POSTLEVELNAME#,
				   update_date=sysdate,updated_by=#UPDATEDBY#,
				   POST_GRADE_LEVEL_VALUE=#POSTGRADELEVELVALUE#, 
				    POST_GRADE_LEVEL_ID=#POSTLEVELID#     
				   WHERE POST_GRADE_LEVEL_ID = #OLDPOSTLEVELID#    
			]]>
	</update>

	<delete id="deletePostLevel" parameterClass="string">
		<![CDATA[
			   delete from hr_post_grade_level where POST_GRADE_LEVEL_ID=#ID#
			]]>
	</delete>

	<select id="getPostGroup" resultClass="SimpleMap">
		<![CDATA[
		       select post_group_no,
		         POST_GROUP_ID,
		         POST_GROUP_NAME,
		         POST_GROUP_EN_NAME,
		         TO_CHAR(g.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,        
		         G.CREATED_BY,
		         HR.CHINESENAME AS CREATED_BY_NAME,
		         HR.CHINESE_PINYIN AS CREATED_BY_PINYIN,
		         HR.ENGLISHNAME AS CREATED_BY_ENNAME,
		         HR.KOREANNAME AS CREATED_BY_KORNAME,
		         HR.CHINESENAME 
	          FROM HR_POST_GROUP G,HR_EMPLOYEE HR
	         WHERE G.CREATED_BY = HR.EMPID(+)
	      ORDER BY POST_GROUP_NO      
    ]]>
	</select>

	<select id="getPostGroupForUpdate" parameterClass="string"
		resultClass="SimpleMap">
		<![CDATA[
         select POST_GROUP_NO,
         POST_GROUP_ID,  
         POST_GROUP_NAME,
         POST_GROUP_EN_NAME,
         TO_CHAR(CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
         CREATED_BY 
         from hr_post_group WHERE POST_GROUP_ID=#id#              
    ]]>
	</select>
	<insert id="InsertPostGroup" parameterClass="SimpleMap">
		<![CDATA[
		insert into hr_post_group(POST_GROUP_NO,POST_GROUP_ID,POST_GROUP_NAME,POST_GROUP_EN_NAME,CREATE_DATE,CREATED_BY,ACTIVITY)
		values(HR_GROUP_SEQ.NEXTVAL,#POSTGROUPID#,#POSTGROUPNAME#,#POSTGROUPENNAME#,SYSDATE,#CREATEDBY#,'1')
	]]>
	</insert>

	<update id="UpdatePostGroup" parameterClass="SimpleMap">
		<![CDATA[
			   UPDATE hr_post_group 
				  SET POST_GROUP_ID = #POSTGROUPID#,POST_GROUP_NAME=#POSTGROUPNAME#,POST_GROUP_EN_NAME=#POSTGROUPENNAME#,
				  update_date=SYSDATE,updated_by=#UPDATEEDBY#
				  WHERE POST_GROUP_ID = #UPDATEBYID#      
			]]>
	</update>


	<select id="isGroupIdExsit" parameterClass="string"
		resultClass="int">
		<![CDATA[  
			  select  count(*) from hr_post_group where POST_GROUP_ID=#POST_GROUP_ID#
			]]>
	</select>


	<delete id="deletePostGroup" parameterClass="string">
		<![CDATA[  
			  delete from hr_post_group where POST_GROUP_ID=#id#
			]]>
	</delete>

	<select id="getPostGrade" resultClass="SimpleMap">
		<![CDATA[
		      select  POST_GRADE_NO,
		        POST_GRADE_ID,	
		        POST_GRADE_NAME,
		        POST_GRADE_EN_NAME,
		        POST_GRADE_VALUE,
		        TO_CHAR(hp.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
		       	hr.CREATED_BY,
		        HR.CHINESENAME AS CREATED_BY_NAME,
		        HR.ENGLISHNAME AS CREATED_BY_ENNAME,
		        HR.KOREANNAME  AS CREATED_BY_KORNAME,
		        HR.CHINESE_PINYIN	AS CREATED_BY_PINYIN
		  	 from hr_post_grade hp,hr_employee hr
		     where hp.created_by = hr.empid(+) 
		     order by POST_GRADE_NO
    ]]>
	</select>

	<select id="getPostGradeById" parameterClass="string"
		resultClass="SimpleMap">
		<![CDATA[  
        select
		POST_GRADE_NO,
        POST_GRADE_ID,	
        POST_GRADE_NAME,
        POST_GRADE_EN_NAME,
        POST_GRADE_VALUE,
        TO_CHAR(CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
       	CREATED_BY	
		 from hr_post_grade  WHERE POST_GRADE_ID=#id#    
                
    ]]>
	</select>

	<select id="isPostGradeIdExsit" parameterClass="string"
		resultClass="int">
		<![CDATA[  
			  select  count(*) from hr_post_grade where POST_GRADE_ID=#id#
			]]>
	</select>

	<insert id="InsertPostGrade" parameterClass="SimpleMap">
		<![CDATA[
	insert into hr_post_grade(
		 POST_GRADE_NO,                    
		 POST_GRADE_ID,
		 POST_GRADE_NAME, 
		 POST_GRADE_EN_NAME, 
		 POST_GRADE_VALUE,        
		 CREATE_DATE,
		 CREATED_BY ,
		 activity) values(hr_grade_seq.nextval,#GRADEID#,#POSTGRADENAME#,#POSTGRADEENNAME#,#POSTGRADEVALUE#,
		 sysdate,#CREATEDBY#,'1'
		 )
	]]>              
	</insert>

	<update id="UpdatePostGrade" parameterClass="SimpleMap">
		<![CDATA[  
			   UPDATE hr_post_grade    
				  SET   
				  POST_GRADE_ID=#GRADEID#,  
				  POST_GRADE_NAME=#POSTGRADENAME#,  
				  POST_GRADE_EN_NAME=#POSTGRADEENNAME#,
				  POST_GRADE_VALUE=#POSTGRADEVALUE#,   
				  update_date=sysdate,updated_by=#UPDATEDBY# 
				  WHERE POST_GRADE_ID = #OLDPOSTGRADEID#
			]]>
	</update>             

	<delete id="deletePostGrade" parameterClass="string">
		<![CDATA[   
			   delete from hr_post_grade where POST_GRADE_ID=#id#    
			]]>
	</delete>
	
	<!-- get menu entity object -->   
	<select id="getMenuEnt" parameterClass="string" resultClass="MenuEnt">
		<![CDATA[  
			     SELECT MENU_CODE            menuCode,
						MENU_INTRO           menuIntro,
						MENU_PARENT_CODE     menuParentCode,
						DEPTH                depth,
						MENU_URL             menuUrl,
						MENU_EN_INTRO        menuEnIntro  
		  		  FROM SY_MENU 
		  		  WHERE MENU_CODE = #menuCode#
			]]>
	</select>
	
	
	<select id="retrieveCanBeBuildMenu" resultClass="SimpleMap">
		<![CDATA[
			select
			menu_code ID,
			menu_intro NAME,
			menu_en_intro EN_NAME
			from sy_menu
			where is_can_be_build = 1
		]]>
	</select>
	
	<select id="retrieveTableByMenu" resultClass="ReportTable" parameterClass="SimpleMap">
		<![CDATA[
			select * from report_table t where t.menu_code = #MENU_CODE#
		]]>
		<isNotEmpty prepend="AND" property="cpnyId">
			<![CDATA[
		 	 t.cpny_id=#cpnyId:VARCHAR#
			]]>
       </isNotEmpty>
	</select>
	
	<select id="retrieveReportItemListByTableName" parameterClass="string" resultClass="ReportItemReference">
		<![CDATA[    
        select * from report_item_reference where table_name = #table_name# order by order_no
    ]]>
	</select>
	
	<select id="retrieveReportItemListNotInRtNo" parameterClass="SimpleMap" resultClass="ReportItemReference">
		<![CDATA[    
        select * from report_item_reference where table_name = #table_name# 
	        and item_id not in(select ri.ref_item_id from report_item ri where rt_no = #rt_no#)     
        order by order_no
    ]]>
	</select>
	
	<select id="retrieveReportTableNextPK" resultClass="int">
		<![CDATA[
			select case when max(rt_no) is null then 1 else max(rt_no)+1 end as rt_no from report_table
		]]>
	</select>
	
	<update id="UpdateReportTable" parameterClass="ReportTable">
		<![CDATA[  
			   UPDATE report_table 
				   SET table_name=#table_name#,
				   table_en_name=#table_en_name#,
				   table_kor_name=#table_kor_name#,
				   report_type=#report_type#,
				   view_model=#view_model#,
				   update_date=sysdate,
				   update_by=#update_by#
				   WHERE rt_no = #rt_no#             
			]]>
	</update>
	<delete id="deleteReportTable" parameterClass="ReportTable">
		<![CDATA[
			   delete from report_table where rt_no = #rt_no#          
			]]>
	</delete>
	<delete id="deleteReportItemByRtno" parameterClass="ReportTable">
		<![CDATA[
			   delete from report_item where rt_no = #rt_no#          
			]]>
	</delete>
	
	<delete id="deleteReportItemByRino" parameterClass="string">
		<![CDATA[
			   delete from report_item where ri_no = #ri_no#          
			]]>
	</delete>
	
	<update id="updateReportItem" parameterClass="ReportItem">
		<![CDATA[
		update report_item set 
			 REF_ITEM_ID = #ref_item_id:VARCHAR#,
			 item_name = #item_name#, 
			 item_en_name = #item_en_name#,
			 item_kor_name = #item_kor_name#,
			 order_no = #order_no#,
			 update_date = sysdate,
			 update_by = #update_by# 
			 where ri_no = #ri_no#
	]]>
	</update>
	
	<insert id="insertReportItem" parameterClass="ReportItem">
		<![CDATA[
		insert into report_item(
			 ri_no,
			 rt_no,
			 item_name, 
			 item_en_name,
			 item_kor_name,
			 ref_table_name,
			 ref_item_no,
			 ref_item_id,
			 order_no,
			 create_date,
			 create_by
			 ) values(REPORT_RI_NO_SEQ.nextval,#rt_no#,#item_name#,#item_en_name#,
			 #item_kor_name#,#ref_table_name#,
			 #ref_item_no#,#ref_item_id#,#order_no#,
			 sysdate,#create_by#
		 )
	]]>
	</insert>
	
	<insert id="insertReportTable" parameterClass="ReportTable">
		<![CDATA[
		insert into report_table(
			 rt_no,
			 menu_code,
			 table_name, 
			 table_en_name,
			 table_kor_name,
			 report_type,
			 view_model,
			 create_date,
			 create_by,
			 cpny_id
			 ) values(#rt_no#,#menu_code#,#table_name#,#table_en_name#,#table_kor_name#,#report_type#,#view_model#,
			 sysdate,#create_by#,#cpny_id#
		 )
	]]>
	</insert>
	
	<select id="getEmpDiff" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[    
		  	 	   SELECT CODE_ID AS ID,
				   		  CODE_NAME AS NAME
				     FROM SY_CODE A
					WHERE A.PARENT_CODE = 'EMP_DIFF'
					  AND A.ACTIVITY = 1 
					  AND A.CODE_ID IN (SELECT B.CPNY_ID
					      			   	  FROM HR_EMPLOYEE B
										 WHERE B.KO_PERSON_ID in (SELECT distinct E.KO_PERSON_ID
                                          FROM HR_EMPLOYEE E
                                         WHERE E.ad_user_id = lower(#adminid#)) 
										   AND B.DATE_LEFT IS NULL
										   AND B.STATUS_CODE NOT IN 'EmpStatus3'
									    )
	    ]]>
	</select>
	
	<select id="getGrantValidate" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[    
		  	 	   	   SELECT A.CHINESENAME,
					   		  INSTR(B.SCREEN_GRANT_NO,'99') CNT
						 FROM HR_EMPLOYEE A,
						 	  SY_ADMIN B
					    WHERE A.PERSON_ID = B.ADMINID(+)
						  AND A.EMPID = #adminid#
						  AND A.CPNY_ID = #cpnyId#
	    ]]>
	</select>
	
	
		
	
	<select id="getEssOvertimeParamList" resultClass="SimpleMap"  parameterClass="SimpleMap">
		<![CDATA[
			SELECT PARAM_NO,
			       CONDITION_TYPE,
			       SY.CODE_NAME CONDITIONNAME,
			       AFFIRM_LEVEL,
			       OVERTIME_TYPE,
			       SY1.CODE_NAME OVERTIMENAME,
			       REFERENCN_FLAG,
			       REFERENCN_FROM_FLAG,
			       REFERENCN_FROM_OFFSET,
			       REFERENCN_FROM_RELATION,
			       REFERENCN_TO_FLAG,
			       REFERENCN_TO_OFFSET,
			       REFERENCN_TO_RELATION,
			       OVERTIME_TOTAL,
			       ESS.CPNY_ID,
			       CPNY.CODE_NAME CPNYNAME,
			       ESS.DEPTID,
			       T.DEPTNAME,
			       TO_CHAR(ESS.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE,
			       ESS.CREATED_BY,
			       TO_CHAR(ESS.UPDATE_DATE, 'YYYY-MM-DD') AS UPDATE_DATE,
			       ESS.UPDATED_BY,
			       ESS.ACTIVITY
			  from ESS_OVERTIME_APPLY_PARAM ESS,
			       SY_CODE                  SY,
			       SY_CODE                  SY1,
			       SY_CODE                  CPNY,
			       HR_DEPARTMENT            T
			 WHERE ESS.CONDITION_TYPE = SY.CODE_ID(+)
			   AND ESS.OVERTIME_TYPE = SY1.CODE_ID(+)
			   AND ESS.CPNY_ID = CPNY.CODE_ID(+)
			   AND ESS.DEPTID = T.DEPTID(+)
			   AND ESS.CPNY_ID = #cpnyId#

    	]]>
    	<isNotEmpty prepend="AND" property="CONDITION_TYPE">		
			<![CDATA[
			      CONDITION_TYPE = #CONDITION_TYPE:VARCHAR#
			]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="PARAM_NO">		
			<![CDATA[
			      PARAM_NO = #PARAM_NO:NUMERIC#
			]]>
		</isNotEmpty>
		
		 <![CDATA[
	    	ORDER BY CONDITION_TYPE
	     ]]>
	</select>
	
	<select id="getEssOvertimeParamListCnt" resultClass="int"  parameterClass="SimpleMap">
		<![CDATA[
			SELECT COUNT(PARAM_NO) 
			  FROM ESS_OVERTIME_APPLY_PARAM ESS
			 WHERE 1 = 1        
			 AND ESS.CPNY_ID=#cpnyId:VARCHAR#
    	]]>
    	<isNotEmpty prepend="AND" property="CONDITION_TYPE">		
			<![CDATA[
			      CONDITION_TYPE = #CONDITION_TYPE:VARCHAR#
			]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="PARAM_NO">		
			<![CDATA[
			      PARAM_NO = #PARAM_NO:NUMERIC#
			]]>
		</isNotEmpty>
	</select>
	
	<select id="getHelpInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[    
				SELECT S.CHINESENAME,S.TEL,S.EMAIL,S.CPNY_ID 
				FROM SY_HELP S	 
				WHERE S.CPNY_ID=#cpnyId:VARCHAR#
	    ]]>
	</select>
	
	
</sqlMap>