<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="com.api">
	<!-- 获取休假决裁信息 -->
	<select id="leaveAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
				    SELECT ESS_LEAVE_APPLY_TB.LEAVE_NO										  AS leaveNo,
				    	   (select e.empid from hr_employee e where e.person_id=ESS_LEAVE_APPLY_TB.LEAVE_EMPID) AS empId,
					       ESS_LEAVE_APPLY_TB.LEAVE_EMPID									  AS person_id,
					       HR_EMPLOYEE.CHINESENAME											  AS chineseName,
					       HY.CHINESENAME													  AS crechineseName,
					       SY_POSITION.CODE_NAME 											  AS position,
					       SY_GRADE_CODE.CODE_NAME                                            AS postGradeCode,
					       HR_EMPLOYEE.deptname 											  AS deptName,
       					   HR_EMPLOYEE.FOURTHDEPTNAME										  AS fourthDeptName,
					       ESS_AFFIRM.AFFIRM_LEVEL											  AS affirmLevel,
					       ESS_AFFIRM.ESS_AFFIRM_NO											  AS affirmNo,
					       ESS_AFFIRM.AFFIRM_FLAG											  AS affirm_flag,
					       ESS_AFFIRM.AFFIRM_REMARKS										  AS remark,
					       ESS_LEAVE_APPLY_TB.LEAVE_TYPE									  AS leaveTypeCode,
					       ApplyType.CODE_NAME 								  				  AS leaveTypeName,
					       TO_CHAR(ESS_LEAVE_APPLY_TB.CREATE_DATE, 'YYYY-MM-DD') 	  		  AS createDate,
					       TO_CHAR(ESS_LEAVE_APPLY_TB.LEAVE_FROM_TIME, 'YYYY-MM-DD HH24:MI')  AS leaveFromTime,
					       TO_CHAR(ESS_LEAVE_APPLY_TB.LEAVE_TO_TIME, 'YYYY-MM-DD HH24:MI')    AS leaveToTime,
					       ESS_LEAVE_APPLY_TB.LEAVE_REASON									  AS leaveReason,
					       ESS_LEAVE_APPLY_TB.ACTIVITY										  AS activity,
					       ESS_LEAVE_APPLY_TB.REMARK										  AS remark,
					       NVL(ESS_AFFIRM.UP_AFFIRM_FLAG,1) 							      AS up_flag,
					       NVL(ESS_AFFIRM.NEXT_AFFIRM_FLAG,0) 							      AS next_flag,
					       NVL(ESS_AFFIRM.MAX_LEVEL_FLAG,0)								      AS maxLevel_flag,
					       ALTYPE.CODE_NAME                                                   as applyLeaveType,
					       MAX_AFFIRMOR_FLAG.AFFIRM_FLAG 									  AS max_affirm_flag,
					       ESS_LEAVE_APPLY_TB.FILE_UPLOAD_FLAG								  AS fileUploadFlag
					  FROM ESS_LEAVE_APPLY_TB,
					       (SELECT CODE_ID,CODE_NAME FROM SY_CODE SY WHERE SY.PARENT_CODE = 'LeaveTypeCode') ApplyType,
					       (SELECT CODE_ID,CODE_NAME FROM SY_CODE SY WHERE SY.PARENT_CODE = 'PositionCode') SY_POSITION,
					       (SELECT CODE_ID,CODE_NAME FROM SY_CODE SY WHERE SY.PARENT_CODE = 'PostGradeCode') SY_GRADE_CODE,
					       HR_EMP_V HR_EMPLOYEE,
					       HR_EMPLOYEE HY,
					       SY_CODE ALTYPE,
					       (SELECT ESS_AFFIRM.*,
							       UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
							       UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
							       NEXT_AFFIRM.AFFIRM_FLAG AS NEXT_AFFIRM_FLAG,
							       (CASE WHEN ESS_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL THEN 1 ELSE 0 END) MAX_LEVEL_FLAG
							  FROM (SELECT ESS_AFFIRM.*,ESS_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,ESS_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
							          FROM ESS_AFFIRM
							         WHERE APPLY_TYPE = 'LeaveApply') ESS_AFFIRM,
							       (SELECT T.APPLY_NO, T.APPLY_TYPE, MAX(T.AFFIRM_LEVEL) MAXLEVEL
							          FROM ESS_AFFIRM T
							         WHERE T.APPLY_TYPE = 'LeaveApply'
							         GROUP BY T.APPLY_NO, T.APPLY_TYPE) ESS_AFFIRM_MAX_LEVEL,
							       (SELECT T.APPLY_NO,T.APPLY_TYPE,T.AFFIRM_LEVEL,T.AFFIRMOR_ID,T.AFFIRM_FLAG
							          FROM ESS_AFFIRM T
							         WHERE APPLY_TYPE = 'LeaveApply') UP_AFFIRM,
							       (SELECT A.APPLY_NO, A.APPLY_TYPE, MAX(A.AFFIRM_FLAG) AS AFFIRM_FLAG
							          FROM ESS_AFFIRM A,
							               (SELECT T.APPLY_NO, T.AFFIRMOR_ID, T.AFFIRM_LEVEL
							                  FROM ESS_AFFIRM T
							                 WHERE T.AFFIRMOR_ID in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
							                   AND T.APPLY_TYPE = 'LeaveApply') B
							         WHERE A.APPLY_TYPE = 'LeaveApply'
							           AND A.APPLY_NO = B.APPLY_NO
							           AND A.AFFIRM_LEVEL > B.AFFIRM_LEVEL
							         GROUP BY A.APPLY_NO, A.APPLY_TYPE) NEXT_AFFIRM
							 WHERE ESS_AFFIRM.APPLY_TYPE = 'LeaveApply'
							   AND ESS_AFFIRM.APPLY_TYPE = UP_AFFIRM.APPLY_TYPE(+)
							   AND ESS_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
							   AND ESS_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
							   AND ESS_AFFIRM.APPLY_TYPE = NEXT_AFFIRM.APPLY_TYPE(+)
							   AND ESS_AFFIRM.APPLY_NO = NEXT_AFFIRM.APPLY_NO(+)
							   AND ESS_AFFIRM.APPLY_NO = ESS_AFFIRM_MAX_LEVEL.APPLY_NO(+)
							   AND ESS_AFFIRM.APPLY_TYPE = ESS_AFFIRM_MAX_LEVEL.APPLY_TYPE(+)
							   ) ESS_AFFIRM,
							   (SELECT ESS_AFFIRM.AFFIRM_FLAG, ESS_AFFIRM.APPLY_NO
          FROM ESS_AFFIRM,
               (SELECT MAX(ESS_AFFIRM.AFFIRM_LEVEL),
                       MAX(ESS_AFFIRM.ESS_AFFIRM_NO) AFFIRM_NO
                  FROM ESS_AFFIRM
                 WHERE ESS_AFFIRM.APPLY_TYPE = 'LeaveApply'
                 GROUP BY ESS_AFFIRM.APPLY_NO) HH
         WHERE ESS_AFFIRM.ESS_AFFIRM_NO = HH.AFFIRM_NO) MAX_AFFIRMOR_FLAG
					 WHERE ESS_AFFIRM.APPLY_TYPE = 'LeaveApply'
					   AND ESS_LEAVE_APPLY_TB.LEAVE_TYPE = ApplyType.CODE_ID(+)
					   AND ESS_LEAVE_APPLY_TB.created_by = HY.person_id
					   AND ESS_LEAVE_APPLY_TB.LEAVE_NO = MAX_AFFIRMOR_FLAG.APPLY_NO
					   AND HR_EMPLOYEE.POST_CODE = SY_POSITION.CODE_ID(+)
					   AND HR_EMPLOYEE.POST_GRADE_CODE = SY_GRADE_CODE.CODE_ID(+)
					   AND ESS_LEAVE_APPLY_TB.APPLYLEAVETYPE = ALTYPE.CODE_ID(+)
					   AND ESS_LEAVE_APPLY_TB.LEAVE_EMPID = HR_EMPLOYEE.person_id
					   AND ESS_LEAVE_APPLY_TB.LEAVE_NO = ESS_AFFIRM.APPLY_NO
					   AND NVL(ESS_AFFIRM.UP_AFFIRM_FLAG,1)=1
					   AND ESS_AFFIRM.AFFIRMOR_ID  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
		]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    ESS_LEAVE_APPLY_TB.LEAVE_NO = #applyNo#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
			       (
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%'
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%'
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%'
			   	    )
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sDate">
			<![CDATA[
			       (
			   		   ESS_LEAVE_APPLY_TB.LEAVE_FROM_TIME BETWEEN TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
			       OR  ESS_LEAVE_APPLY_TB.LEAVE_TO_TIME BETWEEN TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
			       OR  ESS_LEAVE_APPLY_TB.LEAVE_FROM_TIME < TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND ESS_LEAVE_APPLY_TB.LEAVE_TO_TIME > TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
			       )
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptID">
			<![CDATA[
				EXISTS
					 (SELECT *
					          FROM HR_DEPARTMENT B1
					         WHERE B1.DEPTID = HR_EMPLOYEE.DEPTID
					         START WITH B1.DEPTID = #deptID:VARCHAR#
					        CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID)
			]]>
		</isNotEmpty>
		<isNotEqual prepend="" property="qryType" compareValue="0">
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁过的，无论是通过还是否决 -->
				<![CDATA[
		         ESS_AFFIRM.affirm_flag != 0
		   		 ]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
				<![CDATA[
		         ESS_AFFIRM.affirm_flag = 0
		    	]]>
			</isEqual>
		</isNotEqual>
		<![CDATA[
			ORDER BY LEAVE_FROM_TIME DESC,EMPID
		]]>
	</select>

	<!-- NEW retrieve OT affirm list information -->
	<select id="otAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
				    SELECT ESS_APPLY_OT.APPLY_OT_NO 										     AS otNo,
					       HR_EMPLOYEE.EMPID                                                     AS empId,
					       HR_EMPLOYEE.CPNY_ID  												 AS CPNY_ID,
      					   ESS_APPLY_OT.EMPID                                                    AS person_id,
					       HR_EMPLOYEE.CHINESENAME											     AS chineseName,
					       HY.CHINESENAME											     		 AS crechineseName,
					       SY_POSITION.CODE_NAME 											     AS position,
					       SY_POST_GRADE.CODE_NAME 											     AS postGradeCode,
					       ESS_AFFIRM.AFFIRM_LEVEL											     AS affirmLevel,
					       ESS_AFFIRM.ESS_AFFIRM_NO											     AS affirmNo,
					       ESS_AFFIRM.AFFIRM_FLAG											     AS affirm_flag,
					       ESS_AFFIRM.AFFIRM_REMARKS                                             AS REMARK,
					       /*HR_EMPLOYEE.deptname 											     AS deptName,*/
       					   /*HR_EMPLOYEE.FOURTHDEPTNAME										     AS fourthDeptName,*/
       					   get_dept_name(HR_EMPLOYEE.DEPTID)									 AS deptName,
       					   hr_get_level_deptname(HR_EMPLOYEE.DEPTID,4)							 AS fourthDeptName,
					       ApplyType.CODE_NAME 												     AS otTypeName,
					       ApplyType.CODE_ID												     AS otTypeCode,
					       TO_CHAR(ESS_APPLY_OT.APPLY_OT_DATE - OT_NIGHT_FLAG, 'YYYY-MM-DD')     AS otDate,
					       TO_CHAR(ESS_APPLY_OT.APPLY_OT_DATE, 'YYYY-MM-DD ') || ESS_APPLY_OT.OT_FROM_TIME  AS otFromTime,
					       TO_CHAR(ESS_APPLY_OT.APPLY_OT_DATE + ESS_APPLY_OT.APPLY_OT_FLAG,'YYYY-MM-DD ') || ESS_APPLY_OT.OT_TO_TIME AS otToTime,
					       CASE WHEN OT_LENGTH > 0
					       	    THEN OT_LENGTH
					       	    ELSE
					       (TO_DATE(TO_CHAR(ESS_APPLY_OT.APPLY_OT_DATE + ESS_APPLY_OT.APPLY_OT_FLAG,'YYYY-MM-DD ') || ESS_APPLY_OT.OT_TO_TIME,
					                'YYYY-MM-DD HH24:MI') - TO_DATE(TO_CHAR(ESS_APPLY_OT.APPLY_OT_DATE, 'YYYY-MM-DD ') || ESS_APPLY_OT.OT_FROM_TIME,
					                'YYYY-MM-DD HH24:MI')) * 24 - ESS_APPLY_OT.OT_DEDUCT_TIME
					            END AS otLength,
					       ESS_APPLY_OT.APPLY_OT_REMARK 									  AS otRemark,
					       ESS_APPLY_OT.APPLY_OT_FLAG   									  AS otNextDays,
					       TO_CHAR(ESS_APPLY_OT.CREATE_DATE, 'YYYY-MM-DD') 					  AS createDate,
					       ESS_APPLY_OT.ACTIVITY 											  AS activity,
					       ESS_APPLY_OT.OT_DEDUCT_TIME 										  AS otDeduct,
					       ESS_APPLY_OT.APPLY_OT_AFFIRM 									  AS forceType,
					       NVL(ESS_AFFIRM.UP_AFFIRM_FLAG,1) 							      AS up_flag,
					       NVL(ESS_AFFIRM.NEXT_AFFIRM_FLAG,0) 							      AS next_flag,
					       NVL(ESS_AFFIRM.MAX_LEVEL_FLAG,0)								      AS maxLevel_flag
					  FROM ESS_APPLY_OT,
					       /*HR_EMP_V HR_EMPLOYEE,*/
					       HR_EMPLOYEE HR_EMPLOYEE,
					       HR_EMPLOYEE HY,
					       SY_CODE APPLYTYPE,
         				   SY_CODE SY_POSITION,
         				   SY_CODE SY_POST_GRADE,
					       (  SELECT ESS_AFFIRM.*, UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
					                 UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
					                 0 AS NEXT_AFFIRM_FLAG,
					                 (CASE
					                     WHEN ESS_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL
					                        THEN 1
					                     ELSE 0
					                  END
					                 ) MAX_LEVEL_FLAG
					            FROM (SELECT ESS_AFFIRM.*,
					                         ESS_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,
					                         ESS_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
					                    FROM ESS_AFFIRM
					                   WHERE APPLY_TYPE = 'OtApply'
									     AND AFFIRMOR_ID  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) ESS_AFFIRM,

					                 (SELECT   T.APPLY_NO, T.APPLY_TYPE,
					                           MAX (T.AFFIRM_LEVEL) MAXLEVEL
					                      FROM ESS_AFFIRM T
					                     WHERE T.APPLY_TYPE = 'OtApply'
					                       AND EXISTS (SELECT APPLY_NO FROM ESS_AFFIRM T2 WHERE T2.AFFIRMOR_ID  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 ) AND T2.APPLY_NO = T.APPLY_NO)
					                  GROUP BY T.APPLY_NO, T.APPLY_TYPE) ESS_AFFIRM_MAX_LEVEL,

					                 (SELECT T.APPLY_NO, T.APPLY_TYPE, T.AFFIRM_LEVEL,
					                         T.AFFIRMOR_ID, T.AFFIRM_FLAG
					                    FROM ESS_AFFIRM T
					                   WHERE APPLY_TYPE = 'OtApply'
					                      AND EXISTS (SELECT APPLY_NO FROM ESS_AFFIRM T2 WHERE T2.AFFIRMOR_ID  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 ) AND T2.APPLY_NO = T.APPLY_NO)
									      ) UP_AFFIRM
					           WHERE ESS_AFFIRM.APPLY_TYPE = 'OtApply'
					             AND ESS_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
					             AND ESS_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
					             AND ESS_AFFIRM.APPLY_NO = ESS_AFFIRM_MAX_LEVEL.APPLY_NO(+)
							   ) ESS_AFFIRM
					 WHERE ESS_APPLY_OT.EMPID = HR_EMPLOYEE.person_id
					 	 AND ESS_APPLY_OT.CREATED_BY = HY.person_id
					     AND HR_EMPLOYEE.POST_CODE = SY_POSITION.CODE_ID(+)
					     AND HR_EMPLOYEE.POST_GRADE_CODE = SY_POST_GRADE.CODE_ID(+)
					     AND ESS_APPLY_OT.APPLY_OT_TYPE_CODE = APPLYTYPE.CODE_ID(+)
					     AND ESS_APPLY_OT.APPLY_OT_NO = ESS_AFFIRM.APPLY_NO
						 AND APPLYTYPE.PARENT_CODE = 'OTTypeCode'
						  /*AND SY_POSITION.PARENT_CODE = 'PositionCode'*/
					     AND ESS_AFFIRM.AFFIRMOR_ID  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
					     AND NVL(ESS_AFFIRM.UP_AFFIRM_FLAG, 1) = 1
		]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    ESS_APPLY_OT.APPLY_OT_NO = #applyNo#
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
				   (
			   		   HR_EMPLOYEE.EMPID                LIKE #key:VARCHAR# || '%'
			   		OR HR_EMPLOYEE.CHINESENAME           LIKE #key:VARCHAR# || '%'
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%'
			    	)
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sDate">
			<![CDATA[
				 ESS_APPLY_OT.APPLY_OT_DATE BETWEEN TO_DATE(NVL(#sDate:VARCHAR#,'1900-01-01'), 'YYYY-MM-DD') AND TO_DATE(NVL(#eDate:VARCHAR#,'2999-12-31') || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
		]]>
		</isNotEmpty>
		<isNotEqual prepend="" property="qryType" compareValue="0">
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁过的，无论是通过还是否决 -->
				<![CDATA[
				 affirm_flag > 0
		]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
				<![CDATA[
				 affirm_flag = 0 AND ESS_APPLY_OT.ACTIVITY = 0

		]]>
			</isEqual>
		</isNotEqual>
		<![CDATA[
				ORDER BY APPLY_OT_DATE DESC,DEPTNAME,EMPID
		]]>
	</select>

	<!-- NEW retrieve Leave affirm list information -->
	<select id="arModifyAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AR_DETAIL_BACK.AR_PK_NO AS pkNo1,
				       (select e.empid
				          from hr_employee e
				         where e.person_id = AR_DETAIL_BACK.EMPID) AS empId,

				       HR_EMPLOYEE.CHINESENAME AS chineseName,
				       HR_EMPLOYEE.deptname AS deptName,



				       TO_CHAR(AR_DETAIL.FROM_TIME,'YYYY-MM-DD HH24:MI') FROM_TIME,
				       TO_CHAR(AR_DETAIL.TO_TIME,'YYYY-MM-DD HH24:MI') TO_TIME,

				       AR_DETAIL.AR_DATE_STR,
				       AR_DETAIL.AR_MONTH_STR,
				       AR_DETAIL.QUANTITY,
				       AR_DETAIL.UNIT,
				       AR_DETAIL.LOCK_YN,
				       AR_DETAIL.REMARK,
				       AR_DETAIL.REMARK REMARK1,
				       AR_SHIFT010.SHIFT_NAME AS SHIFTNAME,
				       AR_ITEM.ITEM_NAME AS ITEMNAME,
				       GET_CODE_NAME(AR_DETAIL.UNIT) UNITNAME,


				       TO_CHAR(AR_DETAIL_BACK.FROM_TIME,'YYYY-MM-DD HH24:MI') FROM_TIME1,
				       TO_CHAR(AR_DETAIL_BACK.TO_TIME,'YYYY-MM-DD HH24:MI') TO_TIME1,
				       AR_DETAIL_BACK.AR_DATE_STR AR_DATE_STR1,
				       AR_DETAIL_BACK.AR_MONTH_STR AR_MONTH_STR1,
				       AR_DETAIL_BACK.QUANTITY QUANTITY1,
				       AR_DETAIL_BACK.UNIT UNIT1,
				       AR_DETAIL_BACK.LOCK_YN LOCK_YN1,
				       AR_ITEM1.ITEM_NAME AS ITEMNAME1,
				       AR_DETAIL_BACK.FLAG ACTIVITY,

   					   GET_CODE_NAME( AR_DETAIL_BACK.UNIT) UNITNAME1,
				       TO_CHAR(AR_DETAIL_BACK.CREATE_DATE,'YYYY-MM-DD HH24:MI') CREATEDATE1,
				       H.CHINESENAME CREATEBY1,
       (SELECT C.AFFIRM_FLAG FROM AR_DETAIL_AFFIRM C WHERE C.AR_DETAIL_NO = AR_DETAIL_BACK.AR_PK_NO AND C.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRM_FLAG,
			(SELECT  MAX(C.AR_DETAIL_AFFIRM_NO) FROM AR_DETAIL_AFFIRM C WHERE C.AR_DETAIL_NO = AR_DETAIL_BACK.AR_PK_NO AND C.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRMNO

				  FROM AR_DETAIL_BACK,
				       AR_DETAIL,
				       AR_SHIFT010,
				       AR_ITEM,
				       AR_ITEM  AR_ITEM1,
				       HR_EMP_V HR_EMPLOYEE,
				       HR_EMPLOYEE H
				 WHERE
				   AR_DETAIL_BACK.OPERATION = 'UPDATE'
				   AND AR_DETAIL_BACK.AR_PK_NO = AR_DETAIL.PK_NO
				   AND AR_DETAIL.SHIFT_NO = AR_SHIFT010.SHIFT_NO(+)
				   AND AR_DETAIL_BACK.AR_ITEM_NO = AR_ITEM1.ITEM_NO(+)
				   AND AR_DETAIL.AR_ITEM_NO = AR_ITEM.ITEM_NO(+)
				   AND AR_DETAIL_BACK.EMPID = HR_EMPLOYEE.person_id
				   AND AR_DETAIL_BACK.CREATED_BY = H.PERSON_ID(+)
				   AND EXISTS (SELECT 1
						  FROM AR_CALENDER A
						 WHERE A.CPNY_ID = HR_EMPLOYEE.CPNY_ID
						   AND A.AR_DATE_STR = AR_DETAIL_BACK.AR_DATE_STR
						   AND DECODE(HR_EMPLOYEE.EMP_DIFF_CODE,
									  'C_12067_1330308',
									  A.LOCK_FLAG_Z,
									  A.LOCK_FLAG_G) = 0)

		]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    AR_DETAIL_BACK.AR_PK_NO = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
			       (
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%'
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%'
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%'
			   	    )
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="qryType">
			<isEqual property="qryType" compareValue="2" >
				<![CDATA[
				EXISTS
				 (SELECT 1
						  FROM AR_DETAIL_AFFIRM T
						 WHERE T.AR_DETAIL_NO = AR_DETAIL_BACK.AR_PK_NO
						   AND T.AFFIRM_FLAG = 0
						   AND T.AFFIRMOR_ID in
							   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE  KO_PERSON_ID = #empid#)
						   AND (EXISTS (SELECT 1
										  FROM AR_DETAIL_AFFIRM TT
										 WHERE TT.AR_DETAIL_NO = T.AR_DETAIL_NO
										   AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
										   AND TT.AFFIRM_FLAG = 1
										   AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1) OR
								T.AFFIRM_LEVEL = '1'))
			    ]]>
			</isEqual>
			<isEqual property="qryType" compareValue="1" >
				<![CDATA[
					EXISTS
					 (SELECT 1
							  FROM AR_DETAIL_AFFIRM T
							 WHERE T.AR_DETAIL_NO = AR_DETAIL_BACK.AR_PK_NO
							   AND T.AFFIRM_FLAG <> 0
							   AND T.AFFIRMOR_ID in
								   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#)
							   AND (EXISTS (SELECT 1
											  FROM AR_DETAIL_AFFIRM TT
											 WHERE TT.AR_DETAIL_NO = T.AR_DETAIL_NO
											   AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
											   AND TT.AFFIRM_FLAG = 1
											   AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1) OR
									T.AFFIRM_LEVEL = '1'))
			    ]]>
			</isEqual>
		</isNotEmpty>
		<![CDATA[
					 ORDER BY  AR_DETAIL_BACK.AR_DATE_STR DESC , AR_DETAIL_BACK.EMPID
			]]>
	</select>

	<!-- retrieve present apply list -->
	<select id="presentAffirm" parameterClass="SimpleMap"
			resultClass="SimpleMap">
		<![CDATA[
			   SELECT A.SEQ_NO,
					  A.AFFIRM_FLAG ACTIVITY,
					  A.CONFIRM_FLAG,
					  DECODE(A.CONFIRM_FLAG,0,'未确认',1,'已通过','已否决') CONFIRM_FLAG_NAME,
					  A.CONFIRM_OPITION,
					  GET_CODE_NAME(D.PRESENT_ID) PRESENT_ID,
					   D.QUENTITY,
					   D.PRESENT_OBJECT,
					  A.REASON,
					  TO_CHAR(A.USE_DATE,'YYYY-MM-DD') USE_DATE,
					  A.REMARK,
					  TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD') CREATE_DATE,
					  A.CREATED_BY,
					  B.EMPID,
					  B.CHINESENAME,
					  GET_DEPT_NAME(B.DEPTID) DEPT_NAME,
					  (SELECT MAX(C.AFFIRM_FLAG) FROM GA_PRESENT_AFFIRM C WHERE C.APPLY_NO = A.SEQ_NO) DELETE_OP_FLAG,
					  (SELECT C.AFFIRM_FLAG FROM GA_PRESENT_AFFIRM C WHERE C.APPLY_NO = A.SEQ_NO AND C.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRM_FLAG,
					  (SELECT DISTINCT C.SEQ_NO FROM GA_PRESENT_AFFIRM C WHERE C.APPLY_NO = A.SEQ_NO AND C.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRM_NO,
					  (SELECT DISTINCT C.AFFIRM_OPITION FROM GA_PRESENT_AFFIRM C WHERE C.APPLY_NO = A.SEQ_NO AND C.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRM_OPITION,
					  (SELECT DISTINCT C.AFFIRM_LEVEL FROM GA_PRESENT_AFFIRM C WHERE C.APPLY_NO = A.SEQ_NO AND C.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRM_LEVEL,
					  A.UPDATE_DATE,
					  A.UPDATED_BY,
					  C.CHINESENAME CONFIRMOR
				 FROM GA_PRESENT_APPLY A,
				 	  GA_PRESENT_APPLY_DETAIL D,
					  HR_EMPLOYEE B,
					  HR_EMPLOYEE C
				WHERE A.SEQ_NO = D.APPLY_NO
				  AND A.CREATED_BY = B.PERSON_ID
				  AND A.UPDATED_BY = C.PERSON_ID(+)
				  AND A.ACTIVITY = 1
	  ]]>

		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    A.SEQ_NO = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
		            EXISTS (SELECT SAD.ADMIN_DEPTID
					          FROM SY_ADMIN_DEPTID SAD,
					          	   SY_ADMIN SA
					         WHERE SAD.ADMIN_NO = SA.ADMINNO
					           AND SA.ADMINID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
					           AND SAD.ADMIN_DEPTID = B.DEPTID)
			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpnyId">
			<![CDATA[
				 B.cpny_id=#cpnyId:VARCHAR#
				]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="SEQ_NO">
			<![CDATA[
			 		 A.SEQ_NO = #SEQ_NO:VARCHAR#
		    ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="startDate">
			<isNotEmpty prepend="" property="endDate">
				<![CDATA[
			 		 TO_CHAR(A.CREATE_DATE,'YYYY-MM-DD') BETWEEN #startDate:VARCHAR# AND #endDate:VARCHAR#
		    ]]>
			</isNotEmpty>

		</isNotEmpty>

		<isNotEmpty prepend="AND" property="empId">
			<![CDATA[
			 		 (A.CREATED_BY = #personId:VARCHAR#
			 		  OR
			 		  B.EMPID = #empId:VARCHAR#
			 		  )
		    ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
			       (
			   		   B.EMPID LIKE #key:VARCHAR# || '%'
			   		OR B.CHINESENAME LIKE #key:VARCHAR# || '%'
			   		OR UPPER(B.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%'
			   	    )
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="applicant">
			<![CDATA[
			 		 A.CREATED_BY = #applicant:VARCHAR#
		    ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="flag">
			<![CDATA[
			 		 A.CONFIRM_FLAG = DECODE(#flag:VARCHAR#,'ConfirmType001',0,'ConfirmType002',1,2)
		    ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="active">
			<![CDATA[
			 		 A.AFFIRM_FLAG = #active:NUMERIC#
		    ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="qryType">
			<isEqual property="qryType" compareValue="2" >
				<![CDATA[
				          A.SEQ_NO IN (	SELECT T.APPLY_NO
								          FROM GA_PRESENT_AFFIRM T
								         WHERE T.AFFIRM_FLAG = 0
										   AND T.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
								           AND (T.APPLY_NO IN (SELECT TT.APPLY_NO
									                             FROM GA_PRESENT_AFFIRM TT
									                            WHERE TT.APPLY_NO = T.APPLY_NO
									                              AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
									                              AND TT.AFFIRM_FLAG = 1
									                              AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1)
								                OR T.AFFIRM_LEVEL = '1'
								               )
				  					    )
			    ]]>
			</isEqual>
			<isEqual property="qryType" compareValue="1" >
				<![CDATA[
				          A.SEQ_NO IN (	SELECT T.APPLY_NO
								          FROM GA_PRESENT_AFFIRM T
								         WHERE T.AFFIRM_FLAG <> 0
										   AND T.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
								           AND (T.APPLY_NO IN (SELECT TT.APPLY_NO
									                             FROM GA_PRESENT_AFFIRM TT
									                            WHERE TT.APPLY_NO = T.APPLY_NO
									                              AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
									                              AND TT.AFFIRM_FLAG = 1
									                              AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1)
								                OR T.AFFIRM_LEVEL = '1'
								               )
				  					    )
			    ]]>
			</isEqual>
		</isNotEmpty>
		<![CDATA[
	  		ORDER BY A.CREATE_DATE desc
	  ]]>
	</select>

	<select id="expressAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			select A.APPLY_NO,
				   A.APPLYOR_ID,
				   A.SENDPERSON,
				   A.DEPTID,
				   A.CITYSENDTO,
				   A.POSTADDRESS,
				   A.EXPRESSTYPE,
				   A.APPLYDATE,
				   A.ISSEND,
				   A.POSTNUMBER,
				   A.SENDTOPERSON,
				   A.ISCONFIRM,
				   A.SENTDATE,
				   A.CONFIRMDATE,
				   A.NOTE,
				   A.ACTIVE,
				   A.POSTDESCRIPTION,
				   A.CONFIRORANDSENDOR,
				   A.COSTS,
				   A.CITYARRIVE,
				   A.CAUSE,
				   A.CONFIRMIDEA,
				   A.ISOVER_KG,
				   A.CITYSENDTO_S,
				   A.CITYSENDTO_Q,
				   A.CITYSENDTO_D,
				   A.CITYARRIVE_S,
				   A.CITYARRIVE_Q,
				   A.CITYARRIVE_D,
				   A.MOBILE_S,
				   A.MOBILE_A,
				   A.POST_CODE_S,
				   A.POST_CODE_A,
				   code.code_name,
				   hr.chinesename as sendpersonname,
				   v.deptname as deptname,
				   applyemp.chinesename as applyempname,
				   m.affirmoridea,
				   m.AFFIRM_LEVEL,
				   m.AFFIRM_FLAG,
				   m.GA_AFFIRM_NO AFFIRM_NO,
				   hr.empid as empid1,
				   applyemp.empid as empid2,
				   GET_CODE_NAME(a.EXP_TYPE) EXP_TYPE,
				   TO_CHAR(A.APPLYDATE ,'YYYY-MM-DD HH24:MI') APPLY_DATE
			  from ga_express_apply  a,
				   hr_employee       hr,
				   hr_employee       applyemp,
				   sy_code           code,
				   hr_department     v,
				   GA_EXPRESS_AFFIRM m,
				   (SELECT
						 GA_EXPRESS_AFFIRM.*,
						 UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
						 NVL(UP_AFFIRM.AFFIRM_FLAG,1) UP_AFFIRM_FLAG,
						 CASE
						 WHEN GA_EXPRESS_AFFIRM.AFFIRM_LEVEL=MAX_AFFIRM.MAX_LEVEL
						 THEN 1
						 ELSE 0
						 END AS MAX_LEVEL_FLAG
						 FROM
						 (SELECT GA_EXPRESS_AFFIRM.*,
							   GA_EXPRESS_AFFIRM.AFFIRM_LEVEL - 1 UP_LEVEL,
							   GA_EXPRESS_AFFIRM.AFFIRM_LEVEL + 1 NEXT_LEVEL
						  FROM GA_EXPRESS_AFFIRM) GA_EXPRESS_AFFIRM,
						  (SELECT  GA_EXPRESS_AFFIRM.APPLY_NO,GA_EXPRESS_AFFIRM.AFFIRM_LEVEL,GA_EXPRESS_AFFIRM.AFFIRMOR_ID,GA_EXPRESS_AFFIRM.AFFIRM_FLAG
						  FROM GA_EXPRESS_AFFIRM
						  ) UP_AFFIRM,
						  (SELECT  GA_EXPRESS_AFFIRM.APPLY_NO,MAX(GA_EXPRESS_AFFIRM.AFFIRM_LEVEL) MAX_LEVEL
						  FROM GA_EXPRESS_AFFIRM
						   GROUP BY GA_EXPRESS_AFFIRM.APPLY_NO ) MAX_AFFIRM
						   WHERE GA_EXPRESS_AFFIRM.APPLY_NO=UP_AFFIRM.APPLY_NO(+)
							AND GA_EXPRESS_AFFIRM.UP_LEVEL=UP_AFFIRM.AFFIRM_LEVEL(+)
							AND GA_EXPRESS_AFFIRM.APPLY_NO=MAX_AFFIRM.APPLY_NO(+)
							and GA_EXPRESS_AFFIRM.affirmor_id  in (
															SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
														 )) AFFIRM
			 where  a.applyor_id = applyemp.person_id(+)
			and  AFFIRM.UP_AFFIRM_FLAG=1 and a.apply_no = AFFIRM.APPLY_NO
			   and hr.person_id(+) = a.sendperson
			   and m.affirmor_id   in (
															SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
														 )
			 and m.apply_no = a.apply_no
			   and code.code_id(+) = a.expresstype
			   and v.deptid(+) = a.deptid
			   and a.apply_no in( select distinct t.apply_no from ga_express_affirm t where  t.activity='1'  and  t.affirmor_id   in (
															SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
														 )
   ]]>

		<isNotEqual prepend="" property="qryType" compareValue="0">
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁过的，无论是通过还是否决 -->
				<![CDATA[
				 t.affirm_flag<>0
		   		 ]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
				<![CDATA[
				 t.affirm_flag=0
		    	]]>
			</isEqual>
		</isNotEqual>
		<![CDATA[
   )
  ]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    A.APPLY_NO = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
		 (a.applyor_id LIKE  '%'||#key:VARCHAR# || '%'  or a.sendperson LIKE  '%'||#key:VARCHAR# || '%'  or hr.chinesename LIKE  '%'||#key:VARCHAR# || '%'  or hr.empid LIKE  '%'||#key:VARCHAR# || '%')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptid">
			<![CDATA[
		 a.deptid=#deptid:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[
		 a.applydate >= TO_DATE(#startDate:VARCHAR#,'YYYY-MM-DD')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="endDate">
			<![CDATA[
		 a.applydate <= TO_DATE(#endDate:VARCHAR#,'YYYY-MM-DD')+1
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpnyId">
			<![CDATA[
		 hr.cpny_id=#cpnyId:VARCHAR#
		]]>
		</isNotEmpty>


		<![CDATA[
 order by a.applydate desc
  ]]>
	</select>

	<select id="sealAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
				select t.documentno,
					hr.chinesename,
					hr.cpny_id,
					to_char(t.usedate,'yyyy-mm-dd') usedate,
					t.usesealtype sealtype,
					code.code_name,
					t.SELECTDEPTID as deptname,
					 CASE WHEN
					   T.islend=1
					   THEN '是'
					   ELSE '否'
					   END islend,
					t.APPLYORID,
					ad.deptname as applydeptname,
					t.useinformation,
					t.useshares,
					t.note,
					t.DRAFT_NO,
					t.isconfirm,
					AFFIRM.AFFIRM_FLAG as AFFIRM_FLAG,
					AFFIRM.GA_AFFIRM_NO AFFIRM_NO,
					T.ACTIVE,
					AFFIRM.AFFIRM_FLAG as AFFIRM_FLAG,
					t.FILENAME,
					t.FILEPATH,
					to_char(t.returndate, 'YYYY-MM-DD') as RETURNDATE
				from ga_seal_apply t ,hr_employee hr, sy_code code,hr_department ad,
				(SELECT GA_SEAL_AFFIRM.*,
							   UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
							   NVL(UP_AFFIRM.AFFIRM_FLAG, 1) UP_AFFIRM_FLAG,
							   CASE
								 WHEN GA_SEAL_AFFIRM.AFFIRM_LEVEL =
									  MAX_AFFIRM.MAX_LEVEL THEN
								  1
								 ELSE
								  0
							   END AS MAX_LEVEL_FLAG
						  FROM (SELECT GA_SEAL_AFFIRM.*,
									   GA_SEAL_AFFIRM.AFFIRM_LEVEL - 1 UP_LEVEL,
									   GA_SEAL_AFFIRM.AFFIRM_LEVEL + 1 NEXT_LEVEL
								  FROM GA_SEAL_AFFIRM) GA_SEAL_AFFIRM,
							   (SELECT GA_SEAL_AFFIRM.APPLY_NO,
									   GA_SEAL_AFFIRM.AFFIRM_LEVEL,
									   GA_SEAL_AFFIRM.AFFIRMOR_ID,
									   GA_SEAL_AFFIRM.AFFIRM_FLAG
								  FROM GA_SEAL_AFFIRM) UP_AFFIRM,
							   (SELECT GA_SEAL_AFFIRM.APPLY_NO,
									   MAX(GA_SEAL_AFFIRM.AFFIRM_LEVEL) MAX_LEVEL
								  FROM GA_SEAL_AFFIRM
								 GROUP BY GA_SEAL_AFFIRM.APPLY_NO) MAX_AFFIRM
						 WHERE GA_SEAL_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
						   AND GA_SEAL_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
						   AND GA_SEAL_AFFIRM.APPLY_NO = MAX_AFFIRM.APPLY_NO(+)
						   and GA_SEAL_AFFIRM.affirmor_id  in (
																SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
															 )) AFFIRM
				where t.applyorid=hr.person_id(+)
					 and t.applyordeptid=ad.deptid(+)
					 and t.usesealtype=code.code_id(+)
					 AND AFFIRM.UP_AFFIRM_FLAG=1
				   and t.DOCUMENTNO=AFFIRM.APPLY_NO
				   and t.DOCUMENTNO in
					   (select distinct a.apply_no
						  from GA_SEAL_AFFIRM a
						 where a.affirmor_id  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
           ]]>

		<isNotEqual prepend="" property="qryType" compareValue="0">
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁过的，无论是通过还是否决 -->
				<![CDATA[
				 a.affirm_flag<>0
		   		 ]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
				<![CDATA[
				 a.affirm_flag=0
		    	]]>
			</isEqual>
		</isNotEqual>
		<![CDATA[
   )
   ]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    t.documentno = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
		 (hr.chinesename LIKE  '%'||#key:VARCHAR# || '%'  or t.APPLYORID LIKE  '%'||#key:VARCHAR# || '%')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptid">
			<![CDATA[
		 t.APPLYORDEPTID=#deptid:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpnyId">
			<![CDATA[
		 ad.CPNY_ID=#cpnyId:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[
		 t.USEDATE>=to_date(#startDate:VARCHAR#,'yyyy-mm-dd')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="endDate">
			<![CDATA[
		 t.USEDATE<=to_date(#endDate:VARCHAR#,'yyyy-mm-dd')
		]]>
		</isNotEmpty>
		<![CDATA[
			 order by t.documentno desc
			  ]]>
	</select>

	<select id="tempCardAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
       select t.apply_no,
               decode(t.employee_type,'external','外来人员','Local','本社员工') employee_type,
               apply.chinesename applyer,
               de.deptname applyer_dept,
               t.user_name,
               t.user_business,
               to_char(t.start_date,'YYYY-MM-DD') start_date,
               to_char(t.end_date,'YYYY-MM-DD') end_date,
               replace(replace(replace(replace(replace(replace(replace(t.PERMISSIONS_TYPE,'10','韩餐'),'9','中餐'),'5','培训楼'),'4','研发楼'),'3','附楼'),'2','主楼'),'1','公司大门') PERMISSIONS_TYPE,
               to_char(t.apply_date, 'YYYY-MM-DD') apply_date,
               t.cpny_id,
               apply.email ,
               t.active,
               AFFIRM.GA_AFFIRM_NO AFFIRM_NO,
               AFFIRM.AFFIRM_FLAG,
               NVL(AFFIRM.AFFIRMOR_IDEA,'') AFFIRMOR_IDEA,
               AFFIRM.AFFIRM_LEVEL,
               AFFIRM.AFFIRMOR_ID,
               NVL(AFFIRM.UP_AFFIRM_FLAG,1) UP_AFFIRM_FLAG,
               AFFIRM.MAX_AFFIRM_FLAG

          from GA_TEMPCARD_APPLICATION t,hr_employee hr,hr_employee apply,hr_department de,
				  (SELECT GA_TEMPCARD_APPLICATION_AFFIRM.*,
						   UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
						   UP_AFFIRM.AFFIRM_FLAG UP_AFFIRM_FLAG,
						   CASE
							 WHEN GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL = MAX_AFFIRM.MAX_LEVEL THEN
							  1
							 ELSE
							  0
						   END AS MAX_AFFIRM_FLAG
							  FROM (SELECT GA_TEMPCARD_APPLICATION_AFFIRM.*,
										   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL - 1 UP_LEVEL
									  FROM GA_TEMPCARD_APPLICATION_AFFIRM) GA_TEMPCARD_APPLICATION_AFFIRM,
								   (SELECT GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO,
										   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL,
										   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRMOR_ID,
										   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_FLAG
									  FROM GA_TEMPCARD_APPLICATION_AFFIRM) UP_AFFIRM,
								   (SELECT GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO,
										   MAX(GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL) MAX_LEVEL
									  FROM GA_TEMPCARD_APPLICATION_AFFIRM
									 GROUP BY GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO) MAX_AFFIRM

				 WHERE GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
				   AND GA_TEMPCARD_APPLICATION_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
				   AND GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO = MAX_AFFIRM.APPLY_NO(+)
				   and GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRMOR_ID  in (
																SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
															 )
				 ) AFFIRM
						  where t.user_name=hr.person_id(+)
								and t.applyer=apply.person_id(+)
								and t.applyer_dept=de.deptid(+)
								and NVL(AFFIRM.UP_AFFIRM_FLAG,1)=1
								AND T.APPLY_NO=AFFIRM.APPLY_NO

		   ]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    t.apply_no = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEqual prepend="" property="qryType" compareValue="0">
			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁过的 -->
				<![CDATA[
				 AFFIRM.AFFIRM_FLAG=0
	]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁通过的 -->
				<![CDATA[
				 AFFIRM.AFFIRM_FLAG <> 0
	]]>
			</isEqual>
		</isNotEqual>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
		 (hr.Chinesename LIKE  '%'||#key:VARCHAR# || '%' or hr.empid  LIKE  '%'||#key:VARCHAR# || '%' or t.useror  LIKE  '%'||#key:VARCHAR# || '%'  )
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptid">
			<![CDATA[
		 t.applyer_dept=#deptid:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[
		 to_date(to_char(t.apply_date,'yyyy-mm-dd'),'yyyy-mm-dd') >=to_date(#startDate:VARCHAR#,'yyyy-mm-dd')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="endDate">
			<![CDATA[
		to_date(to_char(t.apply_date,'yyyy-mm-dd'),'yyyy-mm-dd') <=to_date(#endDate:VARCHAR#,'yyyy-mm-dd')
		]]>
		</isNotEmpty>
		<![CDATA[
     order by t.apply_date desc
    ]]>
	</select>

	<select id="visiterAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			   select t.ga_visiter_apply_id,
				       t.visiter_company,
	               t.visit_type,
	               t.visiter_contact_tel,
	               t.visit_intro_dept,
	               t.visit_place,
	               t.visit_count,
	               t.visiter_name,
	               t.visitor_type ,
	               t.expect_result,
	               t.reception_lead,
	               t.reception_act_phone,
	               t.note,
	               t.welcome_scr,
	               t.reception_office,
	               t.tea,
	               t.coffee,
	               t.advertising_video,
	               t.defend_facility,
	               t.interpret_facility,
	               t.shoot,
	               t.present,
	               t.lunch_repast,
	               t.restaurant,
	               t.fruit,
				   t.visiter_carnum,
				       t.visiter_objective,
				       t.visiter_date,
				       h.deptname,
				       t.active,
				       he.chinesename as play_applyChinesename,
              			 t.play_apply,
				       t.active,
				       t.apply_date,

               t.visiter_people_num,
               t.visiter_out_date,
               he1.chinesename,
               t.welcome,
               t.visiter_people_num,

               t.visiter_come_time,
               t.visiter_end_time,
               t.HUIYISHI_APPLYID,
               AFFIRM.AFFIRM_FLAG as AFFIRM_FLAG,
               AFFIRM.GA_AFFIRM_NO as AFFIRM_NO,
               m.affirmoridea
				  from ga_visiter_apply t,
				  ga_visiter_apply_affirm m,
				       hr_department    h,

				       hr_employee      he,

               hr_employee      he1,
               (SELECT
 visiter_apply_affirm.*,
 UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
 NVL(UP_AFFIRM.AFFIRM_FLAG,1) UP_AFFIRM_FLAG,
 CASE
 WHEN visiter_apply_affirm.AFFIRM_LEVEL=MAX_AFFIRM.MAX_LEVEL
 THEN 1
 ELSE 0
 END AS MAX_LEVEL_FLAG
 FROM
 (SELECT ga_visiter_apply_affirm.*,
       ga_visiter_apply_affirm.AFFIRM_LEVEL - 1 UP_LEVEL,
       ga_visiter_apply_affirm.AFFIRM_LEVEL + 1 NEXT_LEVEL
  FROM ga_visiter_apply_affirm) visiter_apply_affirm,
  (SELECT  ga_visiter_apply_affirm.APPLY_NO,ga_visiter_apply_affirm.AFFIRM_LEVEL,ga_visiter_apply_affirm.AFFIRMOR_ID,ga_visiter_apply_affirm.AFFIRM_FLAG
  FROM ga_visiter_apply_affirm
  ) UP_AFFIRM,
  (SELECT  ga_visiter_apply_affirm.APPLY_NO,MAX(ga_visiter_apply_affirm.AFFIRM_LEVEL) MAX_LEVEL
  FROM ga_visiter_apply_affirm
   GROUP BY ga_visiter_apply_affirm.APPLY_NO ) MAX_AFFIRM
   WHERE visiter_apply_affirm.APPLY_NO=UP_AFFIRM.APPLY_NO(+)
    AND visiter_apply_affirm.UP_LEVEL=UP_AFFIRM.AFFIRM_LEVEL(+)
    AND visiter_apply_affirm.APPLY_NO=MAX_AFFIRM.APPLY_NO(+)
    and visiter_apply_affirm.affirmor_id  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRM

				 where t.front_dept = h.deptid(+)
				   and he.person_id (+)= t.play_apply
				   and t.ga_visiter_apply_id in (select distinct a.apply_no from ga_visiter_apply_affirm a where a.affirmor_id  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
				   ]]>


		<isNotEqual prepend="" property="qryType" compareValue="0">
			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁过的 -->
				<![CDATA[
				 a.affirm_flag=0
	]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁通过的 -->
				<![CDATA[
				 a.affirm_flag<>0
	]]>
			</isEqual>
		</isNotEqual>
		<![CDATA[
   )
  ]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    t.ga_visiter_apply_id = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
		 (t.play_apply LIKE  '%'||#key:VARCHAR# || '%'   or he.chinesename LIKE  '%'||#key:VARCHAR# || '%')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptid">
			<![CDATA[
		 t.front_dept=#deptid:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[
		 to_date(t.VISITER_DATE,'yyyy-mm-dd') >= to_date(#startDate:VARCHAR#,'YYYY-MM-DD')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="endDate">
			<![CDATA[
		 to_date(t.VISITER_DATE,'yyyy-mm-dd') <= to_date(#endDate:VARCHAR#,'YYYY-MM-DD')
		]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="cpnyId">
			<![CDATA[
		 h.cpny_id=#cpnyId:VARCHAR#
		]]>
		</isNotEmpty>

		<![CDATA[
                   and he1.person_id(+) = t.front_emp_id
				   and t.ga_visiter_apply_id=AFFIRM.APPLY_NO
				   AND AFFIRM.UP_AFFIRM_FLAG=1
				      and t.ga_visiter_apply_id = m.apply_no
   					and m.affirmor_id  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )

				 order by t.ga_visiter_apply_id desc
	  	]]>
	</select>

	<select id="visaAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			select t.documentno,
			  hr.chinesename,
			  hr.cpny_id,
			  to_char(t.usefdate,'yyyy-mm-dd') usefdate,
			  to_char(t.usetdate,'yyyy-mm-dd') usetdate,
				 CASE WHEN
				   t.usevisatype=1
				   THEN '多次'
				   ELSE '单次'
				   END  sealtype,
			  t.SELECTDEPTID as deptname,
				 CASE WHEN
				   T.islend=1
				   THEN '加急（2个工作日）'
				   ELSE '普通（10个工作日）'
				   END islend,
			  t.islend islendCode,
			  t.APPLYORID,
			  ad.deptname as applydeptname,
			  t.useinformation,
			  t.useshares,
			  t.note,
			  t.DRAFT_NO,
			  t.isconfirm,
			  AFFIRM.AFFIRM_FLAG as AFFIRM_FLAG,
			  T.ACTIVE,
				AFFIRM.AFFIRM_FLAG as AFFIRM_FLAG,
				AFFIRM.GA_AFFIRM_NO as AFFIRM_NO,
				t.FILENAME,
				t.FILEPATH,
				to_char(t.returndate, 'YYYY-MM-DD') as RETURNDATE,
				to_char(t.APPLYDATE, 'YYYY-MM-DD') as APPLYDATE
			from ga_visa_apply t ,hr_employee hr, hr_department ad,
			(SELECT GA_VISA_AFFIRM.*,
						   UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
						   NVL(UP_AFFIRM.AFFIRM_FLAG, 1) UP_AFFIRM_FLAG,
						   CASE
							 WHEN GA_VISA_AFFIRM.AFFIRM_LEVEL =
								  MAX_AFFIRM.MAX_LEVEL THEN
							  1
							 ELSE
							  0
						   END AS MAX_LEVEL_FLAG
					  FROM (SELECT GA_VISA_AFFIRM.*,
								   GA_VISA_AFFIRM.AFFIRM_LEVEL - 1 UP_LEVEL,
								   GA_VISA_AFFIRM.AFFIRM_LEVEL + 1 NEXT_LEVEL
							  FROM GA_VISA_AFFIRM) GA_VISA_AFFIRM,
						   (SELECT GA_VISA_AFFIRM.APPLY_NO,
								   GA_VISA_AFFIRM.AFFIRM_LEVEL,
								   GA_VISA_AFFIRM.AFFIRMOR_ID,
								   GA_VISA_AFFIRM.AFFIRM_FLAG
							  FROM GA_VISA_AFFIRM) UP_AFFIRM,
						   (SELECT GA_VISA_AFFIRM.APPLY_NO,
								   MAX(GA_VISA_AFFIRM.AFFIRM_LEVEL) MAX_LEVEL
							  FROM GA_VISA_AFFIRM
							 GROUP BY GA_VISA_AFFIRM.APPLY_NO) MAX_AFFIRM
					 WHERE GA_VISA_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
					   AND GA_VISA_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
					   AND GA_VISA_AFFIRM.APPLY_NO = MAX_AFFIRM.APPLY_NO(+)
					   and GA_VISA_AFFIRM.affirmor_id  in (
															SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
														 )       ) AFFIRM
			where t.applyorid=hr.person_id(+)
			   and t.applyordeptid=ad.deptid(+)
			   AND AFFIRM.UP_AFFIRM_FLAG=1
			   and t.DOCUMENTNO=AFFIRM.APPLY_NO
			   and t.DOCUMENTNO in
				   (select distinct a.apply_no
					  from GA_VISA_AFFIRM a
					 where a.affirmor_id  in (
															SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
														 )
           ]]>


		<isNotEqual prepend="" property="qryType" compareValue="0">
			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁过的 -->
				<![CDATA[
				 a.affirm_flag=0
	]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁通过的 -->
				<![CDATA[
				 a.affirm_flag<>0
	]]>
			</isEqual>
		</isNotEqual>
		<![CDATA[
   )
   ]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    t.documentno = #applyNo#
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
		 (hr.chinesename LIKE  '%'||#key:VARCHAR# || '%'  or t.APPLYORID LIKE  '%'||#key:VARCHAR# || '%')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptid">
			<![CDATA[
		 t.APPLYORDEPTID=#deptid:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpnyId">
			<![CDATA[
		 ad.CPNY_ID=#cpnyId:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[
		 t.USEFDATE>=to_date(#startDate:VARCHAR#,'yyyy-mm-dd')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="endDate">
			<![CDATA[
		 t.USEFDATE<=to_date(#endDate:VARCHAR#,'yyyy-mm-dd')
		]]>
		</isNotEmpty>
		<![CDATA[
 order by t.documentno desc
  ]]>
	</select>

	<select id="evsAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
	        SELECT EV_DETAIL_APPLY.APPLY_NO AS no,
			       HR_EMPLOYEE.EMPID AS empId,
			       HR_EMPLOYEE.PERSON_ID,
			       HR_EMPLOYEE.CPNY_ID,
			       HR_EMPLOYEE.CHINESENAME AS chineseName,
			       HR_EMPLOYEE.deptname AS DEPTNAME,
			       GET_CODE_NAME(HR_EMPLOYEE.STATUS_CODE) as STATUS,
			       S.CODE_NAME POST_CODE_NAME,


       (SELECT C.AFFIRM_FLAG FROM EV_AFFIRM C WHERE C.APPLY_NO = EV_DETAIL_APPLY.APPLY_NO AND C.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRM_FLAG,
			(SELECT  MAX(C.EV_AFFIRM_NO) FROM EV_AFFIRM C WHERE C.APPLY_NO = EV_DETAIL_APPLY.APPLY_NO AND C.AFFIRMOR_ID   in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )) AFFIRM_NO,


			       EV_DETAIL_APPLY.EVALUATE_MONTH,
			       EV_DETAIL_APPLY.DEPTID,
			       EV_DETAIL_APPLY.POSITION AS POST_CODE,
			       EV_DETAIL_APPLY.AMOUNT,
			       EV_DETAIL_APPLY.PLACE,
			       EV_DETAIL_APPLY.LAST_MONTH_PLACE,
			       EV_DETAIL_APPLY.LAST_MONTH_AMOUNT,
			       EV_DETAIL_APPLY.ACTIVITY,
			       EV_DETAIL_APPLY.REMARK,
			       EV_DETAIL_APPLY.Total,
			       EV_DETAIL_APPLY.ITEM1,
			       EV_DETAIL_APPLY.ITEM2,
			       EV_DETAIL_APPLY.ITEM3,
			       EV_DETAIL_APPLY.ITEM4,
			       EV_DETAIL_APPLY.ITEM5,
			       EV_DETAIL_APPLY.ITEM6,
			       EV_DETAIL_APPLY.ITEM7,
			       EV_DETAIL_APPLY.ITEM8,
			       EV_DETAIL_APPLY.ITEM9,
			       EV_DETAIL_APPLY.ITEM10,
			       EV_DETAIL_APPLY.ITEM11,
			       EV_DETAIL_APPLY.ITEM12,
			       EV_DETAIL_APPLY.ITEM13,
			       EV_DETAIL_APPLY.ITEM14,
			       EV_DETAIL_APPLY.ITEM15,
			       EV_DETAIL_APPLY.ITEM16,
			       EV_DETAIL_APPLY.ITEM17,
			       EV_DETAIL_APPLY.ITEM18,
			       EV_DETAIL_APPLY.ITEM19,
			       EV_DETAIL_APPLY.ITEM20,
			       EV_DETAIL_APPLY.ITEM21,
			       EV_DETAIL_APPLY.ITEM22,
			       EV_DETAIL_APPLY.ITEM23,
			       EV_DETAIL_APPLY.ITEM24,
			       EV_DETAIL_APPLY.ITEM25,
			       EV_DETAIL_APPLY.ITEM26,
			       EV_DETAIL_APPLY.ITEM27,
			       EV_DETAIL_APPLY.ITEM28,
			       EV_DETAIL_APPLY.ITEM29,
			       EV_DETAIL_APPLY.ITEM30,
			       EV_DETAIL_APPLY.ITEM31,
			       EV_DETAIL_APPLY.ITEM32,
			       EV_DETAIL_APPLY.ITEM33,
			       EV_DETAIL_APPLY.ITEM34,
			       EV_DETAIL_APPLY.ITEM35,
			       EV_DETAIL_APPLY.ITEM36,
			       EV_DETAIL_APPLY.ITEM37,
			       EV_DETAIL_APPLY.ITEM38,
			       EV_DETAIL_APPLY.ITEM39,
			       EV_DETAIL_APPLY.ITEM40,
			       EV_DETAIL_APPLY.ITEM41,
			       EV_DETAIL_APPLY.ITEM42,
			       EV_DETAIL_APPLY.ITEM43,
			       EV_DETAIL_APPLY.ITEM44,
			       EV_DETAIL_APPLY.ITEM45,
			       EV_DETAIL_APPLY.ITEM46,
			       EV_DETAIL_APPLY.ITEM47,
			       EV_DETAIL_APPLY.ITEM48,
			       EV_DETAIL_APPLY.ITEM49,
			       EV_DETAIL_APPLY.ITEM50,
			       EV_DETAIL_APPLY.ITEM51,
			       EV_DETAIL_APPLY.ITEM52,
			       EV_DETAIL_APPLY.ITEM53,
			       EV_DETAIL_APPLY.ITEM54,
			       EV_DETAIL_APPLY.ITEM55,
			       EV_DETAIL_APPLY.ITEM56,
			       EV_DETAIL_APPLY.ITEM57,
			       EV_DETAIL_APPLY.ITEM58,
			       EV_DETAIL_APPLY.ITEM59,
			       EV_DETAIL_APPLY.ITEM60,
			       EV_DETAIL_APPLY.ITEM61,
			       EV_DETAIL_APPLY.ITEM62,
			       EV_DETAIL_APPLY.ITEM0
			  FROM EV_DETAIL_APPLY,
			       EV_HR_EMP_V HR_EMPLOYEE,
			       SY_CODE S
			 WHERE EV_DETAIL_APPLY.EMPID = HR_EMPLOYEE.PERSON_ID
			   AND HR_EMPLOYEE.POST_CODE = S.CODE_ID
			   AND EV_DETAIL_APPLY.ACTIVITY <> -1
	   ]]>

		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    EV_DETAIL_APPLY.APPLY_NO = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptId">
			<![CDATA[
					  EV_DETAIL_APPLY.DEPTID = #deptId#
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="qryType">
			<isEqual property="qryType" compareValue="2" >
				<![CDATA[
				EXISTS
				 (SELECT 1
						  FROM EV_AFFIRM T
						 WHERE T.APPLY_NO = EV_DETAIL_APPLY.APPLY_NO
						   AND T.AFFIRM_FLAG = 0
						   AND T.AFFIRMOR_ID in
							   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE  KO_PERSON_ID = #empid#)
						   AND (EXISTS (SELECT 1
										  FROM EV_AFFIRM TT
										 WHERE TT.APPLY_NO = T.APPLY_NO
										   AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
										   AND TT.AFFIRM_FLAG = 1
										   AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1) OR
								T.AFFIRM_LEVEL = '1'))
			    ]]>
			</isEqual>
			<isEqual property="qryType" compareValue="1" >
				<![CDATA[
					EXISTS
					 (SELECT 1
							  FROM EV_AFFIRM T
							 WHERE T.APPLY_NO = EV_DETAIL_APPLY.APPLY_NO
							   AND T.AFFIRM_FLAG <> 0
							   AND T.AFFIRMOR_ID in
								   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#)
							   AND (EXISTS (SELECT 1
											  FROM EV_AFFIRM TT
											 WHERE TT.APPLY_NO = T.APPLY_NO
											   AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
											   AND TT.AFFIRM_FLAG = 1
											   AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1) OR
									T.AFFIRM_LEVEL = '1'))
			    ]]>
			</isEqual>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
			       (
			   		   HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%'
			   		OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%'
			   		OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%'
			   	    )
		]]>
		</isNotEmpty>

		<![CDATA[
		      		ORDER BY  EV_DETAIL_APPLY.EVALUATE_MONTH DESC,EV_DETAIL_APPLY.DEPTID,EV_DETAIL_APPLY.PLACE
		    ]]>
	</select>

	<select id="evsAffirmDept" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
	        SELECT EV_DETAIL_APPLY.DEPTID,
	        	   GET_DEPT_NAME(EV_DETAIL_APPLY.DEPTID) DEPTNAME,
	        	   COUNT(1) CNT
			  FROM EV_DETAIL_APPLY
			 WHERE EV_DETAIL_APPLY.ACTIVITY <> -1
			   AND  EXISTS
				 (SELECT 1
						  FROM EV_AFFIRM T
						 WHERE T.APPLY_NO = EV_DETAIL_APPLY.APPLY_NO
						   AND T.AFFIRM_FLAG = 0
						   AND T.AFFIRMOR_ID in
							   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE  KO_PERSON_ID = #empid#)
						   AND (EXISTS (SELECT 1
										  FROM EV_AFFIRM TT
										 WHERE TT.APPLY_NO = T.APPLY_NO
										   AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
										   AND TT.AFFIRM_FLAG = 1
										   AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1) OR
								T.AFFIRM_LEVEL = '1'))
			   GROUP BY EV_DETAIL_APPLY.DEPTID,
						GET_DEPT_NAME(EV_DETAIL_APPLY.DEPTID)
			   ORDER BY EV_DETAIL_APPLY.DEPTID
		    ]]>
	</select>

	<!-- NEW retrieve Leave affirm list information -->
	<select id="evsResultAffirm" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT

             evs_setupcode.SETUPCODENO AS pkNo1,
                h.chinesename ,

               EVS_CODE_AFFIRM.CODE_FLAG codeflag,
               EVS_CODE_AFFIRM.AFFIRMOR_ID,
               EVS_CODE_AFFIRM.AFFIRM_LEVEL AS affirmLevel,
               EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO AS AFFIRM_NO,
               EVS_CODE_AFFIRM.AFFIRM_FLAG AS affirm_flag,
               EVS_CODE_AFFIRM.AFFIRM_REMARKS AS remark,
               NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) AS up_flag,
               NVL(EVS_CODE_AFFIRM.NEXT_AFFIRM_FLAG, 0) AS next_flag,
               NVL(EVS_CODE_AFFIRM.MAX_LEVEL_FLAG, 0) AS maxLevel_flag,
               MAX_AFFIRMOR_FLAG.AFFIRM_FLAG AS max_affirm_flag,

               evs_setupcode.CRAFT,
               evs_setupcode.LINE,
               evs_setupcode.JOBCONTENT,
               evs_setupcode.EV_PERIOD_ID,
               evs_setupcode.PROFICIENCY,
               evs_setupcode.OPERATIONCOM,
               evs_setupcode.QUALITYOFWORK,
               evs_setupcode.STANDARDACTION,
               evs_setupcode.COMPOSITE ,

               evs_setupcode.SKILLLEVEL,
               evs_setupcode.REMARK,
               evs_setupcode.SHEOPERCYQ,
               evs_setupcode.QUALIFICATION,
               evs_setupcode.SKILLSCORE,
                evs_setupcode.PURPOSE,
               evs_setupcode.SUMSCORE,
               evs_setupcode.CONFIRMDATE,
               evs_setupcode.PROVEBY,
               evs_setupcode.PROVEDATE,
               evs_setupcode.STATUS

          FROM hr_employee h,evs_setupcode,
               (SELECT EVS_CODE_AFFIRM.*,
                       UP_AFFIRM.AFFIRM_FLAG AS UP_AFFIRM_FLAG,
                       UP_AFFIRM.AFFIRMOR_ID AS UP_AFFIRMOR_ID,
                       NEXT_AFFIRM.AFFIRM_FLAG AS NEXT_AFFIRM_FLAG,
                       (CASE
                         WHEN EVS_CODE_AFFIRM.AFFIRM_LEVEL = ESS_AFFIRM_MAX_LEVEL.MAXLEVEL THEN
                          1
                         ELSE
                          0
                       END) MAX_LEVEL_FLAG
                  FROM (SELECT EVS_CODE_AFFIRM.*,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL - 1 AS UP_LEVEL,
                               EVS_CODE_AFFIRM.AFFIRM_LEVEL + 1 AS NEXT_LEVEL
                          FROM EVS_CODE_AFFIRM where activity = '1'
                        ) EVS_CODE_AFFIRM,
                       (SELECT T.AR_DETAIL_NO,  MAX(T.AFFIRM_LEVEL) MAXLEVEL
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         GROUP BY T.AR_DETAIL_NO) ESS_AFFIRM_MAX_LEVEL,
                       (SELECT T.AR_DETAIL_NO,
                               T.AFFIRM_LEVEL,
                               T.AFFIRMOR_ID,
                               T.AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM T where activity = '1'
                         ) UP_AFFIRM,
                       (SELECT A.AR_DETAIL_NO,
                               MAX(A.AFFIRM_FLAG) AS AFFIRM_FLAG
                          FROM EVS_CODE_AFFIRM A  ,
                               (SELECT T.AR_DETAIL_NO, T.AFFIRMOR_ID, T.AFFIRM_LEVEL
                                  FROM EVS_CODE_AFFIRM T where activity = '1'
                                 AND T.AFFIRMOR_ID  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
                                ) B
                         WHERE
                              A.AR_DETAIL_NO = B.AR_DETAIL_NO
                               and A.activity = '1'
                           AND A.AFFIRM_LEVEL > B.AFFIRM_LEVEL
                         GROUP BY A.AR_DETAIL_NO) NEXT_AFFIRM
                 WHERE
                    EVS_CODE_AFFIRM.AR_DETAIL_NO = UP_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = NEXT_AFFIRM.AR_DETAIL_NO(+)
                   AND EVS_CODE_AFFIRM.AR_DETAIL_NO = ESS_AFFIRM_MAX_LEVEL.AR_DETAIL_NO(+)
                   ) EVS_CODE_AFFIRM,

                 (SELECT EVS_CODE_AFFIRM.AFFIRM_FLAG, EVS_CODE_AFFIRM.AR_DETAIL_NO
                  FROM EVS_CODE_AFFIRM ,
                       (SELECT MAX(EVS_CODE_AFFIRM.AFFIRM_LEVEL),
                               MAX(EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO) AR_DETAIL_AFFIRM_NO
                          FROM EVS_CODE_AFFIRM where activity = '1'
                         GROUP BY EVS_CODE_AFFIRM.AR_DETAIL_NO) HH
                 WHERE EVS_CODE_AFFIRM.AR_DETAIL_AFFIRM_NO = HH.AR_DETAIL_AFFIRM_NO and EVS_CODE_AFFIRM.activity = '1') MAX_AFFIRMOR_FLAG
         WHERE evs_setupcode.evs_empid = h.person_id
           and   evs_setupcode.SETUPCODENO = MAX_AFFIRMOR_FLAG.AR_DETAIL_NO(+)
           AND evs_setupcode.SETUPCODENO = EVS_CODE_AFFIRM.AR_DETAIL_NO
           AND NVL(EVS_CODE_AFFIRM.UP_AFFIRM_FLAG, 1) = 1
           AND evs_setupcode.STATUS ='2'
          AND EVS_CODE_AFFIRM.AFFIRMOR_ID  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )

		]]>

		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    evs_setupcode.SETUPCODENO = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEqual prepend="" property="qryType" compareValue="0">
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁过的，无论是通过还是否决 -->
				<![CDATA[
		      		     EVS_CODE_AFFIRM.affirm_flag != 0
		    ]]>
			</isEqual>

			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 未决裁 -->
				<![CDATA[
		         EVS_CODE_AFFIRM.affirm_flag = 0
		    ]]>
			</isEqual>
		</isNotEqual>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
			       (
			   		   h.EMPID LIKE #key:VARCHAR# || '%'
			   		OR h.CHINESENAME LIKE #key:VARCHAR# || '%'
			   		OR UPPER(h.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%'
			   	    )
		]]>
		</isNotEmpty>
		<![CDATA[
					 ORDER BY evs_setupcode.CREATE_DATE DESC
			]]>
	</select>

	<select id="login" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT HR.KO_PERSON_ID EMPID
			  FROM SY_ADMIN SY, HR_EMPLOYEE HR
			 WHERE SY.ADMINID = HR.PERSON_ID
			   AND HR.STATUS_CODE <> 'EmpStatus3'
			   AND HR.AD_USER_ID = #username#
			   AND SY.PASSWORD = #password#
		]]>
	</select>

	<select id="loginForAd" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT MAX(HR.KO_PERSON_ID) EMPID
			  FROM SY_ADMIN SY, HR_EMPLOYEE HR
			 WHERE SY.ADMINID = HR.PERSON_ID
			   AND HR.STATUS_CODE <> 'EmpStatus3'
			   AND HR.AD_USER_ID = #username#
		]]>
	</select>

	<select id="checkPassword" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT HR.KO_PERSON_ID EMPID
			  FROM SY_ADMIN SY, HR_EMPLOYEE HR
			 WHERE SY.ADMINID = HR.PERSON_ID
			   AND HR.STATUS_CODE <> 'EmpStatus3'
			   AND HR.KO_PERSON_ID = #username#
			   AND SY.PASSWORD = #password#
		]]>
	</select>

	<select id="loginForWorker" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT HR.KO_PERSON_ID EMPID
			  FROM SY_ADMIN SY, HR_EMPLOYEE HR
			 WHERE SY.ADMINID = HR.PERSON_ID
			   AND HR.STATUS_CODE <> 'EmpStatus3'
			   AND HR.KO_PERSON_ID = #username#
			   AND SY.PASSWORD = #password#
		]]>
	</select>

	<!--获取登录信息-->
	<select id="getLoginInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT USERNAME,HR.CHINESENAME, PASSWORD
			  FROM SY_ADMIN SY,HR_EMPLOYEE HR
			 WHERE SY.ADMINID = HR.PERSON_ID
			   AND HR.STATUS_CODE <> 'EmpStatus3'
		]]>
	</select>

	<!--法人列表-->
	<select id="getCpnyList" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT HR.CPNY_ID, SY.CODE_NAME
			  FROM HR_EMPLOYEE HR, SY_CODE SY
			 WHERE HR.CPNY_ID = SY.CODE_ID
			   AND HR.KO_PERSON_ID = #username#
			   AND HR.STATUS_CODE <> 'EmpStatus3'
			   AND HR.DATE_LEFT IS NULL
			 ORDER BY AD_USER_ID, CALC_FLAG DESC
		]]>
	</select>

	<!--代码列表-->
	<select id="getCodeList" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT CODE_NO,
				   CODE_ID,
				   CODE_NAME
			  FROM SY_CODE
			 WHERE PARENT_CODE = #parentCode#
			   AND ACTIVITY = 1

		]]>
		<isNotEmpty prepend="AND" property="cpnyId">
			<![CDATA[
			   ( CPNY_ID = #cpnyId# OR CPNY_ID IS NULL)
			]]>
		</isNotEmpty>
		<![CDATA[
			 ORDER BY CODE_ID
		]]>
	</select>

	<!--获取用户信息-->
	<select id="getUserInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT HR.EMPID,
				   HR.CPNY_ID,
				   HR.CHINESENAME,
				   HR.PERSON_ID,
				   HR.DEPTID,
				   GET_DEPT_NAME(HR.DEPTID) DEPT_NAME,
				   HR.POST_CODE,
				   GET_CODE_NAME(HR.POST_CODE) POST_CODE_NAME,
				   HR.EMAIL,
				   TO_CHAR(HR.DATE_STARTED,'YYYY-MM-DD') DATE_STARTED,
				   TO_CHAR(HR.FIRST_ENTER_DATE,'YYYY-MM-DD') FIRST_ENTER_DATE,
				   (SELECT NVL(MAX(0),1) FROM dicc_hr.v_hr_employee_app APP WHERE APP.KO_PERSON_ID = HR.KO_PERSON_ID) IS_AD
			  FROM HR_EMPLOYEE HR
			 WHERE KO_PERSON_ID = #empid#
			   AND CPNY_ID = #cpnyId#
		]]>
	</select>

	<!--是否AD用户-->
	<select id="isAD" parameterClass="SimpleMap" resultClass="string">
		<![CDATA[
		   SELECT MAX(KO_PERSON_ID) FROM dicc_hr.v_hr_employee_app APP WHERE APP.KO_PERSON_ID = #username#
		]]>
	</select>

	<!--修改密码-->
	<update id="modifyPassword" parameterClass="SimpleMap" >
		<![CDATA[
			UPDATE SY_ADMIN SET PASSWORD = #newPassword# where ADMINID IN (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #username# )
		]]>
	</update>

	<!--重置密码-->
	<update id="resetPassword" parameterClass="SimpleMap" >
		<![CDATA[
			UPDATE SY_ADMIN SET PASSWORD = '123456'
		]]>
	</update>

	<!--获取基本信息，审批时使用-->
	<select id="getLeaveInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO,
			   ESS.LEAVE_FROM_TIME,
			   ESS.LEAVE_TO_TIME,
			   HR.CHINESENAME,
			   HR.CPNY_ID,
			   AFF.ESS_AFFIRM_NO AFFIRM_NO,
			   HR.EMPID,
			   TO_CHAR(ESS.LEAVE_FROM_TIME, 'YYYY-MM-DD')  AS FROM_DATE,
			   TO_CHAR(ESS.LEAVE_TO_TIME, 'YYYY-MM-DD')    AS TO_DATE,
			   TO_CHAR(ESS.LEAVE_FROM_TIME, 'HH24:MI')  AS FROM_TIME,
			   TO_CHAR(ESS.LEAVE_TO_TIME, 'HH24:MI')    AS TO_TIME
		  FROM ESS_AFFIRM AFF, ESS_LEAVE_APPLY_TB ESS, HR_EMPLOYEE HR
		 WHERE AFF.APPLY_NO = ESS.LEAVE_NO
		   AND AFF.AFFIRMOR_ID = HR.PERSON_ID
		   AND AFF.ESS_AFFIRM_NO in ( $affirmNo$ )
		   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>

	<!--获取加班信息-->
	<select id="getOtInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   AFF.ESS_AFFIRM_NO,
				   HR.EMPID,
				   ESS.OT_FROM_TIME AS OT_FROM_TIME,
				   TO_CHAR(ESS.APPLY_OT_DATE, 'YYYY-MM-DD ') AS OT_FROM_DATE,
				   TO_CHAR(ESS.APPLY_OT_DATE + ESS.APPLY_OT_FLAG, 'YYYY-MM-DD ') AS OT_TO_DATE,
       			   ESS.OT_TO_TIME AS OT_TO_TIME,
				   ESS.OT_DEDUCT_TIME,
				   CASE WHEN OT_LENGTH > 0
					       	    THEN OT_LENGTH
					       	    ELSE
					       (TO_DATE(TO_CHAR(ESS.APPLY_OT_DATE + ESS.APPLY_OT_FLAG,'YYYY-MM-DD ') || ESS.OT_TO_TIME,
					                'YYYY-MM-DD HH24:MI') - TO_DATE(TO_CHAR(ESS.APPLY_OT_DATE, 'YYYY-MM-DD ') || ESS.OT_FROM_TIME,
					                'YYYY-MM-DD HH24:MI')) * 24 - ESS.OT_DEDUCT_TIME
					            END AS OT_LENGTH
			  FROM ESS_AFFIRM AFF, ESS_APPLY_OT ESS, HR_EMPLOYEE HR
			 WHERE AFF.APPLY_NO = ESS.APPLY_OT_NO
			   AND AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.ESS_AFFIRM_NO in ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>

	<select id="getArInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.AR_DETAIL_NO APPLY_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   AFF.AR_DETAIL_AFFIRM_NO ESS_AFFIRM_NO,
				   HR.EMPID
			  FROM AR_DETAIL_AFFIRM AFF, AR_DETAIL_BACK ESS, HR_EMPLOYEE HR
			 WHERE AFF.AR_DETAIL_NO = ESS.AR_PK_NO
			   AND AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.AR_DETAIL_AFFIRM_NO in ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>

	<select id="getPresentInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO APPLY_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   AFF.SEQ_NO AFFIRM_NO,
				   HR.EMPID,
				   AFF.AFFIRM_LEVEL
			  FROM GA_PRESENT_AFFIRM AFF, HR_EMPLOYEE HR
			 WHERE AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.SEQ_NO IN ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>
	<select id="getExpressInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO APPLY_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   AFF.GA_AFFIRM_NO AFFIRM_NO,
				   HR.EMPID,
				   AFF.AFFIRM_LEVEL,
				   ESS.CITYSENDTO,
				   ESS.POSTDESCRIPTION,
				   B.CHINESENAME  APPLYOR_NAME,
				   ESS.APPLYOR_ID,
				   (SELECT CASE WHEN MAX(A.AFFIRM_LEVEL) = AFF.AFFIRM_LEVEL THEN
								1
								ELSE
								  0
								  END
					  FROM GA_EXPRESS_AFFIRM A
					 WHERE A.APPLY_NO = AFF.APPLY_NO
					   AND A.APPLY_TYPE = AFF.APPLY_TYPE) MAX_AFFIRM_FLAG
			  FROM GA_EXPRESS_AFFIRM AFF, GA_EXPRESS_APPLY ESS, HR_EMPLOYEE HR, HR_EMPLOYEE B
			 WHERE AFF.APPLY_NO = ESS.APPLY_NO
			   AND AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND B.PERSON_ID = ESS.APPLYOR_ID
			   AND AFF.GA_AFFIRM_NO IN ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>
	<select id="getSealInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO APPLY_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   AFF.GA_AFFIRM_NO AFFIRM_NO,
				   HR.EMPID,
				   AFF.AFFIRM_LEVEL,
				   B.PERSON_ID APPLYOR_ID,
				   B.CHINESENAME APPLYOR_NAME,
				   GET_DEPT_NAME(ESS.APPLYORDEPTID) APPLYDEPTNAME,
				   TO_CHAR(ESS.USEDATE, 'YYYY-MM-DD') USEDATE,
				   ESS.USEINFORMATION,
				   ESS.USESHARES,
				   GET_CODE_NAME(ESS.USESEALTYPE) SEALTYPE,

				   (SELECT CASE
							 WHEN MAX(A.AFFIRM_LEVEL) = AFF.AFFIRM_LEVEL THEN
							  1
							 ELSE
							  0
						   END
					  FROM GA_SEAL_AFFIRM A
					 WHERE A.APPLY_NO = AFF.APPLY_NO
					   AND A.APPLY_TYPE = AFF.APPLY_TYPE) MAX_AFFIRM_FLAG
			  FROM GA_SEAL_AFFIRM AFF, GA_SEAL_APPLY ESS, HR_EMPLOYEE HR, HR_EMPLOYEE B
			 WHERE AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.APPLY_NO = ESS.DOCUMENTNO
			   AND B.PERSON_ID = ESS.APPLYORID
			   AND AFF.GA_AFFIRM_NO IN ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>
	<select id="getTempCardInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO APPLY_NO,
				   AFF.GA_AFFIRM_NO AFFIRM_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   HR.EMPID,
				   AFF.AFFIRM_LEVEL,

				   B.PERSON_ID APPLYOR_ID,
				   B.CHINESENAME APPLYOR_NAME,
				   B.EMAIL APPLYOR_EMAIL,

				   TO_CHAR(ESS.APPLY_DATE, 'YYYY-MM-DD') APPLY_DATE,

				   (SELECT CASE
							 WHEN MAX(A.AFFIRM_LEVEL) = AFF.AFFIRM_LEVEL THEN
							  1
							 ELSE
							  0
						   END
					  FROM GA_TEMPCARD_APPLICATION_AFFIRM A
					 WHERE A.APPLY_NO = AFF.APPLY_NO
					   AND A.APPLY_TYPE = AFF.APPLY_TYPE) MAX_AFFIRM_FLAG
			  FROM GA_TEMPCARD_APPLICATION_AFFIRM AFF, GA_TEMPCARD_APPLICATION ESS, HR_EMPLOYEE HR, HR_EMPLOYEE B
			 WHERE AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.APPLY_NO = ESS.APPLY_NO
			   AND B.PERSON_ID = ESS.APPLYER
			   AND AFF.GA_AFFIRM_NO IN ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>
	<select id="getVisiterInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO APPLY_NO,
				   AFF.GA_AFFIRM_NO AFFIRM_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   HR.EMPID,
				   AFF.AFFIRM_LEVEL,

				   B.PERSON_ID APPLYOR_ID,
				   B.CHINESENAME APPLYOR_NAME,
				   B.EMAIL,

				   ESS.VISIT_COUNT,
				   ESS.VISITER_DATE,
				   ESS.VISITER_COME_TIME,
				   ESS.VISITER_END_TIME,

				   TO_CHAR(ESS.APPLY_DATE, 'YYYY-MM-DD') USEDATE,

				   (SELECT CASE
							 WHEN MAX(A.AFFIRM_LEVEL) = AFF.AFFIRM_LEVEL THEN
							  1
							 ELSE
							  0
						   END
					  FROM GA_VISITER_APPLY_AFFIRM A
					 WHERE A.APPLY_NO = AFF.APPLY_NO
					   AND A.APPLY_TYPE = AFF.APPLY_TYPE) MAX_AFFIRM_FLAG
			  FROM GA_VISITER_APPLY_AFFIRM AFF, GA_VISITER_APPLY ESS, HR_EMPLOYEE HR, HR_EMPLOYEE B
			 WHERE AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.APPLY_NO = ESS.GA_VISITER_APPLY_ID
			   AND B.PERSON_ID = ESS.PLAY_APPLY
			   AND AFF.GA_AFFIRM_NO IN ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>
	<select id="getVisaInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO APPLY_NO,
				   AFF.GA_AFFIRM_NO AFFIRM_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   HR.EMPID,
				   AFF.AFFIRM_LEVEL,

					   B.PERSON_ID APPLYOR_ID,
					   B.CHINESENAME APPLYOR_NAME,
					   GET_DEPT_NAME(ESS.APPLYORDEPTID) APPLYDEPTNAME,
							   TO_CHAR(ESS.APPLYDATE, 'YYYY-MM-DD') USEDATE,
							   ESS.USEINFORMATION,
							   ESS.USESHARES,
							   GET_CODE_NAME(ESS.USEVISATYPE) SEALTYPE,

				   (SELECT CASE
							 WHEN MAX(A.AFFIRM_LEVEL) = AFF.AFFIRM_LEVEL THEN
							  1
							 ELSE
							  0
						   END
					  FROM GA_VISA_AFFIRM A
					 WHERE A.APPLY_NO = AFF.APPLY_NO
					   AND A.APPLY_TYPE = AFF.APPLY_TYPE) MAX_AFFIRM_FLAG
			  FROM GA_VISA_AFFIRM AFF, GA_VISA_APPLY ESS, HR_EMPLOYEE HR, HR_EMPLOYEE B
			 WHERE AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.APPLY_NO = ESS.DOCUMENTNO
			   AND B.PERSON_ID = ESS.APPLYORID
			   AND AFF.GA_AFFIRM_NO IN ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>
	<select id="getEvaluateInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.APPLY_NO APPLY_NO,
       				AFF.EV_AFFIRM_NO AFFIRM_NO,
				   HR.CHINESENAME,
				   HR.CPNY_ID,
				   HR.EMPID,
				   AFF.AFFIRM_LEVEL,

					 ESS.REMARK,
					 ESS.TOTAL,
					 ESS.ITEM1,
					 ESS.ITEM2,
					 ESS.ITEM3,
					 ESS.ITEM4,
					 ESS.ITEM5,
					 ESS.ITEM6,
					 ESS.ITEM7,
					 ESS.ITEM8,
					 ESS.ITEM9,
					 ESS.ITEM10,
					 ESS.ITEM11,
					 ESS.ITEM12,
					 ESS.ITEM13,
					 ESS.ITEM14,
					 ESS.ITEM15,
					 ESS.ITEM16,
					 ESS.ITEM17,
					 ESS.ITEM18,
					 ESS.ITEM19,
					 ESS.ITEM20,
					 ESS.ITEM21,
					 ESS.ITEM22,
			       ESS.ITEM23,
			       ESS.ITEM24,
			       ESS.ITEM25,
			       ESS.ITEM26,
			       ESS.ITEM27,
			       ESS.ITEM28,
			       ESS.ITEM29,
			       ESS.ITEM30,
			       ESS.ITEM31,
			       ESS.ITEM32,
			       ESS.ITEM33,
			       ESS.ITEM34,
			       ESS.ITEM35,
			       ESS.ITEM36,
			       ESS.ITEM37,
			       ESS.ITEM38,
			       ESS.ITEM39,
			       ESS.ITEM40,
			       ESS.ITEM41,
			       ESS.ITEM42,
			       ESS.ITEM43,
			       ESS.ITEM44,
			       ESS.ITEM45,
			       ESS.ITEM46,
			       ESS.ITEM47,
			       ESS.ITEM48,
			       ESS.ITEM49,
			       ESS.ITEM50,
			       ESS.ITEM51,
			       ESS.ITEM52,
			       ESS.ITEM53,
			       ESS.ITEM54,
			       ESS.ITEM55,
			       ESS.ITEM56,
			       ESS.ITEM57,
			       ESS.ITEM58,
			       ESS.ITEM59,
			       ESS.ITEM60,
			       ESS.ITEM61,
			       ESS.ITEM62,
			       ESS.ITEM0
			  FROM EV_AFFIRM AFF, EV_DETAIL_APPLY ESS, HR_EMPLOYEE HR
			 WHERE AFF.APPLY_NO = ESS.APPLY_NO
			   AND AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.EV_AFFIRM_NO IN ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>

	<select id="getEvsResultInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT AFF.AR_DETAIL_NO APPLY_NO,
				   AFF.CODE_FLAG,
				   AFF.AR_DETAIL_AFFIRM_NO AFFIRM_NO,
				   HR.EMPID,
				   HR.CPNY_ID
			  FROM EVS_CODE_AFFIRM AFF,
				   HR_EMPLOYEE     HR
			 WHERE AFF.AFFIRMOR_ID = HR.PERSON_ID
			   AND AFF.AR_DETAIL_AFFIRM_NO IN ($affirmNo$)
			   AND HR.KO_PERSON_ID = #empid#
		]]>
	</select>

	<!--提醒信息个数-->
	<select id="getBadgesNum" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT (select count(1)
					  from ess_affirm t
					 where t.affirm_flag = 0
					   and ((t.apply_no in
						   (select tt.apply_no
								from ess_affirm tt
							   where tt.apply_no = t.apply_no
								 and tt.affirmor_id <> t.affirmor_id
								 and tt.affirm_flag = 1
								 and tt.affirm_level = t.affirm_level - 1
								 and tt.APPLY_TYPE = 'OtApply')) or
						   t.affirm_level = '1')
					   and t.apply_type = 'OtApply'
					   and t.affirmor_id in
						   (select person_id from hr_employee where KO_PERSON_ID = #empid#)) OT_CNT,
				   (select count(1)
					  from ess_affirm t
					 where t.affirm_flag = 0
					   and ((t.apply_no in
						   (select tt.apply_no
								from ess_affirm tt
							   where tt.apply_no = t.apply_no
								 and tt.affirmor_id <> t.affirmor_id
								 and tt.affirm_flag = 1
								 and tt.affirm_level = t.affirm_level - 1
								 and tt.APPLY_TYPE = 'LeaveApply')) or
						   t.affirm_level = '1')
					   and t.apply_type = 'LeaveApply'
					   and t.affirmor_id in
						   (select person_id from hr_employee where KO_PERSON_ID = #empid#)) LEAVE_CNT,

				   (SELECT COUNT(1)
					  FROM AR_DETAIL_BACK, HR_EMP_V HR_EMPLOYEE
					 WHERE AR_DETAIL_BACK.OPERATION = 'UPDATE'
					   AND AR_DETAIL_BACK.EMPID = HR_EMPLOYEE.PERSON_ID
					   AND EXISTS (SELECT 1
							  FROM AR_CALENDER A
							 WHERE A.CPNY_ID = HR_EMPLOYEE.CPNY_ID
							   AND A.AR_DATE_STR = AR_DETAIL_BACK.AR_DATE_STR
							   AND DECODE(HR_EMPLOYEE.EMP_DIFF_CODE,
										  'C_12067_1330308',
										  A.LOCK_FLAG_Z,
										  A.LOCK_FLAG_G) = 0)
					   AND EXISTS
					 (SELECT 1
							  FROM AR_DETAIL_AFFIRM T
							 WHERE T.AR_DETAIL_NO = AR_DETAIL_BACK.AR_PK_NO
							   AND T.AFFIRM_FLAG = 0
							   AND T.AFFIRMOR_ID in
								   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#)
							   AND (EXISTS (SELECT 1
											  FROM AR_DETAIL_AFFIRM TT
											 WHERE TT.AR_DETAIL_NO = T.AR_DETAIL_NO
											   AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
											   AND TT.AFFIRM_FLAG = 1
											   AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1) OR
									T.AFFIRM_LEVEL = '1'))) AR_DETAIL_CNT,


				   (SELECT COUNT(1)
					  FROM GA_VISITER_APPLY_AFFIRM T
					 WHERE T.AFFIRM_FLAG = 0
					   AND (T.APPLY_NO IN
						   (SELECT TT.APPLY_NO
							   FROM GA_VISITER_APPLY_AFFIRM TT
							  WHERE TT.APPLY_NO = T.APPLY_NO
								AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
								AND TT.AFFIRM_FLAG = 1
								AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1) OR
						   T.AFFIRM_LEVEL = '1')
					   AND T.AFFIRMOR_ID IN
						   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#)) VISITER_CNT,
				   (SELECT COUNT(1) CNT
					  FROM GA_PRESENT_APPLY A
					 WHERE A.ACTIVITY = 1
					   AND A.SEQ_NO IN
						   (SELECT T.APPLY_NO
							  FROM GA_PRESENT_AFFIRM T
							 WHERE T.AFFIRM_FLAG = 0
							   AND T.AFFIRMOR_ID IN
								   (SELECT PERSON_ID
									  FROM HR_EMPLOYEE
									 WHERE KO_PERSON_ID = #empid#)
							   AND (T.APPLY_NO IN
								   (SELECT TT.APPLY_NO
									   FROM GA_PRESENT_AFFIRM TT
									  WHERE TT.APPLY_NO = T.APPLY_NO
										AND TT.AFFIRMOR_ID <> T.AFFIRMOR_ID
										AND TT.AFFIRM_FLAG = 1
										AND TT.AFFIRM_LEVEL = T.AFFIRM_LEVEL - 1) OR
								   T.AFFIRM_LEVEL = '1'))) PRESENT_CNT,

				   (select count(a.apply_no)
					  from ga_express_apply a,
						   (SELECT GA_EXPRESS_AFFIRM.*,
								   UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
								   NVL(UP_AFFIRM.AFFIRM_FLAG, 1) UP_AFFIRM_FLAG,
								   CASE
									 WHEN GA_EXPRESS_AFFIRM.AFFIRM_LEVEL =
										  MAX_AFFIRM.MAX_LEVEL THEN
									  1
									 ELSE
									  0
								   END AS MAX_LEVEL_FLAG
							  FROM (SELECT GA_EXPRESS_AFFIRM.*,
										   GA_EXPRESS_AFFIRM.AFFIRM_LEVEL - 1 UP_LEVEL,
										   GA_EXPRESS_AFFIRM.AFFIRM_LEVEL + 1 NEXT_LEVEL
									  FROM GA_EXPRESS_AFFIRM) GA_EXPRESS_AFFIRM,
								   (SELECT GA_EXPRESS_AFFIRM.APPLY_NO,
										   GA_EXPRESS_AFFIRM.AFFIRM_LEVEL,
										   GA_EXPRESS_AFFIRM.AFFIRMOR_ID,
										   GA_EXPRESS_AFFIRM.AFFIRM_FLAG
									  FROM GA_EXPRESS_AFFIRM) UP_AFFIRM,
								   (SELECT GA_EXPRESS_AFFIRM.APPLY_NO,
										   MAX(GA_EXPRESS_AFFIRM.AFFIRM_LEVEL) MAX_LEVEL
									  FROM GA_EXPRESS_AFFIRM
									 GROUP BY GA_EXPRESS_AFFIRM.APPLY_NO) MAX_AFFIRM
							 WHERE GA_EXPRESS_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
							   AND GA_EXPRESS_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
							   AND GA_EXPRESS_AFFIRM.APPLY_NO = MAX_AFFIRM.APPLY_NO(+)
							   and GA_EXPRESS_AFFIRM.affirmor_id IN
								   (SELECT PERSON_ID
									  FROM HR_EMPLOYEE
									 WHERE KO_PERSON_ID = #empid#)) AFFIRM
					 where AFFIRM.UP_AFFIRM_FLAG = 1
					   and a.apply_no = AFFIRM.APPLY_NO
					   and a.apply_no in (select distinct t.apply_no
											from ga_express_affirm t
										   where t.activity = '1'
											 and t.affirmor_id IN
												 (SELECT PERSON_ID
													FROM HR_EMPLOYEE
												   WHERE KO_PERSON_ID = #empid#)
											 and t.affirm_flag = 0)) EXPRESS_CNT,
				   (select count(t.documentno) as documentno
					  from ga_seal_apply t,
						   hr_employee e,
						   (SELECT GA_SEAL_AFFIRM.*,
								   UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
								   NVL(UP_AFFIRM.AFFIRM_FLAG, 1) UP_AFFIRM_FLAG,
								   CASE
									 WHEN GA_SEAL_AFFIRM.AFFIRM_LEVEL =
										  MAX_AFFIRM.MAX_LEVEL THEN
									  1
									 ELSE
									  0
								   END AS MAX_LEVEL_FLAG
							  FROM (SELECT GA_SEAL_AFFIRM.*,
										   GA_SEAL_AFFIRM.AFFIRM_LEVEL - 1 UP_LEVEL,
										   GA_SEAL_AFFIRM.AFFIRM_LEVEL + 1 NEXT_LEVEL
									  FROM GA_SEAL_AFFIRM) GA_SEAL_AFFIRM,
								   (SELECT GA_SEAL_AFFIRM.APPLY_NO,
										   GA_SEAL_AFFIRM.AFFIRM_LEVEL,
										   GA_SEAL_AFFIRM.AFFIRMOR_ID,
										   GA_SEAL_AFFIRM.AFFIRM_FLAG
									  FROM GA_SEAL_AFFIRM) UP_AFFIRM,
								   (SELECT GA_SEAL_AFFIRM.APPLY_NO,
										   MAX(GA_SEAL_AFFIRM.AFFIRM_LEVEL) MAX_LEVEL
									  FROM GA_SEAL_AFFIRM
									 GROUP BY GA_SEAL_AFFIRM.APPLY_NO) MAX_AFFIRM
							 WHERE GA_SEAL_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
							   AND GA_SEAL_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
							   AND GA_SEAL_AFFIRM.APPLY_NO = MAX_AFFIRM.APPLY_NO(+)
							   and GA_SEAL_AFFIRM.affirmor_id IN
								   (SELECT PERSON_ID
									  FROM HR_EMPLOYEE
									 WHERE KO_PERSON_ID = #empid#)) AFFIRM
					 where AFFIRM.UP_AFFIRM_FLAG = 1
					   and t.DOCUMENTNO = AFFIRM.APPLY_NO
					   and e.person_id = t.applyorid
					   and t.DOCUMENTNO in (select distinct a.apply_no
											  from GA_SEAL_AFFIRM a
											 where a.affirmor_id IN
												   (SELECT PERSON_ID
													  FROM HR_EMPLOYEE
													 WHERE KO_PERSON_ID = #empid#)
											   and a.affirm_flag = 0)) SEAL_CNT,
				   (select count(t.documentno) as documentno
					  from ga_visa_apply t,
						   hr_employee e,
						   (SELECT GA_VISA_AFFIRM.*,
								   UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
								   NVL(UP_AFFIRM.AFFIRM_FLAG, 1) UP_AFFIRM_FLAG,
								   CASE
									 WHEN GA_VISA_AFFIRM.AFFIRM_LEVEL =
										  MAX_AFFIRM.MAX_LEVEL THEN
									  1
									 ELSE
									  0
								   END AS MAX_LEVEL_FLAG
							  FROM (SELECT GA_VISA_AFFIRM.*,
										   GA_VISA_AFFIRM.AFFIRM_LEVEL - 1 UP_LEVEL,
										   GA_VISA_AFFIRM.AFFIRM_LEVEL + 1 NEXT_LEVEL
									  FROM GA_VISA_AFFIRM) GA_VISA_AFFIRM,
								   (SELECT GA_VISA_AFFIRM.APPLY_NO,
										   GA_VISA_AFFIRM.AFFIRM_LEVEL,
										   GA_VISA_AFFIRM.AFFIRMOR_ID,
										   GA_VISA_AFFIRM.AFFIRM_FLAG
									  FROM GA_VISA_AFFIRM) UP_AFFIRM,
								   (SELECT GA_VISA_AFFIRM.APPLY_NO,
										   MAX(GA_VISA_AFFIRM.AFFIRM_LEVEL) MAX_LEVEL
									  FROM GA_VISA_AFFIRM
									 GROUP BY GA_VISA_AFFIRM.APPLY_NO) MAX_AFFIRM
							 WHERE GA_VISA_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
							   AND GA_VISA_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
							   AND GA_VISA_AFFIRM.APPLY_NO = MAX_AFFIRM.APPLY_NO(+)
							   and GA_VISA_AFFIRM.affirmor_id IN
								   (SELECT PERSON_ID
									  FROM HR_EMPLOYEE
									 WHERE KO_PERSON_ID = #empid#)) AFFIRM
					 where AFFIRM.UP_AFFIRM_FLAG = 1
					   and t.DOCUMENTNO = AFFIRM.APPLY_NO
					   and e.person_id = t.applyorid
					   and t.DOCUMENTNO in (select distinct a.apply_no
											  from GA_VISA_AFFIRM a
											 where a.affirmor_id IN
												   (SELECT PERSON_ID
													  FROM HR_EMPLOYEE
													 WHERE KO_PERSON_ID = #empid#)
											   and a.affirm_flag = 0)) VISA_CNT,
					(SELECT COUNT(A.APPLY_NO)
						  FROM GA_TEMPCARD_APPLICATION A,
							   (SELECT GA_TEMPCARD_APPLICATION_AFFIRM.*,
									   UP_AFFIRM.AFFIRMOR_ID UP_AFFIRMOR_ID,
									   NVL(UP_AFFIRM.AFFIRM_FLAG, 1) UP_AFFIRM_FLAG,
									   CASE
										 WHEN GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL = MAX_AFFIRM.MAX_LEVEL THEN
										  1
										 ELSE
										  0
									   END AS MAX_LEVEL_FLAG
								  FROM (SELECT GA_TEMPCARD_APPLICATION_AFFIRM.*,
											   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL - 1 UP_LEVEL,
											   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL + 1 NEXT_LEVEL
										  FROM GA_TEMPCARD_APPLICATION_AFFIRM) GA_TEMPCARD_APPLICATION_AFFIRM,
									   (SELECT GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO,
											   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL,
											   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRMOR_ID,
											   GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_FLAG
										  FROM GA_TEMPCARD_APPLICATION_AFFIRM) UP_AFFIRM,
									   (SELECT GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO,
											   MAX(GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRM_LEVEL) MAX_LEVEL
										  FROM GA_TEMPCARD_APPLICATION_AFFIRM
										 GROUP BY GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO) MAX_AFFIRM
								 WHERE GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO = UP_AFFIRM.APPLY_NO(+)
								   AND GA_TEMPCARD_APPLICATION_AFFIRM.UP_LEVEL = UP_AFFIRM.AFFIRM_LEVEL(+)
								   AND GA_TEMPCARD_APPLICATION_AFFIRM.APPLY_NO = MAX_AFFIRM.APPLY_NO(+)
								   and GA_TEMPCARD_APPLICATION_AFFIRM.AFFIRMOR_ID IN
									   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#)) AFFIRM
						 where AFFIRM.UP_AFFIRM_FLAG = 1
						   and a.apply_no = AFFIRM.APPLY_NO
						   and a.apply_no in
							   (select distinct t.APPLY_NO
								  from GA_TEMPCARD_APPLICATION_AFFIRM t
								 where t.ACTIVITY = '1'
								   and t.AFFIRMOR_ID IN
									   (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#)
								   and t.AFFIRM_FLAG = 0)) TEMP_CARD_CNT,
				(select count(1)
					from EV_AFFIRM t,EV_DETAIL_APPLY ev
				   where t.apply_no = ev.apply_no
				     and t.affirm_flag = 0
					 and ((t.apply_no in
					   (select tt.apply_no
						from EV_AFFIRM tt
						 where tt.apply_no = t.apply_no
						 and tt.affirmor_id <> t.affirmor_id
						 and tt.affirm_flag = 1
						 and tt.affirm_level = t.affirm_level - 1)) or
					   t.affirm_level = '1')
					 and t.affirmor_id in
					   (select person_id from hr_employee where KO_PERSON_ID = #empid#)
					 and ev.ACTIVITY <> -1) EV_CNT,

					(select count(1)
						from EVS_CODE_AFFIRM t
					   where t.affirm_flag = 0
						 and ((t.ar_detail_no in
						   (select tt.ar_detail_no
							from EVS_CODE_AFFIRM tt
							 where tt.ar_detail_no = t.ar_detail_no
							 and tt.affirmor_id <> t.affirmor_id
							 and tt.affirm_flag = 1
							 and tt.affirm_level = t.affirm_level - 1)) or
						   t.affirm_level = '1')
						 and t.affirmor_id in
						   (select person_id from hr_employee where KO_PERSON_ID = #empid#)) EVS_CNT
			  FROM DUAL
		]]>
	</select>

	<!--工资信息-->
	<select id="getPaInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT A.*,
				   (A.LEAVE_MINUS + SICK_MINUS) AS LEAVE_SICK_MINUS,
				   (NVL(A.HOLIDAY_MINUS,0)+NVL(A.HOLIDAY_MINUS_SHORT,0)+NVL(A.HOLIDAY_MINUS_LONG,0)) as HOLIDAY_MINUS_ALL
			  FROM PA_HISTORY A, PA_PROGRESS B
			 WHERE A.PA_MONTH = B.PA_MONTH_STR
			   AND A.CPNY_ID = B.CPNY_ID
			   AND A.ATTENDANCE_PERIOD_CODE = B.STAT_TYPE_CODE
			   AND B.PA_LOCK_FLAG = 1
			   AND B.PA_MONTH_STR = #PA_MONTH#
			   AND A.PERSON_ID  IN (SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #username# )
		]]>
	</select>

	<!--申请信息查看-->
	<select id="otApplyInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
				select ESS_APPLY.Person_Id AS person_id,
					       ESS_APPLY.APPLY_OT_NO AS otNo,
					       ESS_APPLY.APPLY_GROUP_NO AS applyGroupSeq,
					       ESS_APPLY.HREMPID AS empId,
					       ESS_APPLY.CHINESENAME AS chineseName,
					       ESS_APPLY.crechineseName AS crechineseName,
					       DE.DEPTNAME AS deptName,
					       FOURS.DEPTNAME AS fourthDeptName,
					       SY_POSITION.CODE_NAME AS position,
					       SY_GRADE_CODE.CODE_NAME AS postGradeCode,
					       SY_CODE.CODE_NAME AS otTypeName,
					       SY_CODE.CODE_ID AS otTypeCode,
					       TO_CHAR(ESS_APPLY.APPLY_OT_DATE - OT_NIGHT_FLAG, 'YYYY-MM-DD') AS otDate,
					       TO_CHAR(ESS_APPLY.APPLY_OT_DATE, 'YYYY-MM-DD ') ||
					       ESS_APPLY.OT_FROM_TIME AS otFromTime,
					       TO_CHAR(ESS_APPLY.APPLY_OT_DATE + ESS_APPLY.APPLY_OT_FLAG,
					               'YYYY-MM-DD ') || ESS_APPLY.OT_TO_TIME AS otToTime,
					       CASE
					         WHEN OT_LENGTH > 0 THEN
					          OT_LENGTH
					         ELSE
					          (TO_DATE(TO_CHAR(ESS_APPLY.APPLY_OT_DATE + ESS_APPLY.APPLY_OT_FLAG,
					                           'YYYY-MM-DD ') || ESS_APPLY.OT_TO_TIME,
					                   'YYYY-MM-DD HH24:MI') -
					          TO_DATE(TO_CHAR(ESS_APPLY.APPLY_OT_DATE, 'YYYY-MM-DD ') ||
					                   ESS_APPLY.OT_FROM_TIME,
					                   'YYYY-MM-DD HH24:MI')) * 24 - ESS_APPLY.OT_DEDUCT_TIME
					       END AS otLength,
					       ESS_APPLY.APPLY_OT_REMARK AS otRemark,
					       ESS_APPLY.APPLY_OT_FLAG AS otNextDays,
					       TO_CHAR(ESS_APPLY.CREATE_DATE, 'YYYY-MM-DD') AS createDate,
					       ESS_APPLY.OT_DEDUCT_TIME AS otDeduct,
					       ESS_APPLY.CREATED_BY AS createdBy,
					       ESS_APPLY.ACTIVITY AS activity,
					       (SELECT MAX(ESS_AFFIRM.AFFIRM_FLAG)
					          FROM ESS_AFFIRM
					         WHERE ESS_AFFIRM.APPLY_NO=ESS_APPLY.APPLY_OT_NO
					         AND ESS_AFFIRM.APPLY_TYPE='OtApply') AS affirm_flag,
					       ESS_APPLY.APPLY_OT_AFFIRM AS forceType

					  FROM (SELECT ESS_APPLY_OT.*,
				               HR.POST_CODE,
				               HR.POST_GRADE_CODE,
				               HR.PERSON_ID,
				               HR.DEPTID,
				               HR.CHINESENAME,
				               HY.CHINESENAME AS crechineseName,
				               HR.EMPID HREMPID
				          FROM ESS_APPLY_OT, HR_EMPLOYEE HR	, HR_EMPLOYEE HY
				         WHERE ESS_APPLY_OT.EMPID = HR.Person_Id
				         AND   ESS_APPLY_OT.Created_By = HY.Person_Id
						 AND HR.Person_Id  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
		]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    ESS_APPLY_OT.APPLY_OT_NO = #applyNo#
			]]>
		</isNotEmpty>
		<isNotEqual prepend="" property="qryType"  compareValue="3">
			<isEqual prepend="AND" property="qryType" compareValue="0"> <!-- 未确认 -->
				<![CDATA[
		        ESS_APPLY_OT.ACTIVITY=0
		    ]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 已确认 -->
				<![CDATA[
		        ESS_APPLY_OT.ACTIVITY=1
		    ]]>
			</isEqual>
			<isEqual prepend="AND" property="qryType" compareValue="2"> <!-- 否决 -->
				<![CDATA[
		      ESS_APPLY_OT.ACTIVITY=2
		    ]]>
			</isEqual>
		</isNotEqual>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
			    (
			    	HR.EMPID LIKE #key:VARCHAR# || '%'
			     OR HR.CHINESENAME LIKE #key:VARCHAR# || '%'
			     OR UPPER(HR.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%'
				)
		]]>
		</isNotEmpty>
		<![CDATA[
			 ) ESS_APPLY,
			   SY_CODE,
			  (SELECT CODE_ID, CODE_NAME FROM SY_CODE SY  WHERE SY.PARENT_CODE = 'PositionCode') SY_POSITION,
			  (SELECT CODE_ID,CODE_NAME FROM SY_CODE SY WHERE SY.PARENT_CODE = 'PostGradeCode') SY_GRADE_CODE,
			 HR_DEPARTMENT DE,
			 HR_DEPARTMENT FOURS
			 WHERE ESS_APPLY.APPLY_OT_TYPE_CODE = SY_CODE.CODE_ID(+)
			   AND ESS_APPLY.POST_CODE = SY_POSITION.CODE_ID(+)
			   AND ESS_APPLY.POST_GRADE_CODE = SY_GRADE_CODE.CODE_ID(+)
			   AND ESS_APPLY.DEPTID=DE.DEPTID
			   AND DE.FOURTHDEPT=FOURS.DEPTID
				ORDER BY ESS_APPLY.ACTIVITY DESC, ESS_APPLY.APPLY_OT_DATE DESC ,FOURS.DEPTID,ESS_APPLY.DEPTID
		]]>
	</select>

	<select id="leaveApplyInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
				    SELECT ESS_LEAVE_APPLY_TB.LEAVE_NO													AS leaveNo,
					       ESS_LEAVE_APPLY_TB.APPLY_GROUP_NO											AS applyGroupSeq,
					       HR_EMPLOYEE.EMPID												            AS empId,
					       HR_EMPLOYEE.PERSON_ID													    AS PERSON_ID,
					       HR_EMPLOYEE.CHINESENAME 														AS chineseName,
					       HY.CHINESENAME 																AS crechineseName,
					       HR_EMPLOYEE.deptname 														AS deptName,
					       HR_EMPLOYEE.FOURTHDEPTNAME 													AS fourthDeptName,
					       SY_POSITION.CODE_NAME														AS position,

					       SY_GRADE_CODE.CODE_NAME                                                      AS postGradeCode,

					       ESS_LEAVE_APPLY_TB.LEAVE_TYPE												AS leaveTypeCode,
					       SY_CODE.CODE_NAME 			      											AS leaveTypeName,
					       TO_CHAR(ESS_LEAVE_APPLY_TB.CREATE_DATE, 'YYYY-MM-DD') 						AS createDate,
					       TO_CHAR(ESS_LEAVE_APPLY_TB.LEAVE_FROM_TIME, 'YYYY-MM-DD HH24:MI') 			AS leaveFromTime,
					       TO_CHAR(ESS_LEAVE_APPLY_TB.LEAVE_TO_TIME, 'YYYY-MM-DD HH24:MI') 				AS leaveToTime,
					       ESS_LEAVE_APPLY_TB.LEAVE_REASON												AS leaveReason,
					       ESS_LEAVE_APPLY_TB.ACTIVITY													AS activity,
					       ESS_LEAVE_APPLY_TB.CREATED_BY												AS createdBy,
					       ESS_LEAVE_APPLY_TB.REMARK													AS remark,
					       ALTYPE.CODE_NAME                                                             as applyLeaveType,
					       ESS_LEAVE_APPLY_TB.FILE_UPLOAD_FLAG											AS fileUploadFlag,
					       DECODE(ESS_LEAVE_APPLY_STS.STS,'Y','正常','N','异常','未确认')				AS sts
					    FROM ESS_LEAVE_APPLY_TB,
					   		 ESS_LEAVE_APPLY_STS,
					         SY_CODE,
					         SY_CODE SY_POSITION,
					         (SELECT CODE_ID,CODE_NAME FROM SY_CODE SY WHERE SY.PARENT_CODE = 'PostGradeCode') SY_GRADE_CODE,
					         HR_EMP_V HR_EMPLOYEE,
					         HR_EMPLOYEE HY,
					         SY_CODE ALTYPE
					   WHERE ESS_LEAVE_APPLY_TB.LEAVE_TYPE = SY_CODE.CODE_ID(+)
					     AND HY.PERSON_ID = ESS_LEAVE_APPLY_TB.Created_By
					     AND HR_EMPLOYEE.POST_CODE = SY_POSITION.CODE_ID(+)
					     AND HR_EMPLOYEE.POST_GRADE_CODE = SY_GRADE_CODE.CODE_ID(+)
						 AND SY_POSITION.PARENT_CODE(+) = 'PositionCode'
					     AND ESS_LEAVE_APPLY_TB.LEAVE_EMPID = HR_EMPLOYEE.PERSON_ID
					     AND ESS_LEAVE_APPLY_TB.APPLYLEAVETYPE = ALTYPE.CODE_ID(+)
					     AND ESS_LEAVE_APPLY_TB.LEAVE_NO = ESS_LEAVE_APPLY_STS.LEAVE_NO(+)
					     AND HR_EMPLOYEE.Person_Id  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
		]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    ESS_LEAVE_APPLY_TB.LEAVE_NO = #applyNo#
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
			    (
			    	HR_EMPLOYEE.EMPID LIKE #key:VARCHAR# || '%'
		         OR HR_EMPLOYEE.CHINESENAME LIKE #key:VARCHAR# || '%'
		         OR UPPER(HR_EMPLOYEE.CHINESE_PINYIN) LIKE UPPER(#key:VARCHAR#) || '%'
				)
			]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="sDate">
			<![CDATA[
			   (   ESS_LEAVE_APPLY_TB.LEAVE_FROM_TIME BETWEEN TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        		OR ESS_LEAVE_APPLY_TB.LEAVE_TO_TIME BETWEEN TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
				OR ESS_LEAVE_APPLY_TB.LEAVE_FROM_TIME < TO_DATE(#sDate:VARCHAR#, 'YYYY-MM-DD') AND ESS_LEAVE_APPLY_TB.LEAVE_TO_TIME > TO_DATE(#eDate:VARCHAR# || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
			   )
   			]]>
		</isNotEmpty>
		<![CDATA[
			 ORDER BY ESS_LEAVE_APPLY_TB.CREATE_DATE DESC
		]]>
	</select>

	<select id="expressApplyInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
		select A.APPLY_NO,
				   A.APPLYOR_ID,
				   A.SENDPERSON,
				   A.DEPTID,
				   A.CITYSENDTO,
				   A.POSTADDRESS,
				   A.EXPRESSTYPE,
				   A.ISSEND,
				   A.POSTNUMBER,
				   A.SENDTOPERSON,
				   A.ISCONFIRM,
				   A.SENTDATE,
				   A.CONFIRMDATE,
				   A.NOTE,
				   A.ACTIVE,
				   A.POSTDESCRIPTION,
				   A.CONFIRORANDSENDOR,
				   A.COSTS,
				   A.CITYARRIVE,
				   A.CAUSE,
				   A.CONFIRMIDEA,
				   A.ISOVER_KG,
				   A.CITYSENDTO_S,
				   A.CITYSENDTO_Q,
				   A.CITYSENDTO_D,
				   A.CITYARRIVE_S,
				   A.CITYARRIVE_Q,
				   A.CITYARRIVE_D,
				   A.MOBILE_S,
				   A.MOBILE_A,
				   A.POST_CODE_S,
				   A.POST_CODE_A,
			   code.code_name,
			   hr.chinesename as sendpersonname,
			   v.deptname as deptname,
			   applyemp.chinesename as applyempname,
			   applyemp.EMPID AS EMPID1,
			   HR.EMPID AS EMPID2,
			   hr1.chinesename as CONFIRORANDSENDORNAME,
			   GET_CODE_NAME(a.EXP_TYPE) EXP_TYPE,
				   TO_CHAR(A.APPLYDATE ,'YYYY-MM-DD HH24:MI') APPLYDATE
		  from ga_express_apply  a,
			   hr_employee       hr,
			   hr_employee       hr1,
			   hr_employee       applyemp,
			   sy_code           code,
			   hr_department     v
		 where  a.applyor_id = applyemp.person_id(+)
		   and hr.person_id(+) = a.sendperson
		   and hr1.person_id(+) = a.CONFIRORANDSENDOR
		   and code.code_id = a.expresstype
		   and v.deptid = a.deptid
		   and a.apply_no in( select distinct t.apply_no from ga_express_affirm t where  t.activity='1' )
		   AND A.APPLYOR_ID  in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
		 ]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    A.APPLY_NO = #applyNo#
			]]>
		</isNotEmpty>
		<isEqual prepend="AND" property="qryType" compareValue="0"> <!-- 未决裁过的 -->
			<![CDATA[
				 a.ISCONFIRM =0
	]]>
		</isEqual>
		<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁通过的 -->
			<![CDATA[
				 a.ISCONFIRM =1
	]]>
		</isEqual>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
		 (a.applyor_id LIKE  '%'||#key:VARCHAR# || '%'  or a.sendperson LIKE  '%'||#key:VARCHAR# || '%'  or hr.chinesename LIKE  '%'||#key:VARCHAR# || '%'  or hr.empid LIKE '%'||#key:VARCHAR# || '%')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptid">
			<![CDATA[
		 a.deptid=#deptid:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[
		 to_char(a.applydate,'yyyy-mm-dd') between #startDate:VARCHAR#  and #endDate:VARCHAR#
		]]>
		</isNotEmpty>
		<![CDATA[
			 order by a.applydate desc
		]]>
	</select>

	<select id="getExpressApplyInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
		select a.*,
			   GET_CODE_NAME(a.EXP_TYPE) EXP_TYPE
		  from ga_express_apply  a
		 where  a.apply_no = #APPLY_NO#
		 ]]>
		<isEqual prepend="AND" property="qryType" compareValue="0"> <!-- 未决裁过的 -->
			<![CDATA[
				 a.ISCONFIRM =0
	]]>
		</isEqual>
		<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁通过的 -->
			<![CDATA[
				 a.ISCONFIRM =1
	]]>
		</isEqual>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
		 (a.applyor_id LIKE  '%'||#key:VARCHAR# || '%'  or a.sendperson LIKE  '%'||#key:VARCHAR# || '%'  or hr.chinesename LIKE  '%'||#key:VARCHAR# || '%'  or hr.empid LIKE '%'||#key:VARCHAR# || '%')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptid">
			<![CDATA[
		 a.deptid=#deptid:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[
		 to_char(a.applydate,'yyyy-mm-dd') between #startDate:VARCHAR#  and #endDate:VARCHAR#
		]]>
		</isNotEmpty>
		<![CDATA[
			 order by a.applydate desc
		]]>
	</select>

	<select id="sealApplyInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			select seal.documentno,
				seal.active,
			   e.chinesename,
			   seal.APPLYORID,
			   hr1.chinesename as CONFIRORANDSENDORNAME,
			   t.deptname as applydeptname,
			   to_char(seal.usedate, 'YYYY-MM-DD') as USEDATE,
			   get_code_name(seal.USESEALTYPE) as code_name,
			   seal.SELECTDEPTID as deptname,
			   CASE WHEN seal.islend=1
			   THEN '是'  ELSE '否'
			   END ISLEND,
			   USEINFORMATION,
			   USESHARES,
			   DRAFT_NO,
			   NOTE,
			   seal.ISCONFIRM,
			   seal.FILENAME,
			   seal.FILEPATH,
			   to_char(seal.returndate, 'YYYY-MM-DD') as RETURNDATE
		  from GA_SEAL_APPLY seal, hr_department t, hr_employee e,HR_EMPLOYEE HR1
		 where seal.applyordeptid = t.deptid and HR1.PERSON_ID(+)=seal.CONFIRMORID
		   and seal.applyorid = e.person_id
		   and seal.documentno in (select distinct  a.apply_no from GA_SEAL_AFFIRM a where a.activity =1)
		   and seal.APPLYORID in (
							                 	SELECT PERSON_ID FROM HR_EMPLOYEE WHERE KO_PERSON_ID = #empid#
							                 )
		  ]]>
		<isNotEmpty prepend="AND" property="applyNo">
			<![CDATA[
			    seal.documentno = #applyNo#
			]]>
		</isNotEmpty>
		<isEqual prepend="AND" property="qryType" compareValue="0"> <!-- 未决裁过的 -->
			<![CDATA[
				 seal.ISCONFIRM=0
	]]>
		</isEqual>
		<isEqual prepend="AND" property="qryType" compareValue="1"> <!-- 决裁通过的 -->
			<![CDATA[
				 seal.ISCONFIRM =1
	]]>
		</isEqual>
		<isNotEmpty prepend="AND" property="key">
			<![CDATA[
		 (e.empid LIKE  '%'||#key:VARCHAR# || '%' or e.chinesename LIKE  '%'||#key:VARCHAR# || '%')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="key2">
			<![CDATA[
		 (seal.SELECTDEPTID LIKE  '%'||#key2:VARCHAR# || '%' )
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="key3">
			<![CDATA[
		 (seal.USEINFORMATION LIKE  '%'||#key3:VARCHAR# || '%' )
		]]>
		</isNotEmpty>
		<isNotEmpty  property="qryType2">
			<isNotEqual prepend="AND" property="qryType2" compareValue="SealType_Code00"> <!-- 请点击下拉条准确选择印章类型 -->
				<![CDATA[
					 (seal.USESEALTYPE LIKE  '%'||#qryType2:VARCHAR# || '%'  )
		]]>
			</isNotEqual>
		</isNotEmpty>
		<isNotEmpty prepend="AND"  property="codeName">
			<![CDATA[
				(get_code_name(seal.USESEALTYPE) LIKE  '%'||#codeName:VARCHAR# || '%'  )
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="qryType3">
			<![CDATA[
		 (seal.ISLEND =  #qryType3:VARCHAR# )
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="deptid">
			<![CDATA[
		 seal.APPLYORDEPTID=#deptid:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cpnyId">
			<![CDATA[
		 t.CPNY_ID=#cpnyId:VARCHAR#
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="startDate">
			<![CDATA[
		 seal.USEDATE >= to_date(#startDate:VARCHAR#,'YYYY-MM-DD')
		]]>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="endDate">
			<![CDATA[
			 seal.USEDATE <=to_date(#endDate:VARCHAR#,'YYYY-MM-DD')
			]]>
		</isNotEmpty>
		<![CDATA[
		 order by seal.documentno desc
		]]>
	</select>

	<select id="getCardInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
			SELECT HR.CHINESENAME,
				   TO_CHAR(C.APPLY_DATE,'YYYY-MM-DD') || ' ' ||  C.APPLY_STARTTIME USE_START_DATE,
				   TO_CHAR(C.APPLY_ENDDATE,'YYYY-MM-DD') || ' ' || C.APPLY_ENDTIME USE_END_DATE,
				   DECODE(C.DISTINCTION,1,'接','送') DISTINCTION,
				   C.DRIVE_WAY,
				   C.NOTE,
				   B.DRIVER,
				   B.EMPNAME,
				   B.DRIVER_PHONE,
				   A.LARDER,
				   A.LARDER_DEPTNAME,
				   A.LARDER_POST,
				   A.APPLY_USERSCOUNT,
				   A.TELL_PHONE,
				   TO_CHAR(SYSDATE,'YYYYMMDDHH24MI') SEND_TIME
			  FROM GA_VOITURE_APPLY A,
				   GA_BOOKING_VOITURE B,
				   GA_VOITURE_APPLY_DISTINCTION C,
				   HR_EMPLOYEE HR
			  WHERE A.VOITURE_APPLYID = B.APPLYNO
				AND A.VOITURE_APPLYID = C.APPLY_NO
				AND A.APPLYER_ID = HR.PERSON_ID
				AND A.VOITURE_APPLYID = #APPLY_NO#
				AND B.DRIVER_PHONE IS NOT NULL
		]]>
	</select>

	<!--调用快递鸟接口需要-->
	<select id="getExpInfo" parameterClass="SimpleMap" resultClass="SimpleMap">
		<![CDATA[
		select A.APPLY_NO,
			   A.CITYSENDTO_S,
			   A.CITYSENDTO,
			   A.CITYSENDTO_Q,
			   A.CITYSENDTO_D,
			   A.MOBILE_S,
			   HR.CHINESENAME SENDPERSON,

			   A.CITYARRIVE_S,
			   A.CITYARRIVE,
			   A.CITYARRIVE_Q,
			   A.CITYARRIVE_D,
			   A.MOBILE_A,
			   A.SENDTOPERSON,
			   A.POSTADDRESS,
			   A.EXPRESSTYPE,
			   A.POST_CODE_S,
			   A.POST_CODE_A,

			   GET_CODE_NAME(a.EXP_TYPE) EXP_TYPE,
			   MSG,
			   POSTNUMBER

		  from ga_express_apply  a,
			   hr_employee       hr
		 where hr.person_id = a.sendperson
		   and a.apply_no = #APPLY_NO#
		]]>
	</select>

	<!--插入短信信息-->
	<insert id="insertSms" parameterClass="SimpleMap" >
		<![CDATA[
			INSERT INTO SYS_SMS
			  (APPLY_NO, ACCOUNT, PASSWORD, PHONES, CONTENT, SIGN, ACTIVITY, MSG)
			VALUES
			  (#APPLY_NO#,
			   #account#,
			   #password#,
			   #phones#,
			   #content#,
			   #sign#,
			   #FLAG#,
			   #MSG#)
		]]>
	</insert>

	<update id="updateExp" parameterClass="SimpleMap" >
		<![CDATA[
			UPDATE GA_EXPRESS_APPLY
			   SET MSG = #MSG#,
			   	   POSTNUMBER = #POSTNUMBER#
			  WHERE APPLY_NO = #APPLY_NO#
			    AND APPLYDATE > TO_DATE('2019-09-09','YYYY-MM-DD')
		]]>
	</update>

	<!-- 查询推送消息 -->
	<select id="getPushInfoByPersonID" parameterClass="SimpleMap" resultClass="SimpleMap">
		<isEqual prepend="" property="APPLY_TYPE" compareValue="LEAVE">
			<![CDATA[
				SELECT  '[人事系统]勤态审批' TITLE,
					   HR.CHINESENAME || '申请了' ||
					   TO_CHAR(ESS.LEAVE_FROM_TIME, 'YYYY-MM-DD HH24:MI') || '~' ||
					   TO_CHAR(ESS.LEAVE_TO_TIME, 'YYYY-MM-DD HH24:MI') || '的' ||
					   GET_CODE_NAME(ESS.LEAVE_TYPE) || ',请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM ESS_LEAVE_APPLY_TB ESS, HR_EMPLOYEE HR
				 WHERE ESS.LEAVE_NO = #APPLY_NO#
				   AND ESS.LEAVE_EMPID = HR.PERSON_ID
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="OT">
			<![CDATA[
				SELECT '[人事系统]加班审批' TITLE,
					   HR.CHINESENAME || '申请了' || TO_CHAR(ESS.APPLY_OT_DATE, 'YYYY-MM-DD ') ||
					   ESS.OT_FROM_TIME || '~' || ESS.OT_TO_TIME || '的' ||
					   GET_CODE_NAME(ESS.APPLY_OT_TYPE_CODE) || ',请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID, HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM ESS_APPLY_OT ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLY_OT_NO = #APPLY_NO#
				   AND ESS.EMPID = HR.PERSON_ID
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="AR">
			<![CDATA[
				SELECT '[人事系统]考勤修改审批' TITLE,
					   HR.CHINESENAME || ESS.AR_DATE_STR || '的考勤有修改,请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID, HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM AR_DETAIL_BACK ESS, HR_EMPLOYEE HR
				 WHERE ESS.EMPID = HR.PERSON_ID
				   AND ESS.AR_PK_NO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="PRESENT">
			<![CDATA[
				SELECT '[人事系统]礼品审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.CREATE_DATE,'YYYY-MM-DD') || '申请了礼品,请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID, HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM GA_PRESENT_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.CREATED_BY = HR.PERSON_ID
				   AND ESS.SEQ_NO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="EXPRESS">
			<![CDATA[
				SELECT '[人事系统]快递审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLYDATE, 'YYYY-MM-DD') ||
					   '申请了快递,请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID, HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM GA_EXPRESS_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLYOR_ID = HR.PERSON_ID
				   AND ESS.APPLY_NO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="SEAL">
			<![CDATA[
				SELECT '[人事系统]公章审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLYDATE, 'YYYY-MM-DD') ||
					   '申请了公章,请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID, HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM GA_SEAL_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLYORID = HR.PERSON_ID
				   AND ESS.DOCUMENTNO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="TEMP_CARD">
			<![CDATA[
				SELECT '[人事系统]临时卡审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLY_DATE, 'YYYY-MM-DD') ||
					   '申请了临时卡,请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID, HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM GA_TEMPCARD_APPLICATION ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLYER = HR.PERSON_ID
				   AND ESS.APPLY_NO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="VISITER">
			<![CDATA[
				SELECT '[人事系统]参观者审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLY_DATE, 'YYYY-MM-DD') ||
					   '申请了参观者,请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID, HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM GA_VISITER_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.PLAY_APPLY = HR.PERSON_ID
				   AND ESS.GA_VISITER_APPLY_ID = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="VISA">
			<![CDATA[
				SELECT '[人事系统]签证审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLYDATE, 'YYYY-MM-DD') ||
					   '申请了签证,请前往人事系统审批.' CONTENT,
					   (select NVL(HE.AD_USER_ID, HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE
						 WHERE HE.STATUS_CODE <> 'EmpStatus3'
						   AND HE.PERSON_ID = #SEND_ID#) SEND_ID
				  FROM GA_VISA_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLYORID = HR.PERSON_ID
				   AND ESS.DOCUMENTNO = #APPLY_NO#
			]]>
		</isEqual>
	</select>

	<!-- 查询推送消息 -->
	<select id="getPushInfoByLevel" parameterClass="SimpleMap" resultClass="SimpleMap">
		<isEqual prepend="" property="APPLY_TYPE" compareValue="LEAVE">
			<![CDATA[
				SELECT  '[人事系统]勤态审批' TITLE,
					   HR.CHINESENAME || '申请了' ||
					   TO_CHAR(ESS.LEAVE_FROM_TIME, 'YYYY-MM-DD HH24:MI') || '~' ||
					   TO_CHAR(ESS.LEAVE_TO_TIME, 'YYYY-MM-DD HH24:MI') || '的' ||
					   GET_CODE_NAME(ESS.LEAVE_TYPE) || ',请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,ESS_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.APPLY_NO = ESS.LEAVE_NO
				   		   AND EA.APPLY_TYPE = 'LeaveApply'
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM ESS_LEAVE_APPLY_TB ESS, HR_EMPLOYEE HR
				 WHERE ESS.LEAVE_NO = #APPLY_NO#
				   AND ESS.LEAVE_EMPID = HR.PERSON_ID
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="OT">
			<![CDATA[
				SELECT '[人事系统]加班审批' TITLE,
					   HR.CHINESENAME || '申请了' || TO_CHAR(ESS.APPLY_OT_DATE, 'YYYY-MM-DD ') ||
					   ESS.OT_FROM_TIME || '~' || ESS.OT_TO_TIME || '的' ||
					   GET_CODE_NAME(ESS.APPLY_OT_TYPE_CODE) || ',请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,ESS_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.APPLY_NO = ESS.APPLY_OT_NO
				   		   AND EA.APPLY_TYPE = 'OtApply'
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM ESS_APPLY_OT ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLY_OT_NO = #APPLY_NO#
				   AND ESS.EMPID = HR.PERSON_ID
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="AR">
			<![CDATA[
				SELECT '[人事系统]考勤修改审批' TITLE,
					   HR.CHINESENAME || ESS.AR_DATE_STR || '的考勤有修改,请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,AR_DETAIL_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.AR_DETAIL_NO = ESS.AR_PK_NO
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM AR_DETAIL_BACK ESS, HR_EMPLOYEE HR
				 WHERE ESS.EMPID = HR.PERSON_ID
				   AND ESS.AR_PK_NO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="PRESENT">
			<![CDATA[
				SELECT '[人事系统]礼品审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.CREATE_DATE,'YYYY-MM-DD') || '申请了礼品,请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,GA_PRESENT_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.APPLY_NO = ESS.SEQ_NO
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM GA_PRESENT_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.CREATED_BY = HR.PERSON_ID
				   AND ESS.SEQ_NO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="EXPRESS">
			<![CDATA[
				SELECT '[人事系统]快递审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLYDATE, 'YYYY-MM-DD') ||
					   '申请了快递,请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,GA_EXPRESS_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.APPLY_NO = ESS.APPLY_NO
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM GA_EXPRESS_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLYOR_ID = HR.PERSON_ID
				   AND ESS.APPLY_NO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="SEAL">
			<![CDATA[
				SELECT '[人事系统]公章审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLYDATE, 'YYYY-MM-DD') ||
					   '申请了公章,请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,GA_SEAL_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.APPLY_NO = ESS.DOCUMENTNO
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM GA_SEAL_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLYORID = HR.PERSON_ID
				   AND ESS.DOCUMENTNO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="TEMP_CARD">
			<![CDATA[
				SELECT '[人事系统]临时卡审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLY_DATE, 'YYYY-MM-DD') ||
					   '申请了临时卡,请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,GA_TEMPCARD_APPLICATION_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.APPLY_NO = ESS.APPLY_NO
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM GA_TEMPCARD_APPLICATION ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLYER = HR.PERSON_ID
				   AND ESS.APPLY_NO = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="VISITER">
			<![CDATA[
				SELECT '[人事系统]参观者审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLY_DATE, 'YYYY-MM-DD') ||
					   '申请了参观者,请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,GA_VISITER_APPLY_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.APPLY_NO = ESS.GA_VISITER_APPLY_ID
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM GA_VISITER_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.PLAY_APPLY = HR.PERSON_ID
				   AND ESS.GA_VISITER_APPLY_ID = #APPLY_NO#
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="VISA">
			<![CDATA[
				SELECT '[人事系统]签证审批' TITLE,
					   HR.CHINESENAME || TO_CHAR(ESS.APPLYDATE, 'YYYY-MM-DD') ||
					   '申请了签证,请前往人事系统审批.' CONTENT,
					   (SELECT NVL(HE.AD_USER_ID,HE.KO_PERSON_ID)
						  FROM HR_EMPLOYEE HE,GA_VISA_AFFIRM EA
						 WHERE HE.PERSON_ID = EA.AFFIRMOR_ID
						   AND EA.APPLY_NO = ESS.DOCUMENTNO
				   		   AND EA.AFFIRM_LEVEL = #AFFIRM_LEVEL#
				   		   AND EA.AFFIRM_FLAG = 0
						   AND HE.STATUS_CODE <> 'EmpStatus3') SEND_ID
				  FROM GA_VISA_APPLY ESS, HR_EMPLOYEE HR
				 WHERE ESS.APPLYORID = HR.PERSON_ID
				   AND ESS.DOCUMENTNO = #APPLY_NO#
			]]>
		</isEqual>
	</select>

	<!-- 查询推送人 -->
	<select id="getPushPersonId" parameterClass="SimpleMap" resultClass="string">
		<isEqual prepend="" property="APPLY_TYPE" compareValue="LEAVE">
			<![CDATA[
				SELECT ESS.AFFIRMOR_ID SEND_ID
				  FROM ESS_AFFIRM ESS
				 WHERE ESS.APPLY_NO = #APPLY_NO#
				   AND ESS.APPLY_TYPE = 'LeaveApply'
				   AND ESS.AFFIRM_LEVEL = 1
				   AND ESS.AFFIRM_FLAG = 0
			]]>
		</isEqual>
		<isEqual prepend="" property="APPLY_TYPE" compareValue="OT">
			<![CDATA[
				SELECT ESS.AFFIRMOR_ID SEND_ID
				  FROM ESS_AFFIRM ESS
				 WHERE ESS.APPLY_NO = #APPLY_NO#
				   AND ESS.APPLY_TYPE = 'OtApply'
				   AND ESS.AFFIRM_LEVEL = 1
				   AND ESS.AFFIRM_FLAG = 0
			]]>
		</isEqual>
	</select>

	<!--插入推送信息-->
	<insert id="insertNotice" parameterClass="SimpleMap" >
		<![CDATA[
			INSERT INTO SYS_NOTICE
			  (SEQ, APPLY_NO, APPLY_TYPE, TITLE, CONTENT, MSG, ACTIVITY ,SEND_ID)
			  VALUES
			  (SYS_NOTICE_SEQ.NEXTVAL,
				#APPLY_NO#,
				#APPLY_TYPE#,
				#TITLE#,
				#CONTENT#,
				#MSG#,
				#ACTIVITY# ,
				#SEND_ID#)
		]]>
	</insert>

	<!-- NEW retrieve employee list -->
	<select id="retrieveEmpList" parameterClass="SimpleMap"
			resultClass="SimpleMap">
		<![CDATA[
		        SELECT *
		          FROM
		 			(SELECT  A.PERSON_ID personId,
		 			        A.EMPID								    empID,
		 			        A.CHINESENAME,
		                    replace(B.DEPTNAME,'&','*')					department,
		                    A.Post_Code        						    positionCode,
		                    E.CODE_NAME            						position,
		                    F.CODE_NAME                  				postGrade,
						    A.EMP_DIFF_CODE								empDiffCode,
						    CPNY.CODE_NAME cpnyName,
                            A.CPNY_ID  cpnyId,
						    ROWNUM 									 AS COLUMN_NUM
		               FROM HR_EMPLOYEE A,
		                    HR_DEPARTMENT B,
		                    SY_CODE E,
		                    SY_CODE F,
							SY_CODE J,
							SY_CODE CPNY
		               WHERE A.DEPTID = B.DEPTID(+)
		                 AND A.Post_Code = E.CODE_ID(+)
		                 AND A.POST_GRADE_CODE = F.CODE_ID(+)
					     AND A.STATUS_CODE=J.CODE_ID(+)
					     AND A.CPNY_ID=CPNY.CODE_ID(+)
					     AND A.CPNY_ID=F.CPNY_ID(+)
					     AND NVL(A.DATE_LEFT,TO_DATE('2999-12-31','YYYY-MM-DD')) > SYSDATE-30
					     AND A.CPNY_ID=#cpnyId:VARCHAR#
					     AND A.ACTIVITY = 1
		]]>

		<isNotEmpty prepend="AND" property="CONDITION">
			<![CDATA[
					(
						A.CHINESENAME 		LIKE  '%'||#CONDITION:VARCHAR#||'%'
						OR A.person_id 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR A.EMPID 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR  LOWER(A.CHINESE_PINYIN) LIKE '%'|| LOWER(#CONDITION:VARCHAR#)||'%'
						OR b.deptname 			LIKE '%'||#CONDITION:VARCHAR#||'%'
						OR b.deptid 			LIKE '%'||#CONDITION:VARCHAR#||'%'
					)
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="DEPTID">
			<![CDATA[
					EXISTS (
						SELECT     *
		                     	FROM HR_DEPARTMENT B1
		                     	WHERE B1.DEPTID=A.DEPTID
		                 	START WITH B1.DEPTID = #DEPTID:VARCHAR#
		                 	CONNECT BY PRIOR B1.DEPTID = B1.PARENT_DEPT_ID
		                )
             ]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SUPERVISOR_ID">
			<![CDATA[
						 (EXISTS ( SELECT *
	                                FROM AR_SUPERVISOR_INFO J
	                               WHERE AR_SUPERVISOR_ID = #SUPERVISOR_ID:VARCHAR#
	                                 AND A.DEPTID = J.SUPERVISED_DEPTID
	                              )
						        OR A.person_id = #SUPERVISOR_ID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="ADMINID">
			<![CDATA[
	    		          (EXISTS ( SELECT *
	                                FROM AR_SUPERVISOR_INFO J
	                               WHERE AR_SUPERVISOR_ID = #ADMINID:VARCHAR#
	                                 AND A.DEPTID = J.SUPERVISED_DEPTID
	                               )
						          OR A.person_id = #ADMINID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<isNotEmpty prepend="AND" property="SYS_ADMINID">
			<![CDATA[
	    		   EXISTS ( SELECT SD.ADMIN_DEPTID
							  FROM SY_ADMIN_DEPTID SD, SY_ADMIN SA
							 WHERE SD.ADMIN_NO = SA.ADMINNO
							   AND SA.ADMINID = #SYS_ADMINID:VARCHAR#
							   AND A.DEPTID = SD.ADMIN_DEPTID
						        OR SA.ADMINID = #SYS_ADMINID:VARCHAR#
						  )
			]]>
		</isNotEmpty>

		<![CDATA[
			)
		WHERE COLUMN_NUM <= 100
	     ORDER BY  empID
		 ]]>
	</select>
</sqlMap>